)]}'
{"version": 3, "sources": ["/base/static/tests/test_ir_model_fields_translation.js", "/web/static/tests/legacy/helpers/test_utils_file.js", "/web/static/tests/helpers/cleanup.js", "/web/static/tests/helpers/utils.js", "/web/static/tests/utils.js", "/mail/static/tests/tours/discuss_public_tour.js", "/mail/static/tests/tours/mail_channel_as_guest_tour.js", "/mail/static/tests/tours/mail_full_composer_test_tour.js", "/mail/static/tests/tours/user_modify_own_profile_tour.js", "/portal/static/tests/tours/portal.js", "/website/static/tests/tour_utils/widget_lifecycle_dep_widget.js", "/website/static/tests/tours/automatic_editor.js", "/website/static/tests/tours/carousel_content_removal.js", "/website/static/tests/tours/client_action_iframe_fallback.js", "/website/static/tests/tours/client_action_redirect.js", "/website/static/tests/tours/conditional_visibility.js", "/website/static/tests/tours/conditional_visibility_frontend.js", "/website/static/tests/tours/configurator_translation.js", "/website/static/tests/tours/default_shape_gets_palette_colors.js", "/website/static/tests/tours/drag_and_drop_on_non_editable.js", "/website/static/tests/tours/edit_link_popover.js", "/website/static/tests/tours/edit_megamenu.js", "/website/static/tests/tours/edit_menus.js", "/website/static/tests/tours/edit_translated_page.js", "/website/static/tests/tours/editable_root_as_custom_snippet.js", "/website/static/tests/tours/focus_blur_snippets.js", "/website/static/tests/tours/gray_color_palette.js", "/website/static/tests/tours/grid_layout.js", "/website/static/tests/tours/homepage_edit_discard.js", "/website/static/tests/tours/html_editor.js", "/website/static/tests/tours/link_tools.js", "/website/static/tests/tours/media_dialog.js", "/website/static/tests/tours/media_iframe_video.js", "/website/static/tests/tours/multi_edition.js", "/website/static/tests/tours/page_manager.js", "/website/static/tests/tours/parallax.js", "/website/static/tests/tours/public_user_editor.js", "/website/static/tests/tours/reset_password.js", "/website/static/tests/tours/restricted_editor.js", "/website/static/tests/tours/rte.js", "/website/static/tests/tours/snippet_background_edition.js", "/website/static/tests/tours/snippet_cache_across_websites.js", "/website/static/tests/tours/snippet_countdown.js", "/website/static/tests/tours/snippet_editor_panel_options.js", "/website/static/tests/tours/snippet_empty_parent_autoremove.js", "/website/static/tests/tours/snippet_image_gallery.js", "/website/static/tests/tours/snippet_images_wall.js", "/website/static/tests/tours/snippet_popup_add_remove.js", "/website/static/tests/tours/snippet_popup_and_animations.js", "/website/static/tests/tours/snippet_popup_and_scrollbar.js", "/website/static/tests/tours/snippet_social_media.js", "/website/static/tests/tours/snippet_table_of_content.js", "/website/static/tests/tours/snippet_translation.js", "/website/static/tests/tours/snippet_version.js", "/website/static/tests/tours/snippets_all_drag_and_drop.js", "/website/static/tests/tours/specific_website_editor.js", "/website/static/tests/tours/start_cloned_snippet.js", "/website/static/tests/tours/text_animations.js", "/website/static/tests/tours/translate_menu_name.js", "/website/static/tests/tours/unsplash_beacon.js", "/website/static/tests/tours/website_backend_menus_redirect.js", "/website/static/tests/tours/website_click_tests.js", "/website/static/tests/tours/website_form_editor.js", "/website/static/tests/tours/website_form_editor_frontend.js", "/website/static/tests/tours/website_navbar_menu.js", "/website/static/tests/tours/website_no_dirty_page.js", "/website/static/tests/tours/website_page_options.js", "/website/static/tests/tours/website_snippets_menu_tabs.js", "/website/static/tests/tours/website_style_edition.js", "/website/static/tests/tours/website_text_edition.js", "/website/static/tests/tours/widget_lifecycle.js", "/website/static/src/client_actions/website_preview/website_preview_test_mode.js", "/project/static/tests/tours/personal_stage_tour.js", "/project/static/tests/tours/project_burndown_chart_tour.js", "/project/static/tests/tours/project_sharing_tour.js", "/project/static/tests/tours/project_tags_filter_tour_tests.js", "/project/static/tests/tours/project_update_tour_tests.js", "/contacts/static/tests/tours/debug_menu_set_defaults.js", "/hr/static/tests/tours/hr_employee_flow.js", "/hr/static/tests/tours/user_modify_own_profile_tour.js", "/calendar/static/tests/tours/calendar_tour.js", "/hr_holidays/static/tests/tours/time_off_request_calendar_view.js", "/survey/static/tests/tours/certification_failure.js", "/survey/static/tests/tours/certification_success.js", "/survey/static/tests/tours/survey.js", "/survey/static/tests/tours/survey_chained_conditional_questions.js", "/survey/static/tests/tours/survey_prefill.js", "/survey/static/tests/tours/survey_session_manage_test.js", "/survey/static/tests/tours/survey_tour_session_create.js", "/survey/static/tests/tours/survey_tour_session_manage.js", "/survey/static/tests/tours/survey_tour_session_start.js", "/survey/static/tests/tours/survey_tour_session_tools.js", "/website_hr_recruitment/static/tests/tours/website_hr_recruitment.js", "/auth_totp/static/tests/totp_flow.js", "/auth_totp_mail/static/tests/totp_flow.js", "/auth_totp_portal/static/tests/totp_portal.js", "/website_links/static/tests/tours/website_links.js", "/website_mass_mailing/static/tests/tours/newsletter_block.js", "/website_mass_mailing/static/tests/tours/newsletter_popup.js"], "mappings": "AAAA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9CA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9JA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC3HA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC74BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChpBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjGA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtnhGA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5PA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC3EA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/BA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnnnCA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrCA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtxtRA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvrGA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACppJA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7PA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/WA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxrpJA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1FA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtxOA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACllIA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjCA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9CA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzBA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrzhOA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjCA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACZA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/DA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnHA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxpLA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnpGA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtEA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnrCA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpcA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrnnpFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjEA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA", "sourcesContent": ["/** @odoo-module **/\n\n\"use strict\";\n\nimport tour from \"web_tour.tour\";\n\nfunction checkLoginColumn(translation) {\n    return [\n        tour.stepUtils.showAppsMenuItem(), {\n            content: \"Settings\",\n            trigger: 'a[data-menu-xmlid=\"base.menu_administration\"]',\n            run: 'click',\n        }, {\n            content: \"Open Users & Companies\",\n            trigger: '[data-menu-xmlid=\"base.menu_users\"]',\n            run: \"click\",\n        }, {\n            content: \"Open Users\",\n            trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n            run: \"click\",\n        }, {\n            content: `Login column should be ${translation}`,\n            trigger: `[data-name=\"login\"] span:contains(\"${translation}\")`,\n        }\n    ]\n}\n\ntour.register('ir_model_fields_translation_en_tour', {\n    test: true,\n    url: '/web',\n}, checkLoginColumn('Login'));\n\ntour.register('ir_model_fields_translation_en_tour2', {\n    test: true,\n    url: '/web',\n}, checkLoginColumn('Login2'));\n\ntour.register('ir_model_fields_translation_fr_tour', {\n    test: true,\n    url: '/web',\n}, checkLoginColumn('Identifiant'));\n\ntour.register('ir_model_fields_translation_fr_tour2', {\n    test: true,\n    url: '/web',\n}, checkLoginColumn('Identifiant2'));\n", "odoo.define('web.test_utils_file', function () {\n\"use strict\";\n\n/**\n * FILE Test Utils\n *\n * This module defines various utility functions to help simulate events with\n * files, such as drag-and-drop.\n *\n * Note that all methods defined in this module are exported in the main\n * testUtils file.\n */\n\n\n//------------------------------------------------------------------------------\n// Private functions\n//------------------------------------------------------------------------------\n\n/**\n * Create a fake object 'dataTransfer', linked to some files, which is passed to\n * drag and drop events.\n *\n * @param {Object[]} files\n * @returns {Object}\n */\nfunction _createFakeDataTransfer(files) {\n    return {\n        dropEffect: 'all',\n        effectAllowed: 'all',\n        files,\n        getData: function () {\n            return files;\n        },\n        items: [],\n        types: ['Files'],\n    };\n}\n\n//------------------------------------------------------------------------------\n// Public functions\n//------------------------------------------------------------------------------\n\n/**\n * Create a file object, which can be used for drag-and-drop.\n *\n * @param {Object} data\n * @param {string} data.name\n * @param {string} data.content\n * @param {string} data.contentType\n * @returns {Promise<Object>} resolved with file created\n */\nfunction createFile(data) {\n    // Note: this is only supported by Chrome, and does not work in Incognito mode\n    return new Promise(function (resolve, reject) {\n        var requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        if (!requestFileSystem) {\n            throw new Error('FileSystem API is not supported');\n        }\n        requestFileSystem(window.TEMPORARY, 1024 * 1024, function (fileSystem) {\n            fileSystem.root.getFile(data.name, { create: true }, function (fileEntry) {\n                fileEntry.createWriter(function (fileWriter) {\n                    fileWriter.onwriteend = function (e) {\n                        fileSystem.root.getFile(data.name, {}, function (fileEntry) {\n                            fileEntry.file(function (file) {\n                                resolve(file);\n                            });\n                        });\n                    };\n                    fileWriter.write(new Blob([ data.content ], { type: data.contentType }));\n                });\n            });\n        });\n    });\n}\n\n/**\n * Drag a file over a DOM element\n *\n * @param {$.Element} $el\n * @param {Object} file must have been created beforehand (@see createFile)\n */\nfunction dragoverFile($el, file) {\n    var ev = new Event('dragover', { bubbles: true });\n    Object.defineProperty(ev, 'dataTransfer', {\n        value: _createFakeDataTransfer(file),\n    });\n    $el[0].dispatchEvent(ev);\n}\n\n/**\n * Drop a file on a DOM element.\n *\n * @param {$.Element} $el\n * @param {Object} file must have been created beforehand (@see createFile)\n */\nfunction dropFile($el, file) {\n    var ev = new Event('drop', { bubbles: true, });\n    Object.defineProperty(ev, 'dataTransfer', {\n        value: _createFakeDataTransfer([file]),\n    });\n    $el[0].dispatchEvent(ev);\n}\n\n/**\n * Drop some files on a DOM element.\n *\n * @param {$.Element} $el\n * @param {Object[]} files must have been created beforehand (@see createFile)\n */\nfunction dropFiles($el, files) {\n    var ev = new Event('drop', { bubbles: true, });\n    Object.defineProperty(ev, 'dataTransfer', {\n        value: _createFakeDataTransfer(files),\n    });\n    $el[0].dispatchEvent(ev);\n}\n\n/**\n * Set files in a file input\n *\n * @param {DOM.Element} el\n * @param {Object[]} files must have been created beforehand\n *   @see testUtils.file.createFile\n */\nfunction inputFiles(el, files) {\n    // could not use _createFakeDataTransfer as el.files assignation will only\n    // work with a real FileList object.\n    const dataTransfer = new window.DataTransfer();\n    for (const file of files) {\n        dataTransfer.items.add(file);\n    }\n    el.files = dataTransfer.files;\n    /**\n     * Changing files programatically is not supposed to trigger the event but\n     * it does in Chrome versions before 73 (which is on runbot), so in that\n     * case there is no need to make a manual dispatch, because it would lead to\n     * the files being added twice.\n     */\n    const versionRaw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    const chromeVersion = versionRaw ? parseInt(versionRaw[2], 10) : false;\n    if (!chromeVersion || chromeVersion >= 73) {\n        el.dispatchEvent(new Event('change'));\n    }\n}\n\n//------------------------------------------------------------------------------\n// Exposed API\n//------------------------------------------------------------------------------\n\nreturn {\n    createFile: createFile,\n    dragoverFile: dragoverFile,\n    dropFile: dropFile,\n    dropFiles,\n    inputFiles,\n};\n\n});\n", "/** @odoo-module **/\n\n// -----------------------------------------------------------------------------\n// Cleanup\n// -----------------------------------------------------------------------------\n\nconst cleanups = [];\n\n/**\n * Register a cleanup callback that will be executed whenever the current test\n * is done.\n *\n * - the cleanups will be executed in reverse order\n * - they will be executed even if the test fails/crashes\n *\n * @param {Function} callback\n */\nexport function registerCleanup(callback) {\n    cleanups.push(callback);\n}\n\nif (window.QUnit) {\n    QUnit.on(\"OdooAfterTestHook\", (info) => {\n        if (QUnit.config.debug) {\n            return;\n        }\n        let cleanup;\n        // note that this calls the cleanup callbacks in reverse order!\n        while ((cleanup = cleanups.pop())) {\n            try {\n                cleanup(info);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    });\n\n    // -----------------------------------------------------------------------------\n    // Check leftovers\n    // -----------------------------------------------------------------------------\n\n    /**\n     * List of elements tolerated in the body after a test. The property \"keep\"\n     * prevents the element from being removed (typically: qunit suite elements).\n     */\n    const validElements = [\n        // always in the body:\n        { tagName: \"DIV\", attr: \"id\", value: \"qunit\", keep: true },\n        { tagName: \"DIV\", attr: \"id\", value: \"qunit-fixture\", keep: true },\n        // shouldn't be in the body after a test but are tolerated:\n        { tagName: \"SCRIPT\", attr: \"id\", value: \"\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"o_notification_manager\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"tooltip fade bs-tooltip-auto\" },\n        {\n            tagName: \"DIV\",\n            attr: \"class\",\n            value: \"tooltip fade bs-tooltip-auto show\",\n        },\n        {\n            tagName: \"DIV\",\n            attr: \"class\",\n            value: \"tooltip tooltip-field-info fade bs-tooltip-auto\",\n        },\n        {\n            tagName: \"DIV\",\n            attr: \"class\",\n            value: \"tooltip tooltip-field-info fade bs-tooltip-auto show\",\n        },\n        { tagName: \"SPAN\", attr: \"class\", value: \"select2-hidden-accessible\" },\n\n        // Due to a Document Kanban bug (already present in 12.0)\n        { tagName: \"DIV\", attr: \"class\", value: \"ui-helper-hidden-accessible\" },\n        {\n            tagName: \"UL\",\n            attr: \"class\",\n            value: \"ui-menu ui-widget ui-widget-content ui-autocomplete ui-front\",\n        },\n        {\n            tagName: \"UL\",\n            attr: \"class\",\n            value: \"ui-menu ui-widget ui-widget-content ui-autocomplete dropdown-menu ui-front\", // many2ones\n        },\n    ];\n\n    /**\n     * After each test, we check that there is no leftover in the DOM.\n     *\n     * Note: this event is not QUnit standard, we added it for this specific use case.\n     * As a payload, an object with keys 'moduleName' and 'testName' is provided. It\n     * is used to indicate the test that left elements in the DOM, when it happens.\n     */\n    QUnit.on(\"OdooAfterTestHook\", function (info) {\n        if (QUnit.config.debug) {\n            return;\n        }\n        const failed = info.testReport.getStatus() === \"failed\";\n        const toRemove = [];\n        // check for leftover elements in the body\n        for (const bodyChild of document.body.children) {\n            const tolerated = validElements.find(\n                (e) => e.tagName === bodyChild.tagName && bodyChild.getAttribute(e.attr) === e.value\n            );\n            if (!failed && !tolerated) {\n                QUnit.pushFailure(\n                    `Body still contains undesirable elements:\\n${bodyChild.outerHTML}`\n                );\n            }\n            if (!tolerated || !tolerated.keep) {\n                toRemove.push(bodyChild);\n            }\n        }\n        // cleanup leftovers in #qunit-fixture\n        const qunitFixture = document.getElementById(\"qunit-fixture\");\n        if (qunitFixture.children.length) {\n            toRemove.push(...qunitFixture.children);\n        }\n        // remove unwanted elements if not in debug\n        for (const el of toRemove) {\n            el.remove();\n        }\n        document.body.classList.remove(\"modal-open\");\n    });\n}\n", "/** @odoo-module **/\n\nimport { browser } from \"@web/core/browser/browser\";\nimport { isMacOS } from \"@web/core/browser/feature_detection\";\nimport { download } from \"@web/core/network/download\";\nimport { Deferred } from \"@web/core/utils/concurrency\";\nimport { patch, unpatch } from \"@web/core/utils/patch\";\nimport { isVisible } from \"@web/core/utils/ui\";\nimport { registerCleanup } from \"./cleanup\";\nimport { templates } from \"@web/core/assets\";\n\nimport { App, onMounted, onPatched, useComponent } from \"@odoo/owl\";\n\n/**\n * Patch the native Date object\n *\n * Note that it will be automatically unpatched at the end of the test\n *\n * @param {number} [year]\n * @param {number} [month]\n * @param {number} [day]\n * @param {number} [hours]\n * @param {number} [minutes]\n * @param {number} [seconds]\n */\nexport function patchDate(year, month, day, hours, minutes, seconds) {\n    var RealDate = window.Date;\n    var actualDate = new RealDate();\n\n    // By default, RealDate uses the browser offset, so we must replace it with the offset fixed in luxon.\n    var fakeDate = new RealDate(year, month, day, hours, minutes, seconds);\n    if (!(luxon.Settings.defaultZone instanceof luxon.FixedOffsetZone)) {\n        throw new Error(\"luxon.Settings.defaultZone must be a FixedOffsetZone\");\n    }\n    const browserOffset = -fakeDate.getTimezoneOffset();\n    const patchedOffset = luxon.Settings.defaultZone.offset();\n    const offsetDiff = patchedOffset - browserOffset;\n    const correctedMinutes = fakeDate.getMinutes() - offsetDiff;\n    fakeDate.setMinutes(correctedMinutes);\n\n    var timeInterval = actualDate.getTime() - fakeDate.getTime();\n\n    // eslint-disable-next-line no-global-assign\n    window.Date = (function (NativeDate) {\n        function Date(Y, M, D, h, m, s, ms) {\n            var length = arguments.length;\n            let date;\n            if (arguments.length > 0) {\n                date =\n                    length == 1 && String(Y) === Y // isString(Y)\n                        ? // We explicitly pass it through parse:\n                          new NativeDate(Date.parse(Y))\n                        : // We have to manually make calls depending on argument\n                        // length here\n                        length >= 7\n                        ? new NativeDate(Y, M, D, h, m, s, ms)\n                        : length >= 6\n                        ? new NativeDate(Y, M, D, h, m, s)\n                        : length >= 5\n                        ? new NativeDate(Y, M, D, h, m)\n                        : length >= 4\n                        ? new NativeDate(Y, M, D, h)\n                        : length >= 3\n                        ? new NativeDate(Y, M, D)\n                        : length >= 2\n                        ? new NativeDate(Y, M)\n                        : length >= 1\n                        ? new NativeDate(Y)\n                        : new NativeDate();\n                // Prevent mixups with unfixed Date object\n                date.constructor = Date;\n                return date;\n            } else {\n                date = new NativeDate();\n                var time = date.getTime();\n                time -= timeInterval;\n                date.setTime(time);\n                return date;\n            }\n        }\n\n        // Copy any custom methods a 3rd party library may have added\n        for (var key in NativeDate) {\n            Date[key] = NativeDate[key];\n        }\n\n        // Copy \"native\" methods explicitly; they may be non-enumerable\n        // exception: 'now' uses fake date as reference\n        Date.now = function () {\n            var date = new NativeDate();\n            var time = date.getTime();\n            time -= timeInterval;\n            return time;\n        };\n        Date.UTC = NativeDate.UTC;\n        Date.prototype = NativeDate.prototype;\n        Date.prototype.constructor = Date;\n\n        // Upgrade Date.parse to handle simplified ISO 8601 strings\n        Date.parse = NativeDate.parse;\n        return Date;\n    })(Date);\n\n    registerCleanup(() => {\n        window.Date = RealDate;\n    });\n}\n\n/**\n * Applies a fixed time zone to luxon based on an offset to the UTC time zone.\n *\n * @param {number} offset the number of minutes ahead or behind the UTC time zone\n *                          +120 => UTC+2\n *                          -120 => UTC-2\n */\nexport function patchTimeZone(offset) {\n    const originalZone = luxon.Settings.defaultZone;\n    luxon.Settings.defaultZone = new luxon.FixedOffsetZone.instance(offset);\n    registerCleanup(() => {\n        luxon.Settings.defaultZone = originalZone;\n    });\n}\n\nlet nextId = 1;\n\n/**\n *\n * @param {Object} obj object to patch\n * @param {Object} patchValue the actual patch description\n * @param {{pure?: boolean}} [options]\n */\nexport function patchWithCleanup(obj, patchValue, options) {\n    const patchName = `__test_patch_${nextId++}__`;\n    patch(obj, patchName, patchValue, options);\n    registerCleanup(() => {\n        unpatch(obj, patchName);\n    });\n}\n\n/**\n * @returns {HTMLElement}\n */\nexport function getFixture() {\n    if (!window.QUnit) {\n        return document;\n    }\n    if (QUnit.config.debug) {\n        return document.body;\n    } else {\n        return document.querySelector(\"#qunit-fixture\");\n    }\n}\n\nexport async function nextTick() {\n    await new Promise((resolve) => window.requestAnimationFrame(resolve));\n    await new Promise((resolve) => setTimeout(resolve));\n}\n\nexport function makeDeferred() {\n    return new Deferred();\n}\n\nexport function findElement(el, selector) {\n    let target = el;\n    if (selector) {\n        const els = el.querySelectorAll(selector);\n        if (els.length === 0) {\n            throw new Error(`No element found (selector: ${selector})`);\n        }\n        if (els.length > 1) {\n            throw new Error(`Found ${els.length} elements, instead of 1 (selector: ${selector})`);\n        }\n        target = els[0];\n    }\n    return target;\n}\n\nfunction keyboardEventBubble(args) {\n    return Object.assign({}, args, {\n        bubbles: true,\n        keyCode: args.which,\n        cancelable: true,\n    });\n}\n\nfunction mouseEventMapping(args) {\n    return {\n        clientX: args ? args.pageX : undefined,\n        clientY: args ? args.pageY : undefined,\n        ...args,\n        bubbles: true,\n        cancelable: true,\n        view: window,\n    };\n}\n\nfunction mouseEventNoBubble(args) {\n    return {\n        clientX: args ? args.pageX : undefined,\n        clientY: args ? args.pageY : undefined,\n        ...args,\n        bubbles: false,\n        cancelable: false,\n        view: window,\n    };\n}\n\nfunction touchEventMapping(args) {\n    return {\n        ...args,\n        cancelable: true,\n        bubbles: true,\n        composed: true,\n        view: window,\n        rotation: 0.0,\n        zoom: 1.0,\n        touches: args.touches ? [...args.touches.map((e) => new Touch(e))] : undefined,\n    };\n}\n\nfunction touchEventCancelMapping(args) {\n    return {\n        ...touchEventMapping(args),\n        cancelable: false,\n    };\n}\n\nfunction noBubble(args) {\n    return Object.assign({}, args, { bubbles: false });\n}\n\nfunction onlyBubble(args) {\n    return Object.assign({}, args, { bubbles: true });\n}\n\n// TriggerEvent constructor/args processor mapping\nconst EVENT_TYPES = {\n    auxclick: { constructor: MouseEvent, processParameters: mouseEventMapping },\n    click: { constructor: MouseEvent, processParameters: mouseEventMapping },\n    contextmenu: {\n        constructor: MouseEvent,\n        processParameters: mouseEventMapping,\n    },\n    dblclick: { constructor: MouseEvent, processParameters: mouseEventMapping },\n    mousedown: { constructor: MouseEvent, processParameters: mouseEventMapping },\n    mouseup: { constructor: MouseEvent, processParameters: mouseEventMapping },\n    mousemove: { constructor: MouseEvent, processParameters: mouseEventMapping },\n    mouseenter: {\n        constructor: MouseEvent,\n        processParameters: mouseEventNoBubble,\n    },\n    mouseleave: {\n        constructor: MouseEvent,\n        processParameters: mouseEventNoBubble,\n    },\n    mouseover: { constructor: MouseEvent, processParameters: mouseEventMapping },\n    mouseout: { constructor: MouseEvent, processParameters: mouseEventMapping },\n    focus: { constructor: FocusEvent, processParameters: noBubble },\n    focusin: { constructor: FocusEvent, processParameters: onlyBubble },\n    blur: { constructor: FocusEvent, processParameters: noBubble },\n    cut: { constructor: ClipboardEvent, processParameters: onlyBubble },\n    copy: { constructor: ClipboardEvent, processParameters: onlyBubble },\n    paste: { constructor: ClipboardEvent, processParameters: onlyBubble },\n    keydown: {\n        constructor: KeyboardEvent,\n        processParameters: keyboardEventBubble,\n    },\n    keypress: {\n        constructor: KeyboardEvent,\n        processParameters: keyboardEventBubble,\n    },\n    keyup: { constructor: KeyboardEvent, processParameters: keyboardEventBubble },\n    drag: { constructor: DragEvent, processParameters: onlyBubble },\n    dragend: { constructor: DragEvent, processParameters: onlyBubble },\n    dragenter: { constructor: DragEvent, processParameters: onlyBubble },\n    dragstart: { constructor: DragEvent, processParameters: onlyBubble },\n    dragleave: { constructor: DragEvent, processParameters: onlyBubble },\n    dragover: { constructor: DragEvent, processParameters: onlyBubble },\n    drop: { constructor: DragEvent, processParameters: onlyBubble },\n    input: { constructor: InputEvent, processParameters: onlyBubble },\n    compositionstart: {\n        constructor: CompositionEvent,\n        processParameters: onlyBubble,\n    },\n    compositionend: {\n        constructor: CompositionEvent,\n        processParameters: onlyBubble,\n    },\n};\n\nif (typeof TouchEvent === \"function\") {\n    Object.assign(EVENT_TYPES, {\n        touchstart: {\n            constructor: TouchEvent,\n            processParameters: touchEventMapping,\n        },\n        touchend: { constructor: TouchEvent, processParameters: touchEventMapping },\n        touchmove: {\n            constructor: TouchEvent,\n            processParameters: touchEventMapping,\n        },\n        touchcancel: {\n            constructor: TouchEvent,\n            processParameters: touchEventCancelMapping,\n        },\n    });\n}\n\nfunction _makeEvent(eventType, eventAttrs) {\n    let event;\n    if (eventType in EVENT_TYPES) {\n        const { constructor, processParameters } = EVENT_TYPES[eventType];\n        event = new constructor(eventType, processParameters(eventAttrs));\n    } else {\n        event = new Event(eventType, Object.assign({}, eventAttrs, { bubbles: true }));\n    }\n    return event;\n}\n\nexport function triggerEvent(el, selector, eventType, eventAttrs = {}, options = {}) {\n    const event = _makeEvent(eventType, eventAttrs);\n    const target = findElement(el, selector);\n    if (!target) {\n        throw new Error(`Can't find a target to trigger ${eventType} event`);\n    }\n    if (!options.skipVisibilityCheck) {\n        if (!isVisible(target)) {\n            throw new Error(`Called triggerEvent ${eventType} on invisible target`);\n        }\n    }\n    target.dispatchEvent(event);\n    if (!options.fast) {\n        return nextTick().then(() => event);\n    }\n    return event;\n}\n\nexport async function triggerEvents(el, querySelector, events, options) {\n    for (let e = 0; e < events.length; e++) {\n        if (Array.isArray(events[e])) {\n            triggerEvent(el, querySelector, events[e][0], events[e][1], options);\n        } else {\n            triggerEvent(el, querySelector, events[e], {}, options);\n        }\n    }\n    await nextTick();\n}\n\n/**\n * Triggers a scroll event on the given target\n *\n * If the target cannot be scrolled or an axis has reached\n * the end of the scrollable area, the event can be transmitted\n * to its nearest parent until it can be triggered\n *\n * @param {HTMLElement} target target of the scroll event\n * @param {Object} coordinates\n * @param {Number} coordinates[left] coordinates to scroll horizontally\n * @param {Number} coordinates[top] coordinates to scroll vertically\n * @param {Boolean} canPropagate states if the scroll can propagate to a scrollable parent\n */\nexport async function triggerScroll(\n    target,\n    coordinates = { left: null, top: null },\n    canPropagate = true\n) {\n    const isScrollable =\n        (target.scrollHeight > target.clientHeight && target.clientHeight > 0) ||\n        (target.scrollWidth > target.clientWidth && target.clientWidth > 0);\n    if (!isScrollable && !canPropagate) {\n        return;\n    }\n    if (isScrollable) {\n        const canScrollFrom = {\n            left:\n                coordinates.left > target.scrollLeft\n                    ? target.scrollLeft + target.clientWidth < target.scrollWidth\n                    : target.scrollLeft > 0,\n            top:\n                coordinates.top > target.scrollTop\n                    ? target.scrollTop + target.clientHeight < target.scrollHeight\n                    : target.scrollTop > 0,\n        };\n        const scrollCoordinates = {};\n        Object.entries(coordinates).forEach(([key, value]) => {\n            if (value !== null && canScrollFrom[key]) {\n                scrollCoordinates[key] = value;\n                delete coordinates[key];\n            }\n        });\n        target.scrollTo(scrollCoordinates);\n        target.dispatchEvent(new UIEvent(\"scroll\"));\n        await nextTick();\n        if (!canPropagate || !Object.entries(coordinates).length) {\n            return;\n        }\n    }\n    target.parentElement\n        ? triggerScroll(target.parentElement, coordinates)\n        : window.dispatchEvent(new UIEvent(\"scroll\"));\n    await nextTick();\n}\n\nexport function click(el, selector, skipVisibilityCheck = false) {\n    return triggerEvent(\n        el,\n        selector,\n        \"click\",\n        { bubbles: true, cancelable: true },\n        { skipVisibilityCheck }\n    );\n}\n\nexport function clickCreate(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_form_button_create\").length) {\n        return click(htmlElement, \".o_form_button_create\");\n    } else if (htmlElement.querySelectorAll(\".o_list_button_create\").length) {\n        return click(htmlElement, \".o_list_button_create\");\n    } else {\n        throw new Error(\"No edit button found to be clicked.\");\n    }\n}\n\nexport function clickEdit(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_list_button_edit\").length) {\n        return click(htmlElement, \".o_list_button_edit\");\n    } else {\n        throw new Error(\"No edit button found to be clicked.\");\n    }\n}\n\nexport async function clickSave(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_form_status_indicator\").length) {\n        await mouseEnter(htmlElement, \".o_form_status_indicator\");\n    }\n    if (htmlElement.querySelectorAll(\".o_form_button_save\").length) {\n        return click(htmlElement, \".o_form_button_save\");\n    } else if (htmlElement.querySelectorAll(\".o_list_button_save\").length) {\n        return click(htmlElement, \".o_list_button_save\");\n    } else {\n        throw new Error(\"No save button found to be clicked.\");\n    }\n}\n\nexport async function clickDiscard(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_form_status_indicator\").length) {\n        await mouseEnter(htmlElement, \".o_form_status_indicator\");\n    }\n    if (htmlElement.querySelectorAll(\".o_form_button_cancel\").length) {\n        return click(htmlElement, \".o_form_button_cancel\");\n    } else if (htmlElement.querySelectorAll(\".o_list_button_discard\").length) {\n        return click(htmlElement, \".o_list_button_discard\");\n    } else {\n        throw new Error(\"No discard button found to be clicked.\");\n    }\n}\n\n/**\n * Triggers a mouseenter event on the given target. If no\n * coordinates are given, the event is located by default\n * in the middle of the target to simplify the test process\n *\n * @param {HTMLElement} el\n * @param {string} selector\n * @param {Object} coordinates position of the mouseenter event\n */\nexport async function mouseEnter(el, selector, coordinates) {\n    const target = el.querySelector(selector) || el;\n    const atPos = coordinates || {\n        clientX: target.getBoundingClientRect().left + target.getBoundingClientRect().width / 2,\n        clientY: target.getBoundingClientRect().top + target.getBoundingClientRect().height / 2,\n    };\n    return triggerEvent(target, null, \"mouseenter\", atPos);\n}\n\nexport async function editInput(el, selector, value) {\n    const input = findElement(el, selector);\n    if (!(input instanceof HTMLInputElement || input instanceof HTMLTextAreaElement)) {\n        throw new Error(\"Only 'input' and 'textarea' elements can be edited with 'editInput'.\");\n    }\n    if (\n        ![\"text\", \"textarea\", \"email\", \"search\", \"color\", \"number\", \"file\", \"tel\"].includes(\n            input.type\n        )\n    ) {\n        throw new Error(`Type \"${input.type}\" not supported by 'editInput'.`);\n    }\n\n    const eventOpts = {};\n    if (input.type === \"file\") {\n        const files = Array.isArray(value) ? value : [value];\n        const dataTransfer = new DataTransfer();\n        for (const file of files) {\n            if (!(file instanceof File)) {\n                throw new Error(`File input value should be one or several File objects.`);\n            }\n            dataTransfer.items.add(file);\n        }\n        input.files = dataTransfer.files;\n        eventOpts.skipVisibilityCheck = true;\n    } else {\n        input.value = value;\n    }\n\n    await triggerEvents(input, null, [\"input\", \"change\"], eventOpts);\n\n    if (input.type === \"file\") {\n        // Need to wait for the file to be loaded by the input\n        await nextTick();\n        await nextTick();\n    }\n}\n\nexport function editSelect(el, selector, value) {\n    const select = findElement(el, selector);\n    if (select.tagName !== \"SELECT\") {\n        throw new Error(\"Only select tag can be edited with selectInput.\");\n    }\n    select.value = value;\n    return triggerEvent(select, null, \"change\");\n}\n\n/**\n * Triggers an hotkey properly disregarding the operating system.\n *\n * @param {string} hotkey\n * @param {boolean} addOverlayModParts\n * @param {KeyboardEventInit} eventAttrs\n * @returns {{ keydownEvent: KeyboardEvent, keyupEvent: KeyboardEvent }}\n */\nexport function triggerHotkey(hotkey, addOverlayModParts = false, eventAttrs = {}) {\n    eventAttrs.key = hotkey.split(\"+\").pop();\n\n    if (/shift/i.test(hotkey)) {\n        eventAttrs.shiftKey = true;\n    }\n\n    if (/control/i.test(hotkey)) {\n        if (isMacOS()) {\n            eventAttrs.metaKey = true;\n        } else {\n            eventAttrs.ctrlKey = true;\n        }\n    }\n\n    if (/alt/i.test(hotkey) || addOverlayModParts) {\n        if (isMacOS()) {\n            eventAttrs.ctrlKey = true;\n        } else {\n            eventAttrs.altKey = true;\n        }\n    }\n\n    if (!(\"bubbles\" in eventAttrs)) {\n        eventAttrs.bubbles = true;\n    }\n\n    const keydownEvent = new KeyboardEvent(\"keydown\", eventAttrs);\n    const keyupEvent = new KeyboardEvent(\"keyup\", eventAttrs);\n    document.activeElement.dispatchEvent(keydownEvent);\n    document.activeElement.dispatchEvent(keyupEvent);\n    return { keydownEvent, keyupEvent };\n}\n\nexport async function legacyExtraNextTick() {\n    return nextTick();\n}\n\nexport function mockDownload(cb) {\n    patchWithCleanup(download, { _download: cb });\n}\n\nexport const hushConsole = Object.create(null);\nfor (const propName of Object.keys(window.console)) {\n    hushConsole[propName] = () => {};\n}\n\nexport function mockSendBeacon(mock) {\n    patchWithCleanup(navigator, {\n        sendBeacon: (url, blob) => {\n            return mock(url, blob) !== false;\n        },\n    });\n}\n\nexport function mockTimeout() {\n    const timeouts = new Map();\n    let currentTime = 0;\n    let id = 1;\n    patchWithCleanup(browser, {\n        setTimeout(fn, delay = 0) {\n            timeouts.set(id, { fn, scheduledFor: delay + currentTime, id });\n            return id++;\n        },\n        clearTimeout(id) {\n            timeouts.delete(id);\n        },\n    });\n    return {\n        execRegisteredTimeouts() {\n            for (const { fn } of timeouts.values()) {\n                fn();\n            }\n            timeouts.clear();\n        },\n        async advanceTime(duration) {\n            // wait here so all microtasktick scheduled in this frame can be\n            // executed and possibly register their own timeout\n            await nextTick();\n            currentTime += duration;\n            for (const { fn, scheduledFor, id } of timeouts.values()) {\n                if (scheduledFor <= currentTime) {\n                    fn();\n                    timeouts.delete(id);\n                }\n            }\n            // wait here to make sure owl can update the UI\n            await nextTick();\n        },\n    };\n}\n\nexport function mockAnimationFrame() {\n    const callbacks = new Map();\n    let id = 1;\n    patchWithCleanup(browser, {\n        requestAnimationFrame(fn) {\n            callbacks.set(id, fn);\n            return id++;\n        },\n        cancelAnimationFrame(id) {\n            callbacks.delete(id);\n        },\n    });\n    return function execRegisteredCallbacks() {\n        for (const fn of callbacks.values()) {\n            fn();\n        }\n        callbacks.clear();\n    };\n}\n\nexport async function mount(Comp, target, config = {}) {\n    let { props, env } = config;\n    env = env || {};\n    const configuration = {\n        env,\n        templates,\n        test: true,\n        props,\n    };\n    if (env.services && \"localization\" in env.services) {\n        configuration.translateFn = env._t;\n    }\n    const app = new App(Comp, configuration);\n    registerCleanup(() => app.destroy());\n    return app.mount(target);\n}\n\nexport function destroy(comp) {\n    comp.__owl__.app.destroy();\n}\n\nexport function findChildren(comp, predicate = (e) => e) {\n    const queue = [];\n    [].unshift.apply(queue, Object.values(comp.__owl__.children));\n\n    while (queue.length > 0) {\n        const curNode = queue.pop();\n        if (predicate(curNode)) {\n            return curNode;\n        }\n        [].unshift.apply(queue, Object.values(curNode.component.__owl__.children));\n    }\n}\n\n// partial replacement of t-ref on component\nexport function useChild() {\n    const node = useComponent().__owl__;\n    const setChild = () => {\n        const componentNode = Object.values(node.children)[0];\n        node.component.child = componentNode.component;\n    };\n    onMounted(setChild);\n    onPatched(setChild);\n}\n\nconst lifeCycleHooks = [\n    \"onError\",\n    \"onMounted\",\n    \"onPatched\",\n    \"onRendered\",\n    \"onWillDestroy\",\n    \"onWillPatch\",\n    \"onWillRender\",\n    \"onWillStart\",\n    \"onWillUnmount\",\n    \"onWillUpdateProps\",\n];\nexport function useLogLifeCycle(logFn, name = \"\") {\n    const component = owl.useComponent();\n    let loggedName = `${component.constructor.name}`;\n    if (name) {\n        loggedName = `${component.constructor.name} ${name}`;\n    }\n    for (const hook of lifeCycleHooks) {\n        owl[hook](() => {\n            logFn(`${hook} ${loggedName}`);\n        });\n    }\n}\n\n/**\n * Returns the list of nodes containing n2 (included) that do not contain n1.\n *\n * @param {Node} n1\n * @param {Node} n2\n * @returns {Node[]}\n */\nfunction getDifferentParents(n1, n2) {\n    const parents = [n2];\n    while (parents[0].parentNode) {\n        const parent = parents[0].parentNode;\n        if (parent.contains(n1)) {\n            break;\n        }\n        parents.unshift(parent);\n    }\n    return parents;\n}\n\n/**\n * Helper performing a drag and drop sequence.\n *\n * - the 'fromSelector' is used to determine the element on which the drag will\n *  start;\n * - the 'toSelector' will determine the element on which the first one will be\n * dropped.\n *\n * The first element will be dragged by its center, and will be dropped on the\n * bottom-right inner pixel of the target element. This behavior covers both\n * cases of appending the first element to the end of a list (toSelector =\n * target list) or moving it at the position of another element, effectively\n * placing the first element before the second (toSelector = other element).\n *\n * A position can be given to drop the first element above, below, or on the\n * side of the second (default is inside, as specified above).\n *\n * Note that only the last event is awaited, since all the others are\n * considered to be synchronous.\n *\n * @param {Element|string} from\n * @param {Element|string} to\n * @param {string} [position] \"top\" | \"bottom\" | \"left\" | \"right\"\n * @returns {Promise<void>}\n */\nexport async function dragAndDrop(from, to, position) {\n    const dropFunction = drag(from, to, position);\n    await dropFunction();\n}\n\n/**\n * Helper performing a drag.\n *\n * - the 'from' selector is used to determine the element on which the drag will\n *  start;\n * - the 'to' selector will determine the element on which the dragged element will be\n * moved.\n *\n * Returns a drop function\n * @param {Element|string} from\n * @param {Element|string} to\n * @param {string} [position] \"top\" | \"bottom\" | \"left\" | \"right\"\n * @returns {function: Promise<void>}\n */\nexport function drag(from, to, position) {\n    const fixture = getFixture();\n    from = from instanceof Element ? from : fixture.querySelector(from);\n    to = to instanceof Element ? to : fixture.querySelector(to);\n\n    // Mouse down on main target\n    const fromRect = from.getBoundingClientRect();\n    const toRect = to.getBoundingClientRect();\n    triggerEvent(from, null, \"mousedown\", {\n        clientX: fromRect.x + fromRect.width / 2,\n        clientY: fromRect.y + fromRect.height / 2,\n    });\n\n    // Find target position\n    const toPos = {\n        clientX: toRect.x + toRect.width / 2,\n        clientY: toRect.y + toRect.height / 2,\n    };\n    if (position && typeof position === \"object\") {\n        // x and y coordinates start from the element's initial coordinates\n        toPos.clientX += position.x || 0;\n        toPos.clientY += position.y || 0;\n    } else {\n        switch (position) {\n            case \"top\": {\n                toPos.clientY = toRect.y - 1;\n                break;\n            }\n            case \"bottom\": {\n                toPos.clientY = toRect.y + toRect.height + 1;\n                break;\n            }\n            case \"left\": {\n                toPos.clientX = toRect.x - 1;\n                break;\n            }\n            case \"right\": {\n                toPos.clientX = toRect.x + toRect.width + 1;\n                break;\n            }\n        }\n    }\n\n    // Move, enter and drop the element on the target\n    triggerEvent(window, null, \"mousemove\", toPos);\n    // \"mouseenter\" is fired on every parent of `to` that do not contain\n    // `from` (typically: different parent lists).\n    for (const target of getDifferentParents(from, to)) {\n        triggerEvent(target, null, \"mouseenter\", toPos);\n    }\n\n    return function () {\n        return drop(from, toPos);\n    };\n}\n\nfunction drop(from, toPos) {\n    return triggerEvent(from, null, \"mouseup\", toPos);\n}\n\nexport async function clickDropdown(target, fieldName) {\n    const dropdownInput = target.querySelector(`[name='${fieldName}'] .dropdown input`);\n    dropdownInput.focus();\n    await nextTick();\n    await click(dropdownInput);\n}\n\nexport async function clickOpenedDropdownItem(target, fieldName, itemContent) {\n    const dropdowns = target.querySelectorAll(`[name='${fieldName}'] .dropdown .dropdown-menu`);\n    if (dropdowns.length === 0) {\n        throw new Error(`No dropdown found for field ${fieldName}`);\n    } else if (dropdowns.length > 1) {\n        throw new Error(`Found ${dropdowns.length} dropdowns for field ${fieldName}`);\n    }\n    const dropdownItems = dropdowns[0].querySelectorAll(\"li\");\n    const indexToClick = Array.from(dropdownItems)\n        .map((html) => html.textContent)\n        .indexOf(itemContent);\n    if (indexToClick === -1) {\n        throw new Error(`The element '${itemContent}' does not exist in the dropdown`);\n    }\n    await click(dropdownItems[indexToClick], null, \"click\");\n}\n\nexport async function selectDropdownItem(target, fieldName, itemContent) {\n    await clickDropdown(target, fieldName);\n    await clickOpenedDropdownItem(target, fieldName, itemContent);\n}\n\nexport function getNodesTextContent(nodes) {\n    return Array.from(nodes).map((n) => n.textContent);\n}\n\n/**\n * Click to open the dropdown on a many2one\n */\nexport async function clickOpenM2ODropdown(el, fieldName, selector) {\n    const m2oSelector = `${selector || \"\"} .o_field_many2one[name=${fieldName}] input`;\n    const matches = el.querySelectorAll(m2oSelector);\n    if (matches.length !== 1) {\n        throw new Error(\n            `cannot open m2o: selector ${selector} has been found ${matches.length} instead of 1`\n        );\n    }\n\n    await click(matches[0]);\n    return matches[0];\n}\n\n/**\n * Click on the active (highlighted) selection in a m2o dropdown.\n */\n// TO FIX\nexport async function clickM2OHighlightedItem(el, fieldName, selector) {\n    const m2oSelector = `${selector || \"\"} .o_field_many2one[name=${fieldName}] input`;\n    // const $dropdown = $(m2oSelector).autocomplete('widget');\n    const matches = el.querySelectorAll(m2oSelector);\n    if (matches.length !== 1) {\n        throw new Error(\n            `cannot open m2o: selector ${selector} has been found ${matches.length} instead of 1`\n        );\n    }\n    // clicking on an li (no matter which one), will select the focussed one\n    return click(matches[0].parentElement.querySelector(\"li\"));\n}\n\n// X2Many\nexport async function addRow(target, selector) {\n    await click(target.querySelector(`${selector ? selector : \"\"} .o_field_x2many_list_row_add a`));\n}\n\nexport async function removeRow(target, index) {\n    await click(target.querySelectorAll(\".o_list_record_remove\")[index]);\n}\n", "/* @odoo-module */\n\nimport { isVisible } from \"@web/core/utils/ui\";\nimport { registerCleanup } from \"@web/../tests/helpers/cleanup\";\nimport {\n    click as webClick,\n    getFixture,\n    makeDeferred,\n    triggerEvents as webTriggerEvents,\n} from \"@web/../tests/helpers/utils\";\n\n/**\n * Create a file object, which can be used for drag-and-drop.\n *\n * @param {Object} data\n * @param {string} data.name\n * @param {string} data.content\n * @param {string} data.contentType\n * @returns {Promise<Object>} resolved with file created\n */\nexport function createFile(data) {\n    // Note: this is only supported by Chrome, and does not work in Incognito mode\n    return new Promise(function (resolve, reject) {\n        var requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        if (!requestFileSystem) {\n            throw new Error(\"FileSystem API is not supported\");\n        }\n        requestFileSystem(window.TEMPORARY, 1024 * 1024, function (fileSystem) {\n            fileSystem.root.getFile(data.name, { create: true }, function (fileEntry) {\n                fileEntry.createWriter(function (fileWriter) {\n                    fileWriter.onwriteend = function (e) {\n                        fileSystem.root.getFile(data.name, {}, function (fileEntry) {\n                            fileEntry.file(function (file) {\n                                resolve(file);\n                            });\n                        });\n                    };\n                    fileWriter.write(new Blob([data.content], { type: data.contentType }));\n                });\n            });\n        });\n    });\n}\n\n/**\n * Create a fake object 'dataTransfer', linked to some files,\n * which is passed to drag and drop events.\n *\n * @param {Object[]} files\n * @returns {Object}\n */\nfunction createFakeDataTransfer(files) {\n    return {\n        dropEffect: \"all\",\n        effectAllowed: \"all\",\n        files,\n        items: [],\n        types: [\"Files\"],\n    };\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then clicks on it.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options] forwarded to `contains`\n * @param {boolean} [options.shiftKey]\n */\nexport async function click(selector, options = {}) {\n    const { shiftKey } = options;\n    delete options.shiftKey;\n    await contains(selector, { click: { shiftKey }, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then dragenters `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dragenterFiles(selector, files, options) {\n    await contains(selector, { dragenterFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then dragovers `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dragoverFiles(selector, files, options) {\n    await contains(selector, { dragoverFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then drops `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dropFiles(selector, files, options) {\n    await contains(selector, { dropFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then inputs `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function inputFiles(selector, files, options) {\n    await contains(selector, { inputFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then pastes `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function pasteFiles(selector, files, options) {\n    await contains(selector, { pasteFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then focuses on it.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function focus(selector, options) {\n    await contains(selector, { setFocus: true, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then inserts the given `content`.\n *\n * @param {string} selector\n * @param {string} content\n * @param {ContainsOptions} [options] forwarded to `contains`\n * @param {boolean} [options.replace=false]\n */\nexport async function insertText(selector, content, options = {}) {\n    const { replace = false } = options;\n    delete options.replace;\n    await contains(selector, { ...options, insertText: { content, replace } });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then sets its `scrollTop` to the given value.\n *\n * @param {string} selector\n * @param {number|\"bottom\"} scrollTop\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function scroll(selector, scrollTop, options) {\n    await contains(selector, { setScroll: scrollTop, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then triggers `event` on it.\n *\n * @param {string} selector\n * @param {(import(\"@web/../tests/helpers/utils\").EventType|[import(\"@web/../tests/helpers/utils\").EventType, EventInit])[]} events\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function triggerEvents(selector, events, options) {\n    await contains(selector, { triggerEvents: events, ...options });\n}\n\nfunction log(ok, message) {\n    if (window.QUnit) {\n        QUnit.assert.ok(ok, message);\n    } else {\n        if (ok) {\n            console.log(message);\n        } else {\n            console.error(message);\n        }\n    }\n}\n\nlet hasUsedContainsPositively = false;\nif (window.QUnit) {\n    QUnit.testStart(() => (hasUsedContainsPositively = false));\n}\n/**\n * @typedef {[string, ContainsOptions]} ContainsTuple tuple representing params of the contains\n *  function, where the first element is the selector, and the second element is the options param.\n * @typedef {Object} ContainsOptions\n * @property {ContainsTuple} [after] if provided, the found element(s) must be after the element\n *  matched by this param.\n * @property {ContainsTuple} [before] if provided, the found element(s) must be before the element\n *  matched by this param.\n * @property {Object} [click] if provided, clicks on the first found element\n * @property {ContainsTuple|ContainsTuple[]} [contains] if provided, the found element(s) must\n *  contain the provided sub-elements.\n * @property {number} [count=1] numbers of elements to be found to declare the contains check\n *  as successful. Elements are counted after applying all other filters.\n * @property {Object[]} [dragenterFiles] if provided, dragenters the given files on the found element\n * @property {Object[]} [dragoverFiles] if provided, dragovers the given files on the found element\n * @property {Object[]} [dropFiles] if provided, drops the given files on the found element\n * @property {Object[]} [inputFiles] if provided, inputs the given files on the found element\n * @property {{content:string, replace:boolean}} [insertText] if provided, adds to (or replace) the\n *  value of the first found element by the given content.\n * @property {ContainsTuple} [parent] if provided, the found element(s) must have as\n *  parent the node matching the parent parameter.\n * @property {Object[]} [pasteFiles] if provided, pastes the given files on the found element\n * @property {number|\"bottom\"} [scroll] if provided, the scrollTop of the found element(s)\n *  must match.\n *  Note: when using one of the scrollTop options, it is advised to ensure the height is not going\n *  to change soon, by checking with a preceding contains that all the expected elements are in DOM.\n * @property {boolean} [setFocus] if provided, focuses the first found element.\n * @property {number|\"bottom\"} [setScroll] if provided, sets the scrollTop on the first found\n *  element.\n * @property {HTMLElement} [target=getFixture()]\n * @property {string[]} [triggerEvents] if provided, triggers the given events on the found element\n * @property {string} [text] if provided, the textContent of the found element(s) or one of their\n *  descendants must match. Use `textContent` option for a match on the found element(s) only.\n * @property {string} [textContent] if provided, the textContent of the found element(s) must match.\n *  Prefer `text` option for a match on the found element(s) or any of their descendants, usually\n *  allowing for a simpler and less specific selector.\n * @property {string} [value] if provided, the input value of the found element(s) must match.\n *  Note: value changes are not observed directly, another mutation must happen to catch them.\n * @property {boolean} [visible] if provided, the found element(s) must be (in)visible\n */\nclass Contains {\n    /**\n     * @param {string} selector\n     * @param {ContainsOptions} [options={}]\n     */\n    constructor(selector, options = {}) {\n        this.selector = selector;\n        this.options = options;\n        this.options.count = this.options.count === undefined ? 1 : this.options.count;\n        this.options.targetParam = this.options.target;\n        this.options.target =\n            this.options.target === undefined ? getFixture() : this.options.target;\n        let selectorMessage = `${this.options.count} of \"${this.selector}\"`;\n        if (this.options.visible !== undefined) {\n            selectorMessage = `${selectorMessage} ${\n                this.options.visible ? \"visible\" : \"invisible\"\n            }`;\n        }\n        if (this.options.targetParam) {\n            selectorMessage = `${selectorMessage} inside a specific target`;\n        }\n        if (this.options.parent) {\n            selectorMessage = `${selectorMessage} inside a specific parent`;\n        }\n        if (this.options.contains) {\n            selectorMessage = `${selectorMessage} with a specified sub-contains`;\n        }\n        if (this.options.text !== undefined) {\n            selectorMessage = `${selectorMessage} with text \"${this.options.text}\"`;\n        }\n        if (this.options.textContent !== undefined) {\n            selectorMessage = `${selectorMessage} with textContent \"${this.options.textContent}\"`;\n        }\n        if (this.options.value !== undefined) {\n            selectorMessage = `${selectorMessage} with value \"${this.options.value}\"`;\n        }\n        if (this.options.scroll !== undefined) {\n            selectorMessage = `${selectorMessage} with scroll \"${this.options.scroll}\"`;\n        }\n        if (this.options.after !== undefined) {\n            selectorMessage = `${selectorMessage} after a specified element`;\n        }\n        if (this.options.before !== undefined) {\n            selectorMessage = `${selectorMessage} before a specified element`;\n        }\n        this.selectorMessage = selectorMessage;\n        if (this.options.contains && !Array.isArray(this.options.contains[0])) {\n            this.options.contains = [this.options.contains];\n        }\n        if (this.options.count) {\n            hasUsedContainsPositively = true;\n        } else if (!hasUsedContainsPositively) {\n            throw new Error(\n                `Starting a test with \"contains\" of count 0 for selector \"${this.selector}\" is useless because it might immediately resolve. Start the test by checking that an expected element actually exists.`\n            );\n        }\n        /** @type {string} */\n        this.successMessage = undefined;\n        /** @type {function} */\n        this.executeError = undefined;\n    }\n\n    /**\n     * Starts this contains check, either immediately resolving if there is a\n     * match, or registering appropriate listeners and waiting until there is a\n     * match or a timeout (resolving or rejecting respectively).\n     *\n     * Success or failure messages will be logged with QUnit as well.\n     *\n     * @returns {Promise}\n     */\n    run() {\n        this.done = false;\n        this.def = makeDeferred();\n        this.scrollListeners = new Set();\n        this.onScroll = () => this.runOnce(\"after scroll\");\n        if (!this.runOnce(\"immediately\")) {\n            this.timer = setTimeout(\n                () => this.runOnce(\"Timeout of 5 seconds\", { crashOnFail: true }),\n                5000\n            );\n            this.observer = new MutationObserver((mutations) => {\n                try {\n                    this.runOnce(\"after mutations\");\n                } catch (e) {\n                    this.def.reject(e); // prevents infinite loop in case of programming error\n                }\n            });\n            this.observer.observe(document.body, {\n                attributes: true,\n                childList: true,\n                subtree: true,\n            });\n            registerCleanup(() => {\n                if (!this.done) {\n                    this.runOnce(\"Test ended\", { crashOnFail: true });\n                }\n            });\n        }\n        return this.def;\n    }\n\n    /**\n     * Runs this contains check once, immediately returning the result (or\n     * undefined), and possibly resolving or rejecting the main promise\n     * (and printing QUnit log) depending on options.\n     * If undefined is returned it means the check was not successful.\n     *\n     * @param {string} whenMessage\n     * @param {Object} [options={}]\n     * @param {boolean} [options.crashOnFail=false]\n     * @param {boolean} [options.executeOnSuccess=true]\n     * @returns {HTMLElement[]|undefined}\n     */\n    runOnce(whenMessage, { crashOnFail = false, executeOnSuccess = true } = {}) {\n        const res = this.select();\n        if ((res && res.length === this.options.count) || crashOnFail) {\n            // clean before doing anything else to avoid infinite loop due to side effects\n            if (this.observer) {\n                this.observer.disconnect();\n            }\n            clearTimeout(this.timer);\n            for (const el of this.scrollListeners || []) {\n                el.removeEventListener(\"scroll\", this.onScroll);\n            }\n            this.done = true;\n        }\n        if (res && res.length === this.options.count) {\n            this.successMessage = `Found ${this.selectorMessage} (${whenMessage})`;\n            if (executeOnSuccess) {\n                this.executeAction(res[0]);\n            }\n            return res;\n        } else {\n            this.executeError = () => {\n                let message = `Failed to find ${this.selectorMessage} (${whenMessage}).`;\n                message = res\n                    ? `${message} Found ${res.length} instead.`\n                    : `${message} Parent not found.`;\n                if (this.parentContains) {\n                    if (this.parentContains.successMessage) {\n                        log(true, this.parentContains.successMessage);\n                    } else {\n                        this.parentContains.executeError();\n                    }\n                }\n                log(false, message);\n                if (this.def) {\n                    this.def.reject(new Error(message));\n                }\n                for (const childContains of this.childrenContains || []) {\n                    if (childContains.successMessage) {\n                        log(true, childContains.successMessage);\n                    } else {\n                        childContains.executeError();\n                    }\n                }\n            };\n            if (crashOnFail) {\n                this.executeError();\n            }\n        }\n    }\n\n    /**\n         * Executes the action(s) given to this constructor on the found element,\n         * prints the success messages, and resolves the main deferred.\n         \n         * @param {HTMLElement} el\n         */\n    executeAction(el) {\n        let message = this.successMessage;\n        if (this.options.click) {\n            message = `${message} and clicked it`;\n            webClick(el, undefined, {\n                mouseEventInit: this.options.click,\n                skipDisabledCheck: true,\n                skipVisibilityCheck: true,\n            });\n        }\n        if (this.options.dragenterFiles) {\n            message = `${message} and dragentered ${this.options.dragenterFiles.length} file(s)`;\n            const ev = new Event(\"dragenter\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dragenterFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.dragoverFiles) {\n            message = `${message} and dragovered ${this.options.dragoverFiles.length} file(s)`;\n            const ev = new Event(\"dragover\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dragoverFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.dropFiles) {\n            message = `${message} and dropped ${this.options.dropFiles.length} file(s)`;\n            const ev = new Event(\"drop\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dropFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.inputFiles) {\n            message = `${message} and inputted ${this.options.inputFiles.length} file(s)`;\n            // could not use _createFakeDataTransfer as el.files assignation will only\n            // work with a real FileList object.\n            const dataTransfer = new window.DataTransfer();\n            for (const file of this.options.inputFiles) {\n                dataTransfer.items.add(file);\n            }\n            el.files = dataTransfer.files;\n            /**\n             * Changing files programatically is not supposed to trigger the event but\n             * it does in Chrome versions before 73 (which is on runbot), so in that\n             * case there is no need to make a manual dispatch, because it would lead to\n             * the files being added twice.\n             */\n            const versionRaw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n            const chromeVersion = versionRaw ? parseInt(versionRaw[2], 10) : false;\n            if (!chromeVersion || chromeVersion >= 73) {\n                el.dispatchEvent(new Event(\"change\"));\n            }\n        }\n        if (this.options.insertText !== undefined) {\n            message = `${message} and inserted text \"${this.options.insertText.content}\" (replace: ${this.options.insertText.replace})`;\n            el.focus();\n            if (this.options.insertText.replace) {\n                el.value = \"\";\n                el.dispatchEvent(new window.KeyboardEvent(\"keydown\", { key: \"Backspace\" }));\n                el.dispatchEvent(new window.KeyboardEvent(\"keyup\", { key: \"Backspace\" }));\n                el.dispatchEvent(new window.InputEvent(\"input\"));\n            }\n            for (const char of this.options.insertText.content) {\n                el.value += char;\n                el.dispatchEvent(new window.KeyboardEvent(\"keydown\", { key: char }));\n                el.dispatchEvent(new window.KeyboardEvent(\"keyup\", { key: char }));\n                el.dispatchEvent(new window.InputEvent(\"input\"));\n            }\n        }\n        if (this.options.pasteFiles) {\n            message = `${message} and pasted ${this.options.pasteFiles.length} file(s)`;\n            const ev = new Event(\"paste\", { bubbles: true });\n            Object.defineProperty(ev, \"clipboardData\", {\n                value: createFakeDataTransfer(this.options.pasteFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.setFocus) {\n            message = `${message} and focused it`;\n            el.focus();\n        }\n        if (this.options.setScroll !== undefined) {\n            message = `${message} and set scroll to \"${this.options.setScroll}\"`;\n            el.scrollTop =\n                this.options.setScroll === \"bottom\" ? el.scrollHeight : this.options.setScroll;\n        }\n        if (this.options.triggerEvents) {\n            message = `${message} and triggered \"${this.options.triggerEvents.join(\", \")}\" events`;\n            webTriggerEvents(el, null, this.options.triggerEvents, {\n                skipVisibilityCheck: true,\n            });\n        }\n        if (this.parentContains) {\n            log(true, this.parentContains.successMessage);\n        }\n        log(true, message);\n        for (const childContains of this.childrenContains) {\n            log(true, childContains.successMessage);\n        }\n        if (this.def) {\n            this.def.resolve();\n        }\n    }\n\n    /**\n     * Returns the found element(s) according to this constructor setup.\n     * If undefined is returned it means the parent cannot be found\n     *\n     * @returns {HTMLElement[]|undefined}\n     */\n    select() {\n        const target = this.selectParent();\n        if (!target) {\n            return;\n        }\n        const baseRes = [...target.querySelectorAll(this.selector)];\n        /** @type {Contains[]} */\n        this.childrenContains = [];\n        const res = baseRes.filter((el, currentIndex) => {\n            let condition =\n                (this.options.textContent === undefined ||\n                    el.textContent.trim() === this.options.textContent) &&\n                (this.options.value === undefined || el.value === this.options.value) &&\n                (this.options.scroll === undefined ||\n                    (this.options.scroll === \"bottom\"\n                        ? Math.abs(el.scrollHeight - el.clientHeight - el.scrollTop) <= 1\n                        : Math.abs(el.scrollTop - this.options.scroll) <= 1));\n            if (condition && this.options.text !== undefined) {\n                if (\n                    el.textContent.trim() !== this.options.text &&\n                    [...el.querySelectorAll(\"*\")].every(\n                        (el) => el.textContent.trim() !== this.options.text\n                    )\n                ) {\n                    condition = false;\n                }\n            }\n            if (condition && this.options.contains) {\n                for (const param of this.options.contains) {\n                    const childContains = new Contains(param[0], {\n                        ...param[1],\n                        target: el,\n                    });\n                    if (\n                        !childContains.runOnce(`as child of el ${currentIndex + 1})`, {\n                            executeOnSuccess: false,\n                        })\n                    ) {\n                        condition = false;\n                    }\n                    this.childrenContains.push(childContains);\n                }\n            }\n            if (condition && this.options.visible !== undefined) {\n                if (isVisible(el) !== this.options.visible) {\n                    condition = false;\n                }\n            }\n            if (condition && this.options.after) {\n                const afterContains = new Contains(this.options.after[0], {\n                    ...this.options.after[1],\n                    target,\n                });\n                const afterEl = afterContains.runOnce(`as \"after\"`, {\n                    executeOnSuccess: false,\n                });\n                if (\n                    !afterEl ||\n                    !afterEl[0] ||\n                    !(el.compareDocumentPosition(afterEl[0]) & Node.DOCUMENT_POSITION_PRECEDING)\n                ) {\n                    condition = false;\n                }\n                this.childrenContains.push(afterContains);\n            }\n            if (condition && this.options.before) {\n                const beforeContains = new Contains(this.options.before[0], {\n                    ...this.options.before[1],\n                    target,\n                });\n                const beforeEl = beforeContains.runOnce(`as \"before\"`, {\n                    executeOnSuccess: false,\n                });\n                if (\n                    !beforeEl ||\n                    !beforeEl[0] ||\n                    !(el.compareDocumentPosition(beforeEl[0]) & Node.DOCUMENT_POSITION_FOLLOWING)\n                ) {\n                    condition = false;\n                }\n                this.childrenContains.push(beforeContains);\n            }\n            return condition;\n        });\n        if (\n            this.options.scroll !== undefined &&\n            this.scrollListeners &&\n            baseRes.length === this.options.count &&\n            res.length !== this.options.count\n        ) {\n            for (const el of baseRes) {\n                if (!this.scrollListeners.has(el)) {\n                    this.scrollListeners.add(el);\n                    el.addEventListener(\"scroll\", this.onScroll);\n                }\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Returns the found element that should act as the target (parent) for the\n     * main selector.\n     * If undefined is returned it means the parent cannot be found.\n     *\n     * @returns {HTMLElement|undefined}\n     */\n    selectParent() {\n        if (this.options.parent) {\n            this.parentContains = new Contains(this.options.parent[0], {\n                ...this.options.parent[1],\n                target: this.options.target,\n            });\n            const res = this.parentContains.runOnce(`as parent`, {\n                executeOnSuccess: false,\n            });\n            return res && res[0];\n        }\n        return this.options.target;\n    }\n}\n\n/**\n * Waits until `count` elements matching the given `selector` are present in\n * `options.target`.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options]\n * @returns {Promise}\n */\nexport async function contains(selector, options) {\n    await new Contains(selector, options).run();\n}\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\ntour.register('mail/static/tests/tours/discuss_public_tour.js', {\n    test: true,\n}, [{\n    trigger: '.o_DiscussPublicView',\n    extraTrigger: '.o_ThreadView',\n}, {\n    content: \"Check that we are on channel page\",\n    trigger: '.o_ThreadView',\n    run() {\n        if (!window.location.pathname.startsWith('/discuss/channel')) {\n            console.error('Did not automatically redirect to channel page');\n        }\n        // Wait for modules to be loaded or failed for the next step\n        odoo.__DEBUG__.didLogInfo.then(() => {\n            const { missing, failed, unloaded } = odoo.__DEBUG__.jsModules;\n            if ([missing, failed, unloaded].some(arr => arr.length)) {\n                console.error(\"Couldn't load all JS modules.\", JSON.stringify({ missing, failed, unloaded }));\n            }\n            document.body.classList.add('o_mail_channel_public_modules_loaded');\n        });\n    },\n    extraTrigger: '.o_mail_channel_public_modules_loaded',\n}, {\n    content: \"Wait for all modules loaded check in previous step\",\n    trigger: '.o_mail_channel_public_modules_loaded',\n}]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\ntour.register('mail/static/tests/tours/mail_channel_as_guest_tour.js', {\n    test: true,\n}, [{\n    content: \"Click join\",\n    trigger: '.o_WelcomeView_joinButton',\n    extraTrigger: '.o_ThreadView',\n}, {\n    content: \"Check that we are on channel page\",\n    trigger: '.o_ThreadView',\n    run() {\n        if (!window.location.pathname.startsWith('/discuss/channel')) {\n            console.error('Clicking on join button did not redirect to channel page');\n        }\n        // Wait for modules to be loaded or failed for the next step\n        odoo.__DEBUG__.didLogInfo.then(() => {\n            const { missing, failed, unloaded } = odoo.__DEBUG__.jsModules;\n            if ([missing, failed, unloaded].some(arr => arr.length)) {\n                console.error(\"Couldn't load all JS modules.\", JSON.stringify({ missing, failed, unloaded }));\n            }\n            document.body.classList.add('o_mail_channel_as_guest_tour_modules_loaded');\n        });\n    },\n    extraTrigger: '.o_mail_channel_as_guest_tour_modules_loaded',\n}, {\n    content: \"Wait for all modules loaded check in previous step\",\n    trigger: '.o_mail_channel_as_guest_tour_modules_loaded',\n}]);\n", "/** @odoo-module **/\n\nimport {\n    createFile,\n    inputFiles,\n} from 'web.test_utils_file';\nimport { contains } from '@web/../tests/utils';\n\nimport tour from 'web_tour.tour';\n\n/**\n * This tour depends on data created by python test in charge of launching it.\n * It is not intended to work when launched from interface. It is needed to test\n * an action (action manager) which is not possible to test with QUnit.\n * @see mail/tests/test_mail_full_composer.py\n */\ntour.register('mail/static/tests/tours/mail_full_composer_test_tour.js', {\n    test: true,\n}, [{\n    content: \"Wait for the chatter to be fully loaded\",\n    trigger: \".o_Chatter\",\n    async run() {\n        await contains(\".o_Message\", { count: 1 });\n        document.body.setAttribute(\"data-found-message\", 1);\n    },\n}, {\n    content: \"Click on Send Message\",\n    trigger: '.o_ChatterTopbar_buttonSendMessage',\n    extra_trigger: 'body[data-found-message=1]',\n}, {\n    content: \"Write something in composer\",\n    trigger: '.o_ComposerTextInput_textarea',\n    run: 'text blahblah',\n}, {\n    content: \"Add one file in composer\",\n    trigger: '.o_Composer_buttonAttachment',\n    async run() {\n        const file = await createFile({\n            content: 'hello, world',\n            contentType: 'text/plain',\n            name: 'text.txt',\n        });\n        const messaging = await odoo.__DEBUG__.messaging;\n        const uploader = messaging.models['ComposerView'].all()[0].fileUploader;\n        inputFiles(\n            uploader.fileInput,\n            [file]\n        );\n    },\n}, {\n    content: \"Open full composer\",\n    trigger: '.o_Composer_buttonFullComposer',\n    extra_trigger: '.o_AttachmentCard:not(.o-isUploading)' // waiting the attachment to be uploaded\n}, {\n    content: \"Check the earlier provided attachment is listed\",\n    trigger: '.o_AttachmentCard[title=\"text.txt\"]',\n    run() {},\n}, {\n    content: \"Check subject is autofilled\",\n    trigger: '[name=\"subject\"] input',\n    run() {\n        const subjectValue = document.querySelector('[name=\"subject\"] input').value;\n        if (subjectValue !== \"Re: Jane\") {\n            console.error(\n                `Full composer should have \"Re: Jane\" in subject input (actual: ${subjectValue})`\n            );\n        }\n    },\n}, {\n    content: \"Check composer content is kept\",\n    trigger: '.o_field_html[name=\"body\"]',\n    run() {\n        const bodyContent = document.querySelector('.o_field_html[name=\"body\"]').textContent;\n        if (!bodyContent.includes(\"blahblah\")) {\n            console.error(\n                `Full composer should contain text from small composer (\"blahblah\") in body input (actual: ${bodyContent})`\n            );\n        }\n    },\n}, {\n    content: \"Open templates\",\n    trigger: '.o_field_widget[name=\"template_id\"] input',\n}, {\n    content: \"Check a template is listed\",\n    in_modal: false,\n    trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Test template\")',\n    run() {},\n}, {\n    content: \"Send message\",\n    trigger: '.o_mail_send',\n}, {\n    content: \"Check message is shown\",\n    trigger: '.o_Message:contains(\"blahblah\")',\n}, {\n    content: \"Check message contains the attachment\",\n    trigger: '.o_Message .o_AttachmentCard_filename:contains(\"text.txt\")',\n}]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\n/**\n * Verify that a user can modify their own profile information.\n */\ntour.register('mail/static/tests/tours/user_modify_own_profile_tour.js', {\n    test: true,\n}, [{\n    content: 'Open user account menu',\n    trigger: '.o_user_menu button',\n}, {\n    content: \"Open preferences / profile screen\",\n    trigger: '[data-menu=settings]',\n}, {\n    content: \"Update the email address\",\n    trigger: 'div[name=\"email\"] input',\n    run: 'text updatedemail@example.com',\n}, {\n    content: \"Save the form\",\n    trigger: 'button[name=\"preference_save\"]',\n}, {\n    content: \"Wait until the modal is closed\",\n    trigger: 'body:not(.modal-open)',\n}]);\n", "odoo.define('portal.tour', function (require) {\n'use strict';\n\nvar tour = require(\"web_tour.tour\");\n\ntour.register('portal_load_homepage', {\n    test: true,\n    url: '/my',\n},\n    [\n        {\n            content: \"Check portal is loaded\",\n            trigger: 'a[href*=\"/my/account\"]:contains(\"Edit\"):first',\n        },\n        {\n            content: \"Load my account details\",\n            trigger: 'input[value=\"Joel Willis\"]'\n        }\n    ]\n);\n\n});\n", "/** @odoo-module **/\nimport { browser } from \"@web/core/browser/browser\";\nconst localStorage = browser.localStorage;\n\nimport publicWidget from \"web.public.widget\";\n\nconst localStorageKey = 'widgetAndWysiwygLifecycle';\nif (!localStorage.getItem(localStorageKey)) {\n    localStorage.setItem(localStorageKey, '[]');\n}\n\nexport function addLifecycleStep(step) {\n    const oldValue = localStorage.getItem(localStorageKey);\n    const newValue = JSON.stringify(JSON.parse(oldValue).concat(step));\n    localStorage.setItem(localStorageKey, newValue);\n}\n\npublicWidget.registry.CountdownPatch = publicWidget.Widget.extend({\n    selector: \".s_countdown\",\n    disabledInEditableMode: false,\n\n    /**\n     * @override\n     */\n    async start() {\n        addLifecycleStep('widgetStart');\n        await this._super(...arguments);\n        this.el.classList.add(\"public_widget_started\");\n    },\n    /**\n     * @override\n     */\n    destroy() {\n        this.el.classList.remove(\"public_widget_started\");\n        addLifecycleStep('widgetStop');\n        this._super(...arguments);\n    },\n});\n", "odoo.define('website.tour.automatic_editor', function (require) {\n'use strict';\n\nconst wTourUtils = require(\"website.tour_utils\");\n\nwTourUtils.registerWebsitePreviewTour('automatic_editor_on_new_website', {\n    test: true,\n    url: '/',\n},\n[\n    {\n        content: \"Select the language dropdown\",\n        trigger: 'iframe .js_language_selector .dropdown-toggle'\n    },\n    {\n        content: \"click on Add a language\",\n        trigger: 'iframe a.o_add_language',\n    },\n    {\n        content: \"type Parseltongue\",\n        trigger: 'div[name=\"lang_ids\"] .o_input_dropdown input',\n        run: 'text Parseltongue',\n    },\n    {\n        content: 'select Parseltongue',\n        trigger: '.dropdown-item:contains(Parseltongue)',\n        in_modal: false,\n    },\n    {\n        content: \"load parseltongue\",\n        extra_trigger: '.modal div[name=\"lang_ids\"] .rounded-pill .o_tag_badge_text:contains(Parseltongue)',\n        trigger: '.modal-footer button[name=lang_install]',\n    },\n    {\n        content: \"Select the language dropdown\",\n        trigger: 'iframe .js_language_selector .dropdown-toggle',\n    },\n    {\n        content: \"Select parseltongue\",\n        trigger: 'iframe a.js_change_lang[data-url_code=pa_GB]',\n        extra_trigger: 'iframe a.js_change_lang .o_lang_flag',\n    },\n    {\n        content: \"Check that we're on parseltongue and then go to settings\",\n        trigger: 'iframe html[lang=pa-GB]',\n        run: () => {\n            // Now go through the settings for a new website. A frontend_lang\n            // cookie was set during previous steps. It should not be used when\n            // redirecting to the frontend in the following steps.\n            window.location.href = '/web#action=website.action_website_configuration';\n        }\n    },\n    {\n        content: \"create a new website\",\n        trigger: 'button[name=\"action_website_create_new\"]',\n    },\n    {\n        content: \"insert website name\",\n        trigger: 'div[name=\"name\"] input',\n        run: 'text Website EN'\n    },\n    {\n        content: \"validate the website creation modal\",\n        trigger: 'button.btn-primary'\n    },\n    {\n        content: \"skip configurator\",\n        // This trigger targets the skip button, it doesn't have a more\n        // explicit class or ID.\n        trigger: '.o_configurator_container .container-fluid .btn.btn-link'\n    },\n    {\n        content: \"make hover button appear\",\n        trigger: '.o_theme_preview',\n        run: () => {\n            $('.o_theme_preview .o_button_area').attr('style', 'visibility: visible; opacity: 1;');\n        },\n    },\n    {\n        content: \"Install a theme\",\n        trigger: 'button[name=\"button_choose_theme\"]'\n    },\n    {\n        content: \"Check that the editor is loaded\",\n        trigger: 'iframe body.editor_enable',\n        timeout: 30000,\n        run: () => null, // it's a check\n    },\n    {\n        content: \"exit edit mode\",\n        trigger: '.o_we_website_top_actions button.btn-primary:contains(\"Save\")',\n    },\n    {\n        content: \"wait for editor to close\",\n        trigger: 'iframe body:not(.editor_enable)',\n        run: () => null, // It's a check\n    }\n]);\n});\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\nconst carouselInnerSelector = \"iframe .carousel-inner\";\n\nwTourUtils.registerWebsitePreviewTour(\"carousel_content_removal\", {\n    test: true,\n    url: '/',\n    edition: true,\n}, [{\n    trigger: \"#snippet_structure .oe_snippet:has(span:contains('Carousel')) .oe_snippet_thumbnail\",\n    content: \"Drag the Carousel block and drop it in your page.\",\n    run: \"drag_and_drop iframe #wrap\",\n},\n{\n    trigger: \"iframe .carousel .carousel-item.active .carousel-content\",\n    content: \"Select the active carousel item.\",\n}, {\n    trigger: \"iframe .oe_overlay.oe_active .oe_snippet_remove\",\n    content: \"Remove the active carousel item.\",\n},\n{\n    trigger: \"iframe .carousel .carousel-item.active .container:not(:has(*))\",\n    content: \"Check for a carousel slide with an empty container tag\",\n    run: function () {},\n}]);\n\nwTourUtils.registerWebsitePreviewTour(\"snippet_carousel\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({id: \"s_carousel\", name: \"Carousel\"}),\n    wTourUtils.clickOnSnippet(\".carousel .carousel-item.active\"),\n    // Slide to the right.\n    wTourUtils.changeOption(\"CarouselItem\", 'we-button[data-switch-to-slide=\"right\"]'),\n    {\n        content: \"Check if the second slide is active\",\n        trigger: `${carouselInnerSelector} > div.active:nth-child(2)`,\n        run: () => {}, // This is a check.\n    },\n    // Add a slide (with the \"CarouselItem\" option).\n    wTourUtils.changeOption(\"CarouselItem\", \"we-button[data-add-slide-item]\"),\n    {\n        content: \"Check if there are four slides and if the third one is active\",\n        trigger: `${carouselInnerSelector}:has(div:nth-child(4)) > div.active:nth-child(3)`,\n        run: () => {}, // This is a check.\n    },\n     // Remove a slide.\n     wTourUtils.changeOption(\"CarouselItem\", \"we-button[data-remove-slide]\"),\n    {\n        content: \"Check if there are three slides and if the second one is active\",\n        trigger: `${carouselInnerSelector}:has(div:nth-child(3)) > div.active:nth-child(2)`,\n        run: () => {}, // This is a check.\n    }, {\n        trigger: \"iframe .carousel .carousel-control-prev\",\n        content: \"Slide the carousel to the left with the arrows.\",\n    }, {\n        content: \"Check if the first slide is active\",\n        trigger: `${carouselInnerSelector} > div.active:nth-child(1)`,\n        run: () => {}, // This is a check.\n    },\n    // Add a slide (with the \"Carousel\" option).\n    wTourUtils.changeOption(\"Carousel\", \"we-button[data-add-slide]\"),\n    {\n        content: \"Check if there are four slides and if the second one is active\",\n        trigger: `${carouselInnerSelector}:has(div:nth-child(4)) > div.active:nth-child(2)`,\n        run: () => {}, // This is a check.\n    }, {\n        content: \"Check if the slide indicator was correctly updated\",\n        trigger: \"we-customizeblock-options span:contains(' (2/4)')\",\n        run: () => {},\n    },\n    // Check if we can still remove a slide.\n    wTourUtils.changeOption(\"CarouselItem\", \"we-button[data-remove-slide]\"),\n    {\n        content: \"Check if there are three slides and if the first one is active\",\n        trigger: `${carouselInnerSelector}:has(div:nth-child(3)) > div.active:nth-child(1)`,\n        run: () => {}, // This is a check.\n    },\n    // Slide to the left.\n    wTourUtils.changeOption(\"CarouselItem\", 'we-button[data-switch-to-slide=\"left\"]'),\n    {\n        content: \"Check if the third slide is active\",\n        trigger: `${carouselInnerSelector} > div.active:nth-child(3)`,\n        run: () => {}, // This is a check.\n    },\n    ...wTourUtils.clickOnSave(),\n    // Check that saving always sets the first slide as active.\n    {\n        content: \"Check that the first slide became the active one\",\n        trigger: `${carouselInnerSelector} > div.active:nth-child(1)`,\n        run: () => {}, // This is a check.\n    },\n]);\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('client_action_iframe_fallback', {\n    test: true,\n    url: '/',\n},\n[\n    {\n        content: \"Ensure we are on the expected page\",\n        trigger: 'body iframe html[data-view-xmlid=\"website.homepage\"]',\n        run: () => {}, // It's a check.\n    }, {\n        content: \"Ensure the iframe fallback is not loaded in test mode\",\n        trigger: 'body',\n        run: () => {\n            if (document.querySelector('iframe[src=\"/website/iframefallback\"]')) {\n                console.error(\"The iframe fallback shouldn't be inside the DOM.\");\n            }\n        },\n    },\n]);\n", "/** @odoo-module */\n\nimport tour from 'web_tour.tour';\n\nconst testUrl = '/test_client_action_redirect';\n\nconst goToFrontendSteps = [{\n    content: \"Go to the frontend\",\n    trigger: 'body',\n    run: () => {\n        window.location.href = testUrl;\n    },\n}, {\n    content: \"Check we are in the frontend\",\n    trigger: 'body:not(:has(.o_website_preview)) #test_contact_FE',\n    run: () => null, // it's a check\n}];\nconst goToBackendSteps = [{\n    content: \"Go to the backend\",\n    trigger: 'body',\n    run: () => {\n        window.location.href = `/@${testUrl}`;\n    },\n}, {\n    content: \"Check we are in the backend\",\n    trigger: '.o_website_preview',\n    run: () => null, // it's a check\n}];\nconst checkEditorSteps = [{\n    content: \"Check that the editor is loaded\",\n    trigger: 'iframe body.editor_enable',\n    timeout: 30000,\n    run: () => null, // it's a check\n}, {\n    content: \"exit edit mode\",\n    trigger: '.o_we_website_top_actions button.btn-primary:contains(\"Save\")',\n}, {\n    content: \"wait for editor to close\",\n    trigger: 'iframe body:not(.editor_enable)',\n    run: () => null, // It's a check\n}];\n\ntour.register('client_action_redirect', {\n    test: true,\n    url: testUrl,\n},\n[\n    // Case 1: From frontend, click on `enable_editor=1` link without `/@/` in it\n    ...goToFrontendSteps,\n    {\n        content: \"Click on the link to frontend\",\n        trigger: '#test_contact_FE',\n    },\n    ...checkEditorSteps,\n\n    // Case 2: From frontend, click on `enable_editor=1` link with `/@/` in it\n    ...goToFrontendSteps,\n    {\n        content: \"Click on the link to backend\",\n        trigger: '#test_contact_BE',\n    },\n    ...checkEditorSteps,\n\n    // Case 3: From backend, click on `enable_editor=1` link without `/@/` in it\n    // TODO: This will be fixed in another fix related to the listening of the\n    //       URL changes from the client action.\n    // ...goToBackendSteps,\n    // {\n    //     content: \"Click on the link to frontend (2)\",\n    //     trigger: 'iframe #test_contact_FR',\n    // },\n    // ...checkEditorSteps,\n\n    // Case 4: From backend, click on `enable_editor=1` link with `/@/` in it\n    ...goToBackendSteps,\n    {\n        content: \"Click on the link to backend (2)\",\n        trigger: 'iframe #test_contact_BE',\n    },\n    ...checkEditorSteps,\n]);\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\nconst snippets = [\n    {\n        id: 's_text_image',\n        name: 'Text - Image',\n    },\n    {\n        id: \"s_banner\",\n        name: \"Banner\",\n    },\n    {\n        id: \"s_popup\",\n        name: \"Popup\",\n    },\n];\nfunction checkEyeIcon(snippetName, visible) {\n    const eyeIcon = visible ? \"fa-eye\" : \"fa-eye-slash\";\n    const openOrClose = visible ? \"open\" : \"close\";\n    const endExplanation = `should be ${openOrClose} in the \"Invisible Elements\" panel`;\n    const invisibleElPanel = \"o_we_invisible_el_panel\";\n    return {\n            content: `The eye icon of ${snippetName} ${endExplanation}`,\n            trigger:\n            `.${invisibleElPanel} .o_we_invisible_entry:contains(\"${snippetName}\") i.${eyeIcon}`,\n            run: () => {}, // it is a check\n        };\n}\nfunction checkEyesIconAfterSave(footerIsHidden = true) {\n    const eyeIconChecks = [\n        checkEyeIcon(\"Header\", false),\n        checkEyeIcon(\"Text - Image\", true),\n        checkEyeIcon(\"Popup\", false),\n        checkEyeIcon(\"Banner\", true),\n    ];\n    if (footerIsHidden) {\n        eyeIconChecks.push(checkEyeIcon(\"Footer\", false));\n    }\n    return eyeIconChecks;\n}\nwTourUtils.registerWebsitePreviewTour('conditional_visibility_1', {\n    edition: true,\n    url: '/',\n    test: true,\n}, [\nwTourUtils.dragNDrop(snippets[0]),\nwTourUtils.clickOnSnippet(snippets[0]),\nwTourUtils.changeOption('ConditionalVisibility', 'we-toggler'),\n{\n    content: 'click on conditional visibility',\n    trigger: '[data-name=\"visibility_conditional\"]',\n    run: 'click',\n},\n{\n    content: 'click on utm medium toggler',\n    trigger: '[data-save-attribute=\"visibilityValueUtmMedium\"] we-toggler',\n    run: 'click',\n},\n{\n    trigger: '[data-save-attribute=\"visibilityValueUtmMedium\"] we-selection-items .o_we_m2o_search input',\n    content: 'Search for Email',\n    run: 'text Email',\n},\n{\n    trigger: '[data-save-attribute=\"visibilityValueUtmMedium\"] we-selection-items [data-add-record=\"Email\"]',\n    content: 'click on Email',\n    run: 'click',\n},\n...wTourUtils.clickOnSave(),\n{\n    content: 'Check if the rule was applied',\n    extra_trigger: '.o_website_preview:only-child',\n    trigger: 'iframe #wrap',\n    run: function (actions) {\n        const style = window.getComputedStyle(this.$anchor[0].getElementsByClassName('s_text_image')[0]);\n        if (style.display !== 'none') {\n            console.error('error This item should be invisible and only visible if utm_medium === email');\n        }\n    },\n},\n...wTourUtils.clickOnEditAndWaitEditMode(),\n{\n    content: 'Check if the element is visible as it should always be visible in edit view',\n    trigger: 'iframe #wrap .s_text_image',\n    run: function (actions) {\n        const style = window.getComputedStyle((this.$anchor[0]));\n        if (style.display === 'none') {\n            console.error('error This item should now be visible because utm_medium === email');\n        }\n    },\n},\n]);\n\nwTourUtils.registerWebsitePreviewTour(\"conditional_visibility_3\", {\n    edition: true,\n    test: true,\n    url: \"/\",\n},\n[\ncheckEyeIcon(\"Text - Image\", true),\n// Drag a \"Banner\" snippet on the website.\nwTourUtils.dragNDrop(snippets[1]),\n// Click on the \"Banner\" snippet.\nwTourUtils.clickOnSnippet(snippets[1]),\nwTourUtils.changeOption(\"ConditionalVisibility\", \"we-toggler\"),\nwTourUtils.changeOption(\"ConditionalVisibility\", '[data-name=\"visibility_conditional\"]'),\ncheckEyeIcon(\"Banner\", true),\n{\n    content: \"click on 'Blocks'\",\n    trigger: \"#snippets_menu button:contains('Blocks')\",\n},\n// Drag a \"Popup\" snippet on the website.\nwTourUtils.dragNDrop(snippets[2]),\n{\n    content: \"Toggle the visibility of the popup\",\n    in_modal: false,\n    trigger: \".o_we_invisible_el_panel .o_we_invisible_entry:contains('Popup')\",\n},\ncheckEyeIcon(\"Popup\", false),\n{\n    content: \"Click on footer\",\n    trigger: \"iframe #wrapwrap footer\",\n},\nwTourUtils.changeOption(\"HideFooter\", \"we-checkbox\"),\ncheckEyeIcon(\"Footer\", false),\n{\n    content: \"Click on Header\",\n    trigger: \"iframe #wrapwrap header\",\n},\nwTourUtils.changeOption(\"TopMenuVisibility\", \"we-toggler\"),\nwTourUtils.changeOption(\"TopMenuVisibility\", '[data-visibility=\"hidden\"]'),\ncheckEyeIcon(\"Header\", false),\n{\n    content: \"Toggle the visibility of the Banner snippet\",\n    trigger: \".o_we_invisible_el_panel .o_we_invisible_entry:contains('Banner')\",\n},\ncheckEyeIcon(\"Banner\", false),\n...wTourUtils.clickOnSave(),\n...wTourUtils.clickOnEditAndWaitEditMode(),\n...checkEyesIconAfterSave(),\n]);\n\nwTourUtils.registerWebsitePreviewTour(\"conditional_visibility_4\", {\n    edition: true,\n    test: true,\n    url: \"/\",\n},\n[\n// Click on the \"Text-Image\" snippet.\nwTourUtils.clickOnSnippet(snippets[0]),\n{\n    content: \"Click on the 'move down' option\",\n    trigger: \"iframe we-button.o_we_user_value_widget.fa-angle-down\",\n},\n...checkEyesIconAfterSave(),\n{\n    content: \"Check the order on the 'Invisible Elements' panel\",\n    trigger: \".o_we_invisible_el_panel div:nth-child(3):contains('Banner')\",\n    run: () => {}, // it is a check\n},\n{\n    content: \"Toggle the visibility of the Footer\",\n    trigger: \".o_we_invisible_el_panel .o_we_invisible_entry:contains('Footer')\",\n},\n{\n    content: \"Check that the footer is visible\",\n    trigger: \"iframe #wrapwrap footer\",\n    run: () => {}, // it is a check\n},\n// Click on the \"Banner\" snippet.\nwTourUtils.clickOnSnippet(snippets[1]),\n{\n    content: \"Drag the 'Banner' snippet to the end of the page\",\n    trigger: \"iframe .o_overlay_move_options .ui-draggable-handle\",\n    run: \"drag_and_drop iframe #wrapwrap footer\",\n},\n...checkEyesIconAfterSave(false),\n{\n    content: \"Check the order on the 'Invisible Elements' panel\",\n    trigger: \".o_we_invisible_el_panel div:nth-child(3):contains('Text - Image')\",\n    run: () => {}, // it is a check\n},\n]);\n\nwTourUtils.registerWebsitePreviewTour(\"conditional_visibility_5\", {\n    edition: true,\n    test: true,\n    url: \"/\",\n}, [\n    wTourUtils.dragNDrop(snippets[0]),\n    {\n        content: \"Click on the image of the dragged snippet\",\n        trigger: \"iframe .s_text_image img\",\n    },\n    wTourUtils.changeOption(\"DeviceVisibility\", 'we-button[data-toggle-device-visibility=\"no_desktop\"]'),\n    {\n        content: \"Check that the Column has been added in the 'Invisible Elements' panel\",\n        trigger: \".o_we_invisible_el_panel .o_we_invisible_entry:contains('Column')\",\n        run: () => {}, // it is a check\n    },\n    {\n        content: \"Click on the 'Text - Image' snippet\",\n        trigger: \"iframe .s_text_image\",\n    },\n    wTourUtils.changeOption(\"ConditionalVisibility\", 'we-button[data-toggle-device-visibility=\"no_desktop\"]'),\n    {\n        content: \"Check that the 'Text - Image' is the parent of 'Column' in the 'Invisible Elements' panel\",\n        trigger: \".o_we_invisible_el_panel .o_we_invisible_root_parent.o_we_invisible_entry:contains('Text - Image') + ul .o_we_invisible_entry.o_we_sublevel_1:contains('Column')\",\n        run: () => {}, // it is a check\n    },\n    {\n        content: \"Click on the 'Text - Image' entry on the 'Invisible Elements' panel\",\n        trigger: \".o_we_invisible_el_panel .o_we_invisible_root_parent.o_we_invisible_entry:contains('Text - Image')\",\n    },\n    {\n        content: \"Check that the snippet is visible on the website\",\n        trigger: \"iframe .s_text_image.o_snippet_desktop_invisible.o_snippet_override_invisible\",\n        run: () => {}, // it is a check\n    },\n    wTourUtils.changeOption(\"ConditionalVisibility\", 'we-button[data-toggle-device-visibility=\"no_mobile\"]'),\n    {\n        content: \"Check that the 'Text - Image' has been removed from the 'Invisible Elements' panel\",\n        trigger: \".o_we_invisible_el_panel:not(.o_we_invisible_entry:contains('Text - Image'))\",\n        run: () => {}, // it is a check\n    },\n    {\n        content: \"Click on the 'Column' entry on the 'Invisible Elements' panel\",\n        trigger: \".o_we_invisible_el_panel .o_we_invisible_entry:contains('Column')\",\n    },\n    {\n        content: \"Check that the column is visible on the website\",\n        trigger: \"iframe .s_text_image .row > .o_snippet_desktop_invisible.o_snippet_override_invisible\",\n        run: () => {}, // it is a check\n    },\n    wTourUtils.changeOption(\"DeviceVisibility\", 'we-button[data-toggle-device-visibility=\"no_mobile\"]'),\n    {\n        content: \"Check that the column has been removed from the 'Invisible Elements' panel\",\n        trigger: \"#oe_snippets:not(:has(.o_we_invisible_entry:contains('Column')))\",\n        run: () => {}, // it is a check\n    },\n    {\n        content: \"Activate mobile preview\",\n        trigger: \".o_we_website_top_actions button[data-action='mobile']\",\n    },\n    {\n        content: \"Check that the 'Text - Image' is the parent of 'Column' in the 'Invisible Elements' panel\",\n        trigger: \".o_we_invisible_el_panel .o_we_invisible_root_parent.o_we_invisible_entry:contains('Text - Image') + ul .o_we_invisible_entry.o_we_sublevel_1:contains('Column')\",\n        run: () => {}, // it is a check\n    },\n]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\ntour.register('conditional_visibility_2', {\n    test: true,\n    url: '/?utm_medium=Email',\n},\n[{\n    content: 'The content previously hidden should now be visible',\n    trigger: 'body #wrap',\n    run: function (actions) {\n        const style = window.getComputedStyle(this.$anchor[0].getElementsByClassName('s_text_image')[0]);\n        if (style.display === 'none') {\n            console.error('error This item should now be visible because utm_medium === email');\n        }\n    },\n},\n]);\n", "/** @odoo-module */\n\nimport tour from 'web_tour.tour';\n\ntour.register('configurator_translation', {\n    test: true,\n    url: '/website/configurator',\n},\n[\n    // Configurator first screen\n    {\n        content: \"click next\",\n        trigger: 'button.o_configurator_show',\n    },\n    // Make sure \"Back\" works\n    {\n        content: \"use browser's Back\",\n        trigger: 'a.o_change_website_type',\n        run: () => {\n            window.history.back();\n        },\n    }, {\n        content: \"return to description screen\",\n        trigger: 'button.o_configurator_show',\n    },\n    // Description screen\n    {\n        content: \"select a website type\",\n        trigger: 'a.o_change_website_type',\n    }, {\n        content: \"insert a website industry\",\n        trigger: '.o_configurator_industry input',\n        run: 'text ab',\n    }, {\n        content: \"select a website industry from the autocomplete\",\n        trigger: '.o_configurator_industry_wrapper ul li a:contains(\"in fr\")',\n    }, {\n        content: \"select an objective\",\n        trigger: '.o_configurator_purpose_dd a',\n    }, {\n        content: \"choose from the objective list\",\n        trigger: 'a.o_change_website_purpose',\n    },\n    // Palette screen\n    {\n        content: \"chose a palette card\",\n        trigger: '.palette_card',\n    },\n    // Features screen\n    {\n        content: \"select confidentialit\u00e9\",\n        trigger: '.card:contains(Parseltongue_privacy)',\n    }, {\n        content: \"Click on build my website\",\n        trigger: 'button.btn-primary',\n    }, {\n        content: \"Loader should be shown\",\n        trigger: '.o_website_loader_container',\n        run: function () {}, // it's a check\n    }, {\n        content: \"Wait untill the configurator is finished\",\n        trigger: '#oe_snippets.o_loaded',\n        timeout: 30000,\n    }, {\n        // Check the content of the save button to make sure the website is in\n        // Parseltongue. (The editor should be in the website's default language,\n        // which should be parseltongue in this test.)\n        content: \"exit edit mode\",\n        trigger: '.o_we_website_top_actions button.btn-primary:contains(\"Save_Parseltongue\")',\n    }, {\n         content: \"wait for editor to be closed\",\n         trigger: 'iframe body:not(.editor_enable)',\n         run: function () {}, // It's a check.\n    }\n]);\n", "odoo.define(\"website.tour.default_shape_gets_palette_colors\", function (require) {\n\"use strict\";\n\nconst wTourUtils = require('website.tour_utils');\n\nwTourUtils.registerWebsitePreviewTour(\"default_shape_gets_palette_colors\", {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: 's_text_image',\n        name: 'Text - Image',\n    }),\n    wTourUtils.clickOnSnippet({\n        id: 's_text_image',\n        name: 'Text - Image',\n    }),\n    wTourUtils.changeOption('ColoredLevelBackground', 'Shape'),\n    {\n        content: \"Check that shape does not have a background-image in its inline style\",\n        trigger: 'iframe #wrap .s_text_image .o_we_shape',\n        run: () => {\n            const shape = $('iframe:not(.o_ignore_in_tour)').contents().find('#wrap .s_text_image .o_we_shape')[0];\n            if (shape.style.backgroundImage) {\n                console.error(\"error The default shape has a background-image in its inline style (should rely on the class)\");\n            }\n        },\n    },\n]);\n});\n", "/** @odoo-module **/\n\nimport wTourUtils from \"website.tour_utils\";\n\nwTourUtils.registerWebsitePreviewTour(\"test_drag_and_drop_on_non_editable\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: \"s_company_team\",\n        name: \"Team\",\n    }),\n    {\n        content: \"Click on an editable media in non editable env.\",\n        trigger: \"iframe .s_company_team .o_not_editable > .o_editable_media\",\n    },\n    wTourUtils.goBackToBlocks(),\n    Object.assign(wTourUtils.dragNDrop({\n        id: \"s_text_highlight\",\n        name: \"Text Highlight\",\n    }), {\n        content: \"Drag and drop the Text Highlight building block next to the Team block media.\",\n        run: \"drag_and_drop iframe .s_company_team .o_not_editable > .o_editable_media\",\n    }),\n    {\n        content: \"Verify that the Text Highlight building block isn't in a non editable element.\",\n        trigger: \"iframe .s_company_team :not(.o_not_editable) > .s_text_highlight\",\n        run: () => null, // it's a check\n    },\n]);\n", "odoo.define(\"website.tour.edit_link_popover\", function (require) {\n\"use strict\";\n\nconst { browser } = require('@web/core/browser/browser');\nconst { patch } = require(\"@web/core/utils/patch\");\nconst wTourUtils = require('website.tour_utils');\n\nconst FIRST_PARAGRAPH = 'iframe #wrap .s_text_image p:nth-child(2)';\n\nconst clickFooter = [{\n    content: \"Save the link by clicking outside the URL input (not on a link element)\",\n    trigger: 'iframe footer h5:first',\n}, {\n    content: \"Wait delayed click on footer\",\n    trigger: '.o_we_customize_panel we-title:contains(\"Footer\")',\n    run: function () {}, // it's a check\n}];\n\nconst clickEditLink = [{\n    content: \"Click on Edit Link in Popover\",\n    trigger: 'iframe .o_edit_menu_popover .o_we_edit_link',\n}, {\n    content: \"Ensure popover is closed\",\n    trigger: 'iframe html:not(:has(.o_edit_menu_popover))', // popover should be closed\n    run: function () {}, // it's a check\n    in_modal: false,\n}];\n\nwTourUtils.registerWebsitePreviewTour('edit_link_popover', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    // 1. Test links in page content (web_editor)\n    wTourUtils.dragNDrop({\n        id: 's_text_image',\n        name: 'Text - Image',\n    }),\n    {\n        content: \"Click on a paragraph\",\n        trigger: FIRST_PARAGRAPH,\n        run: 'text Paragraph', // Make sure the selection is set in the paragraph\n    },\n    {\n        content: \"Click on 'Link' to open Link Dialog\",\n        trigger: \"#toolbar #create-link\",\n    },\n    {\n        content: \"Type the link URL /contactus\",\n        trigger: '#o_link_dialog_url_input',\n        run: 'text /contactus'\n    },\n    ...clickFooter,\n    {\n        content: \"Click on newly created link\",\n        trigger: `${FIRST_PARAGRAPH} a`,\n    },\n    {\n        content: \"Popover should be shown\",\n        trigger: 'iframe .o_edit_menu_popover .o_we_url_link:contains(\"Contact Us\")', // At this point preview is loaded\n        run: function () {}, // it's a check\n    },\n    ...clickEditLink,\n    {\n        content: \"Type the link URL /\",\n        trigger: '#o_link_dialog_url_input',\n        run: \"text /\"\n    },\n    ...clickFooter,\n    {\n        content: \"Click on link\",\n        trigger: `${FIRST_PARAGRAPH} a`,\n    },\n    {\n        content: \"Popover should be shown with updated preview data\",\n        trigger: 'iframe .o_edit_menu_popover .o_we_url_link:contains(\"Home\")',\n        run: function () {}, // it's a check\n    },\n    {\n        content: \"Click on Remove Link in Popover\",\n        trigger: 'iframe .o_edit_menu_popover .o_we_remove_link',\n    },\n    {\n        content: \"Link should be removed\",\n        trigger: `${FIRST_PARAGRAPH}:not(:has(a))`,\n        run: function () {}, // it's a check\n    },\n    {\n        content: \"Ensure popover is closed\",\n        trigger: 'iframe html:not(:has(.o_edit_menu_popover))', // popover should be closed\n        run: function () {}, // it's a check\n    },\n    // 2. Test links in navbar (website)\n    {\n        content: \"Click navbar menu Home\",\n        trigger: 'iframe #top_menu a:contains(\"Home\")',\n    },\n    {\n        content: \"Popover should be shown (2)\",\n        trigger: 'iframe .o_edit_menu_popover .o_we_url_link:contains(\"Home\")',\n        run: function () {}, // it's a check\n    },\n    ...clickEditLink,\n    {\n        content: \"Change the URL\",\n        trigger: '#url_input',\n        run: \"text /contactus\"\n    },\n    {\n        content: \"Save the Edit Menu modal\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    {\n        content: \"Click on the Home menu again\",\n        extra_trigger: 'div:not(.o_loading_dummy) > #oe_snippets',\n        trigger: 'iframe #top_menu a:contains(\"Home\")[href=\"/contactus\"]',\n    },\n    {\n        content: \"Popover should be shown with updated preview data (2)\",\n        trigger: 'iframe .o_edit_menu_popover .o_we_url_link:contains(\"Contact Us\")',\n        run: function () {}, // it's a check\n    },\n    {\n        content: \"Click on Edit Menu in Popover\",\n        trigger: 'iframe .o_edit_menu_popover .js_edit_menu',\n    },\n    {\n        content: \"Edit Menu (tree) should open\",\n        trigger: '.o_website_dialog .oe_menu_editor',\n        run: function () {}, // it's a check\n    },\n    {\n        content: \"Close modal\",\n        trigger: '.modal-footer .btn-secondary',\n    },\n    // 3. Test other links (CTA in navbar & links in footer)\n    {\n        content: \"Click CTA in navbar\",\n        trigger: 'iframe #top_menu_container a.btn-primary[href=\"/contactus\"]',\n    },\n    {\n        content: \"Popover should be shown (3)\",\n        trigger: 'iframe .o_edit_menu_popover .o_we_url_link:contains(\"Contact Us\")',\n        run: function () {}, // it's a check\n    },\n    {\n        content: \"Toolbar should be shown (3)\",\n        trigger: '#toolbar:has(#o_link_dialog_url_input:propValue(/contactus))',\n        run: function () {}, // it's a check\n    },\n    {\n        content: \"Click 'Home' link in footer\",\n        trigger: 'iframe footer a[href=\"/\"]',\n    },\n    {\n        content: \"Popover should be shown (4)\",\n        trigger: 'iframe .o_edit_menu_popover .o_we_url_link:contains(\"Home\")',\n        run: function () {}, // it's a check\n    },\n    {\n        content: \"Toolbar should be shown (4)\",\n        trigger: '#toolbar:has(#o_link_dialog_url_input:propValue(/))',\n        run: function () {}, // it's a check\n    },\n    // 4. Popover should close when clicking non-link element\n    ...clickFooter,\n    // 5. Double click should not open popover but should open toolbar link\n    {\n        content: \"Double click on link\",\n        extra_trigger: 'iframe html:not(:has(.o_edit_menu_popover))', // popover should be closed\n        trigger: 'iframe footer a[href=\"/\"]',\n        run: function (actions) {\n            // Create range to simulate real double click, see pull request\n            const range = document.createRange();\n            range.selectNodeContents(this.$anchor[0]);\n            const sel = window.getSelection();\n            sel.removeAllRanges();\n            sel.addRange(range);\n            actions.click();\n            actions.dblclick();\n        },\n    },\n    {\n        content: \"Ensure popover is opened on double click, and so is right panel edit link\",\n        trigger: 'html:has(#o_link_dialog_url_input)',\n        extra_trigger: 'iframe html:has(.o_edit_menu_popover)',\n        run: function () {}, // it's a check\n    },\n    {\n        content: \"Ensure that a click on the link popover link opens a new window in edit mode\",\n        trigger: 'iframe .o_edit_menu_popover a.o_we_url_link[target=\"_blank\"]',\n        extra_trigger: 'iframe .o_edit_menu_popover a.o_we_full_url[target=\"_blank\"]',\n        run: (actions) => {\n            // We do not want to open a link in a tour\n            patch(browser, 'window_open_action', {\n                open: (url) => {\n                    if (window.location.hostname === url.hostname && url.pathname.startsWith('/@/')) {\n                        document.querySelector('body').classList.add('new_backend_window_opened');\n                    }\n                }\n            }, { pure: true });\n            actions.click();\n        },\n    },\n    {\n        content: \"Ensure that link is opened correctly in edit mode\",\n        trigger: '.new_backend_window_opened',\n        run: () => {}, // it's a check\n    },\n]);\n});\n", "odoo.define(\"website.tour.edit_megamenu\", function (require) {\n\"use strict\";\n\nconst wTourUtils = require('website.tour_utils');\n\nconst toggleMegaMenu = (stepOptions) => Object.assign({}, {\n    content: \"Toggles the mega menu.\",\n    trigger: 'iframe #top_menu .nav-item a.o_mega_menu_toggle',\n    run: function () {\n        // If the mega menu is displayed inside the extra menu items, it should\n        // already be displayed.\n        if (!this.$anchor[0].closest('.o_extra_menu_items')) {\n            this.$anchor[0].dispatchEvent(new Event('click'))\n        }\n    },\n}, stepOptions);\n\nwTourUtils.registerWebsitePreviewTour('edit_megamenu', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    // Add a megamenu item to the top menu.\n    {\n        content: \"Click on a menu item\",\n        trigger: 'iframe #top_menu .nav-item a',\n    },\n    {\n        content: \"Click on 'Link' to open Link Dialog\",\n        trigger: 'iframe .o_edit_menu_popover a.js_edit_menu',\n    },\n    {\n        content: \"Trigger the link dialog (click 'Add Mega Menu Item')\",\n        extra_trigger: '.o_website_dialog:visible',\n        trigger: '.modal-body a:eq(1)',\n    },\n    {\n        content: \"Write a label for the new menu item\",\n        trigger: '.modal-dialog .o_website_dialog input',\n        run: 'text Megaaaaa!'\n    },\n    {\n        content: \"Confirm the mega menu label\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    {\n        content: \"Save the website menu with a new mega menu\",\n        trigger: '.modal-footer .btn-primary',\n        extra_trigger: '.oe_menu_editor [data-is-mega-menu=\"true\"] .js_menu_label:contains(\"Megaaaaa!\")',\n    },\n    // Edit a menu item\n    wTourUtils.clickOnExtraMenuItem({extra_trigger: '#oe_snippets.o_loaded'}, true),\n    toggleMegaMenu({extra_trigger: 'iframe #top_menu .nav-item a.o_mega_menu_toggle:contains(\"Megaaaaa!\")'}),\n    {\n        content: \"Select the last menu link of the first column\",\n        trigger: 'iframe .s_mega_menu_odoo_menu .row > div:first-child .nav > :nth-child(6)', // 6th is the last one\n    },\n    {\n        content: \"Hit the delete button to remove the menu link\",\n        trigger: 'iframe .oe_overlay .oe_snippet_remove',\n    },\n    {\n        content: \"Check that the last menu link was deleted\",\n        trigger: 'iframe .s_mega_menu_odoo_menu .row > div:first-child .nav:not(:has(> :nth-child(6)))',\n        run: () => null,\n    },\n    {\n        content: \"Clicks on the first title item.\",\n        trigger: 'iframe .o_mega_menu h4',\n    },\n    {\n        content: \"Press enter.\",\n        trigger: 'iframe .o_mega_menu h4',\n        run: function (actions) {\n            this.$anchor[0].dispatchEvent(new window.InputEvent('input', {bubbles: true, inputType: 'insertParagraph'}));\n        },\n    },\n    {\n        content: \"The menu should still be visible. Edit a menu item.\",\n        trigger: 'iframe .o_mega_menu h4',\n        run: 'text New Menu Item',\n    },\n    {\n        // If this step fails, it means that a patch inside bootstrap was lost.\n        content: \"Press the 'down arrow' key.\",\n        trigger: 'iframe .o_mega_menu h4',\n        run: function (actions) {\n            this.$anchor[0].dispatchEvent(new window.KeyboardEvent(\"keydown\", { key: \"ArrowDown\" }));\n        },\n    },\n    ...wTourUtils.clickOnSave(),\n    wTourUtils.clickOnExtraMenuItem({extra_trigger: 'iframe body:not(.editor_enable)'}, true),\n    toggleMegaMenu(),\n    {\n        content: \"The menu item should have been renamed.\",\n        trigger: 'iframe .o_mega_menu h4:contains(\"New Menu Item\")',\n        run: function () {}, // it's a check\n    },\n]);\nwTourUtils.registerWebsitePreviewTour('edit_megamenu_big_icons_subtitles', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    // Add a megamenu item to the top menu.\n    {\n        content: \"Click on a menu item\",\n        trigger: 'iframe #top_menu .nav-item a',\n    },\n    {\n        content: \"Click on 'Link' to open Link Dialog\",\n        trigger: 'iframe .o_edit_menu_popover a.js_edit_menu',\n    },\n    {\n        content: \"Trigger the link dialog (click 'Add Mega Menu Item')\",\n        extra_trigger: \".o_website_dialog\",\n        trigger: '.modal-body a:eq(1)',\n    },\n    {\n        content: \"Write a label for the new menu item\",\n        trigger: '.modal-dialog .o_website_dialog input',\n        run: 'text Megaaaaa2!',\n    },\n    {\n        content: \"Confirm the mega menu label\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    {\n        content: \"Save the website menu with a new mega menu\",\n        trigger: '.modal-footer .btn-primary',\n        extra_trigger: '.oe_menu_editor [data-is-mega-menu=\"true\"] .js_menu_label:contains(\"Megaaaaa2!\")',\n    },\n    {\n        content: \"Check for the new mega menu\",\n        trigger: 'iframe #top_menu:has(.nav-item a.o_mega_menu_toggle:contains(\"Megaaaaa2!\"))',\n        run: function () {}, // it's a check\n    },\n    // Edit a menu item\n    wTourUtils.clickOnExtraMenuItem({extra_trigger: '#oe_snippets.o_loaded'}, true),\n    toggleMegaMenu({extra_trigger: 'iframe #top_menu .nav-item a.o_mega_menu_toggle:contains(\"Megaaaaa2!\")'}),\n    {\n        content: \"Select the first menu link of the first column\",\n        trigger: 'iframe .s_mega_menu_odoo_menu .row > div:first-child .nav > :first-child',\n    },\n    wTourUtils.changeOption(\"MegaMenuLayout\", \"we-toggler\"),\n    {\n        content: \"Select Big Icons Subtitles mega menu\",\n        trigger: '[data-select-label=\"Big Icons Subtitles\"]',\n    },\n    {\n        content: \"Select the h4 of first menu link of the first column\",\n        trigger: 'iframe .s_mega_menu_big_icons_subtitles .row > div:first-child .nav > :first-child h4',\n        run: function (actions) {\n            // Clicking on the h4 element first time leads to the selection of\n            // the entire a.nav-link, due to presence of `o_default_snippet_text` class\n            // hence, specify the selection on the h4 element\n            actions.click();\n            const iframeDocument = document.querySelector('.o_iframe').contentDocument;\n            const range = iframeDocument.createRange();\n            range.selectNodeContents(this.$anchor[0]);\n            const sel = iframeDocument.getSelection();\n            sel.removeAllRanges();\n            sel.addRange(range);\n        },\n    },\n    {\n        content: \"Convert it to Bold\",\n        trigger: '#oe_snippets #toolbar #bold',\n    },\n    ...wTourUtils.clickOnSave(),\n    wTourUtils.clickOnExtraMenuItem({extra_trigger: 'iframe body:not(.editor_enable)'}, true),\n    toggleMegaMenu(),\n    {\n        content: \"The menu item should only convert selected text to Bold.\",\n        trigger: 'iframe .s_mega_menu_big_icons_subtitles .row > div:first-child .nav > :first-child font:not(:has(strong))',\n        run: function () {}, // it's a check\n    },\n]);\n});\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('edit_menus', {\n    test: true,\n    url: '/',\n}, [\n    // Add a megamenu item from the menu.\n    {\n        content: \"open site menu\",\n        extra_trigger: \"iframe #wrapwrap\",\n        trigger: 'button[data-menu-xmlid=\"website.menu_site\"]',\n    },\n    {\n        content: \"Click on Edit Menu\",\n        trigger: 'a[data-menu-xmlid=\"website.menu_edit_menu\"]',\n    },\n    {\n        content: \"Trigger the link dialog (click 'Add Mega Menu Item')\",\n        extra_trigger: '.o_website_dialog:visible',\n        trigger: '.modal-body a:eq(1)',\n    },\n    {\n        content: \"Write a label for the new menu item\",\n        trigger: '.modal-dialog .o_website_dialog input',\n        run: 'text Megaaaaa!'\n    },\n    {\n        content: \"Confirm the mega menu label\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    {\n        content: \"Save the new menu\",\n        trigger: '.modal-footer .btn-primary',\n        extra_trigger: '.oe_menu_editor [data-is-mega-menu=\"true\"] .js_menu_label:contains(\"Megaaaaa!\")',\n    },\n    wTourUtils.clickOnExtraMenuItem({extra_trigger: 'body:not(:has(.oe_menu_editor))'}, true),\n    {\n        content: \"There should be a new megamenu item.\",\n        trigger: 'iframe #top_menu .nav-item a.o_mega_menu_toggle:contains(\"Megaaaaa!\")',\n        run: () => {}, // It's a check.\n    },\n    // Add a menu item in edit mode.\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: \"Click on a menu item\",\n        trigger: 'iframe #top_menu .nav-item a',\n    },\n    {\n        content: \"Click on Edit Menu\",\n        trigger: 'iframe .o_edit_menu_popover a.js_edit_menu',\n    },\n    {\n        content: \"Trigger the link dialog (click 'Add Menu Item')\",\n        extra_trigger: '.o_website_dialog:visible',\n        trigger: '.modal-body a:eq(0)',\n    },\n    {\n        content: \"Confirm the new menu entry without a label\",\n        extra_trigger: '.modal-dialog .o_website_dialog input:eq(0)',\n        trigger: '.modal-footer .btn-primary',\n    },\n    {\n        content: \"It didn't save without a label. Fill label input.\",\n        extra_trigger: '.o_website_dialog:eq(1):visible',\n        trigger: '.modal-dialog .o_website_dialog input:eq(0)',\n        run: 'text Random!',\n    },\n    {\n        content: \"Confirm the new menu entry without a url\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    {\n        content: \"It didn't save without a url. Fill url input.\",\n        trigger: '.modal-dialog .o_website_dialog input:eq(1)',\n        extra_trigger: '.modal-dialog .o_website_dialog input.is-invalid',\n        run: 'text #',\n    },\n    {\n        content: \"Confirm the new menu entry\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    {\n        content: \"Save the website menu with the new entry\",\n        trigger: '.modal-footer .btn-primary',\n        extra_trigger: '.oe_menu_editor .js_menu_label:contains(\"Random!\")',\n    },\n    // Edit the new menu item from the \"edit link\" popover button\n    wTourUtils.clickOnExtraMenuItem({extra_trigger: '#oe_snippets.o_loaded'}, true),\n    {\n        content: \"Menu should have a new link item\",\n        trigger: 'iframe #top_menu .nav-item a:contains(\"Random!\")',\n    },\n    {\n        content: \"navbar shouldn't have any zwnbsp and no o_link_in_selection class\",\n        trigger: 'iframe nav.navbar:not(:has(.o_link_in_selection)):not(:contains(\"\\ufeff\"))',\n        run: () => {}, // It's a check.\n    },\n    {\n        content: \"Click on Edit Link\",\n        trigger: 'iframe .o_edit_menu_popover a.o_we_edit_link',\n    },\n    {\n        content: \"Change the label\",\n        trigger: '.modal-dialog .o_website_dialog input:eq(0)',\n        run: 'text Modnar',\n    },\n    {\n        content: \"Confirm the new label\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    ...wTourUtils.clickOnSave(),\n    wTourUtils.clickOnExtraMenuItem({extra_trigger: 'iframe body:not(.editor_enable)'}, true),\n    {\n        content: \"Label should have changed\",\n        extra_trigger: \"iframe body:not(.editor_enable)\",\n        trigger: 'iframe #top_menu .nav-item a:contains(\"Modnar\")',\n        run: () => {}, // it's a check\n    },\n    // Edit the menu item from the \"edit menu\" popover button\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    wTourUtils.clickOnExtraMenuItem({}, true),\n    {\n        content: \"Click on the 'Modnar' link\",\n        trigger: 'iframe #top_menu .nav-item a:contains(\"Modnar\")',\n    },\n    {\n        content: \"Click on the popover Edit Menu button\",\n        trigger: 'iframe .o_edit_menu_popover a.js_edit_menu',\n    },\n    {\n        content: \"Click on the dialog Edit Menu button\",\n        trigger: '.oe_menu_editor .js_menu_label:contains(\"Modnar\")',\n        run: function () {\n            const liEl = this.$anchor[0].closest('[data-menu-id]');\n            liEl.querySelector('button.js_edit_menu').click();\n        },\n    },\n    {\n        content: \"Change the label\",\n        trigger: '.modal-dialog .o_website_dialog input:eq(0)',\n        run: 'text Modnar !!',\n    },\n    {\n        content: \"Confirm the new menu label\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    {\n        content: \"Save the website menu with the new menu label\",\n        trigger: '.modal-footer .btn-primary',\n        extra_trigger: '.oe_menu_editor .js_menu_label:contains(\"Modnar !!\")',\n    },\n    // Drag a block to be able to scroll later.\n    wTourUtils.dragNDrop({id: 's_media_list', name: 'Media List'}),\n    ...wTourUtils.clickOnSave(),\n    wTourUtils.clickOnExtraMenuItem({extra_trigger: 'iframe body:not(.editor_enable)'}, true),\n    {\n        content: \"Label should have changed\",\n        trigger: 'iframe #top_menu .nav-item a:contains(\"Modnar !!\")',\n        run: () => {}, // It's a check.\n    },\n    // Nest menu item from the menu.\n    {\n        content: \"open site menu\",\n        trigger: 'button[data-menu-xmlid=\"website.menu_site\"]',\n    },\n    {\n        content: \"Click on Edit Menu\",\n        trigger: 'a[data-menu-xmlid=\"website.menu_edit_menu\"]',\n    },\n    {\n        content: \"Drag item into parent\",\n        trigger: '.oe_menu_editor li:contains(\"Contact us\") > .ui-sortable-handle',\n        // Menu rows are 38px tall.\n        run: \"drag_move_and_drop [50,38]@.oe_menu_editor li:contains('Home') > .ui-sortable-handle => .oe_menu_editor li:contains('Home') .ui-sortable-placeholder\",\n    },\n    {\n        content: \"Wait for drop\",\n        trigger: '.oe_menu_editor li:contains(\"Home\") ul li:contains(\"Contact us\")',\n        run: () => {}, // It's a check.\n    },\n    // Drag the Mega menu to the first position.\n    {\n        content: \"Drag Mega at the top\",\n        trigger: '.oe_menu_editor li:contains(\"Megaaaaa!\") > .ui-sortable-handle',\n        run: \"drag_move_and_drop [0,0]@.oe_menu_editor li:contains('Home') > .ui-sortable-handle => .oe_menu_editor li\",\n    },\n    {\n        content: \"Wait for drop\",\n        trigger: '.oe_menu_editor:first-child:contains(\"Megaaaaa!\")',\n        run: () => {}, // It's a check.\n    },\n    {\n        content: \"Save the website menu with new nested menus\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    {\n        content: \"Menu item should have a child\",\n        trigger: 'iframe #top_menu .nav-item a.dropdown-toggle:contains(\"Home\")',\n    },\n    // Check that with the auto close of dropdown menus, the dropdowns remain\n    // openable.\n    {\n        content: \"When menu item is opened, child item must appear in the shown menu\",\n        trigger: 'iframe #top_menu .nav-item:contains(\"Home\") ul.show li a.dropdown-item:contains(\"Contact us\")[href=\"/contactus\"]',\n        run: function () {\n            // Scroll down.\n            this.$anchor[0].closest('body').querySelector('.o_footer_copyright_name')\n                .scrollIntoView(true);\n        },\n    },\n    {\n        content: \"The Home menu should be closed\",\n        trigger: 'iframe #top_menu .nav-item:contains(\"Home\"):has(ul:not(.show))',\n        run: () => {}, // It's a check.\n    },\n    {\n        content: \"Open the Home menu after scroll\",\n        trigger: 'iframe #top_menu .nav-item a.dropdown-toggle:contains(\"Home\")',\n    },\n    {\n        content: \"Check that the Home menu is opened\",\n        trigger: 'iframe #top_menu .nav-item:contains(\"Home\") ul.show li' +\n            ' a.dropdown-item:contains(\"Contact us\")[href=\"/contactus\"]',\n        run: () => {}, // It's a check.\n    },\n    {\n        content: \"Close the Home menu\",\n        trigger: 'iframe #top_menu .nav-item:has(a.dropdown-toggle:contains(\"Home\"))',\n    },\n    {\n        content: \"Check that the Home menu is closed\",\n        trigger: 'iframe #top_menu .nav-item:contains(\"Home\"):has(ul:not(.show))',\n        run: () => {}, // It's a check.\n    },\n    {\n        content: \"Open the mega menu\",\n        trigger: 'iframe #top_menu .nav-item a.o_mega_menu_toggle:contains(\"Megaaaaa!\")',\n    },\n    {\n        content: \"When the mega menu is opened, scroll up\",\n        trigger: 'iframe #top_menu .o_mega_menu_toggle.show',\n        run: function () {\n            const marginTopOfMegaMenu = getComputedStyle(\n                this.$anchor[0].closest('.dropdown').querySelector('.o_mega_menu'))['margin-top'];\n            if (marginTopOfMegaMenu !== '0px') {\n                console.error('The margin-top of the mega menu should be 0px');\n            }\n            // Scroll up.\n            this.$anchor[0].closest('body').querySelector('.s_media_list_item:nth-child(2)')\n                .scrollIntoView(true);\n        }\n    },\n    {\n        content: \"Check that the mega menu is closed\",\n        trigger: 'iframe #top_menu .nav-item:contains(\"Megaaaaa!\"):has(div[data-name=\"Mega Menu\"]:not(.show))',\n        run:() => {}, // It's a check.\n    },\n    {\n        content: \"Open the mega menu after scroll\",\n        trigger: 'iframe #top_menu .nav-item a.o_mega_menu_toggle:contains(\"Megaaaaa!\")',\n    },\n    {\n        content: \"Check that the mega menu is opened\",\n        trigger: 'iframe #top_menu .nav-item:has(a.o_mega_menu_toggle:contains(\"Megaaaaa!\")) ' +\n                 '.s_mega_menu_odoo_menu',\n        run: () => {}, // It's a check.\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: \"Open nested menu item\",\n        trigger: 'iframe #top_menu .nav-item:contains(\"Home\"):nth(1) .dropdown-toggle',\n    },\n    {\n        // If this step fails, it means that a patch inside bootstrap was lost.\n        content: \"Press the 'down arrow' key.\",\n        trigger: 'iframe #top_menu .nav-item:contains(\"Home\") li:contains(\"Contact us\")',\n        run: function (actions) {\n            this.$anchor[0].dispatchEvent(new window.KeyboardEvent(\"keydown\", { key: \"ArrowDown\" }));\n        },\n    },\n]);\n", "/** @odoo-module **/\n\nimport tour from \"web_tour.tour\";\nimport wTourUtils from \"website.tour_utils\";\n\ntour.register('edit_translated_page_redirect', {\n    test: true,\n    url: '/nl/contactus',\n}, [\n    {\n        content: \"Enter backend\",\n        trigger: 'a.o_frontend_to_backend_edit_btn',\n    },\n    {\n        content: \"Check the data-for attribute\",\n        trigger: 'iframe main:has([data-for=\"contactus_form\"])',\n        run: () => {}, // it's a check\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: \"Go to /nl\",\n        trigger: \"body\",\n        run: () => {\n            // After checking the presence of the editor dashboard, we visit a\n            // translated version of the homepage. The homepage is a special\n            // case (there is no trailing slash), so we test it separately.\n            location.href = '/nl';\n        },\n    },\n    {\n        content: \"Enter backend\",\n        trigger: 'a.o_frontend_to_backend_edit_btn',\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\nimport wTourUtils from 'website.tour_utils';\n\ntour.register(\"editable_root_as_custom_snippet\", {\n    test: true,\n}, [\n    wTourUtils.clickOnSnippet('.s_title.custom[data-oe-model][data-oe-id][data-oe-field][data-oe-xpath]'),\n    wTourUtils.changeOption('SnippetSave', 'we-button'),\n    {\n        content: \"Confirm modal\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    {\n        content: \"Wait for the custom snippet to appear in the panel\",\n        trigger: '.oe_snippet[name=\"Custom Title\"]',\n        run: () => null,\n    },\n    ...wTourUtils.clickOnSave(),\n    {\n        content: \"Go to homepage\",\n        trigger: 'iframe a[href=\"/\"].nav-link',\n    },\n    {\n        content: \"Wait to land on homepage\",\n        trigger: 'iframe a[href=\"/\"].nav-link.active',\n        run: () => null,\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    wTourUtils.dragNDrop({id: 's_title', name: 'Custom Title'}),\n    {\n        content: \"Check that the custom snippet does not have branding\",\n        trigger: 'iframe #wrap .s_title.custom:not([data-oe-model]):not([data-oe-id]):not([data-oe-field]):not([data-oe-xpath])',\n        run: () => null,\n    },\n]);\n", "odoo.define('website.tour.focus_blur_snippets', function (require) {\n'use strict';\n\nconst { loadJS } = require('@web/core/assets');\nconst wTourUtils = require(\"website.tour_utils\");\n\nconst blockIDToData = {\n    parent: {\n        selector: 'iframe .s_focusblur',\n        name: 'section',\n        overlayIndex: 2,\n    },\n    child1: {\n        selector: 'iframe .s_focusblur_child1',\n        name: 'first child',\n        overlayIndex: 1,\n    },\n    child2: {\n        selector: 'iframe .s_focusblur_child2',\n        name: 'second child',\n        overlayIndex: 0,\n    },\n};\n\nfunction clickAndCheck(blockID, expected) {\n    const blockData = blockIDToData[blockID] || {};\n\n    return [{\n        content: blockID ? `Enable the ${blockData.name}` : 'Disable all blocks',\n        trigger: blockData.selector || 'iframe #wrapwrap',\n    }, {\n        content: 'Once the related overlays are enabled/disabled, check that the focus/blur calls have been correct.',\n        trigger: blockID\n            ? `iframe .oe_overlay.ui-draggable:eq(${blockData.overlayIndex}).oe_active`\n            : `iframe #oe_manipulators:not(:has(.oe_active))`,\n        run: function (actions) {\n            const result = window.focusBlurSnippetsResult;\n            window.focusBlurSnippetsResult = [];\n\n            if (expected.length !== result.length\n                    || !expected.every((item, i) => item === result[i])) {\n                console.error(`\n                    Expected: ${expected.toString()}\n                    Result: ${result.toString()}\n                `);\n            }\n        },\n    }];\n}\n\nwindow.focusBlurSnippetsResult = [];\n\nwTourUtils.registerWebsitePreviewTour(\"focus_blur_snippets\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    {\n        content: 'First load our custom JS options',\n        trigger: \"body\",\n        run: function () {\n            loadJS('/website/static/tests/tour_utils/focus_blur_snippets_options.js').then(function () {\n                $('iframe:not(.o_ignore_in_tour)').contents().find('body').addClass('focus_blur_snippets_options_loaded');\n            });\n        },\n    },\n    {\n        content: 'Drag the custom block into the page',\n        trigger: '#snippet_structure .oe_snippet:has(.oe_snippet_body.s_focusblur) .oe_snippet_thumbnail',\n        extra_trigger: 'iframe body.focus_blur_snippets_options_loaded',\n        run: 'drag_and_drop iframe #wrap',\n    },\n    ...clickAndCheck('parent', ['focus parent']),\n    ...clickAndCheck(null, ['blur parent']),\n    ...clickAndCheck('child1', ['focus parent', 'focus child1']),\n    ...clickAndCheck('child1', []),\n    ...clickAndCheck(null, ['blur parent', 'blur child1']),\n    ...clickAndCheck('parent', ['focus parent']),\n    ...clickAndCheck('child1', ['blur parent', 'focus parent', 'focus child1']),\n    ...clickAndCheck('child2', ['blur parent', 'blur child1', 'focus parent', 'focus child2']),\n    ...clickAndCheck('parent', ['blur parent', 'blur child2', 'focus parent']),\n]);\n});\n", "/** @odoo-module **/\nimport wTourUtils from 'website.tour_utils';\n\nfunction waitForCSSReload() {\n    // TODO we should find a better way to wait for this in tests after CSS\n    // reload, it is currently done multiple different ways depending on the\n    // test.\n    return [\n        {\n            // This step is here because the option is applied but triggers a\n            // reloading of the CC value, so if the second value is sent too\n            // soon, it will be ignored. Clicking on the snippet tab and back\n            // will ensure that the mutex is cleared, and therefore we can apply\n            // the saturation step.\n            content: \"Click on the blocks tab and back on theme to ensure the changes are applied\",\n            trigger: '.o_we_add_snippet_btn',\n        },\n        {\n            content: \"Go back to theme options\",\n            trigger: '.o_we_customize_theme_btn',\n            extra_trigger: '#o_scroll',\n        },\n        {\n            content: \"Wait for no loading\",\n            trigger: 'body:not(:has(.o_we_ui_loading)) iframe body:not(:has(.o_we_ui_loading))',\n            run: () => null,\n        },\n    ];\n}\n\nwTourUtils.registerWebsitePreviewTour('website_gray_color_palette', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    {\n        content: \"Go to theme options\",\n        trigger: '.o_we_customize_theme_btn',\n    },\n    {\n        content: \"Toggle gray color palette\",\n        trigger: '.o_we_gray_preview.o_we_collapse_toggler',\n    },\n    {\n        content: \"Drag the hue slider\",\n        trigger: '.o_we_slider_tint[data-param=\"gray-hue\"]',\n        run: () => {\n            const slider = document.querySelector('.o_we_slider_tint[data-param=\"gray-hue\"] input');\n            slider.value = 100;\n            slider.dispatchEvent(new InputEvent('change', {bubbles: true}));\n        },\n    },\n    {\n        content: \"Check the preview of the gray 900 after hue change\",\n        trigger: '[variable=\"900\"][style=\"background-color: rgb(36, 41, 33) !important;\"]',\n        run: () => {}, // This is a check.\n    },\n    ...waitForCSSReload(),\n    {\n        content: \"Drag the saturation slider\",\n        trigger: '.o_we_user_value_widget[data-param=\"gray-extra-saturation\"]',\n        run: () => {\n            const slider = document.querySelector('.o_we_user_value_widget[data-param=\"gray-extra-saturation\"] input');\n            slider.value = 15;\n            slider.dispatchEvent(new InputEvent('change', {bubbles: true}));\n        }\n    },\n    {\n        content: \"Check the preview of the gray 900 after saturation change\",\n        trigger: '[variable=\"900\"][style=\"background-color: rgb(34, 47, 27) !important;\"]',\n        run: () => {}, // This is a check.\n    },\n    ...waitForCSSReload(),\n    {\n        content: \"Wait for the iframe to be loaded\",\n        trigger: 'iframe body',\n        run: () => {\n            const iframeEl = document.querySelector('.o_website_preview .o_iframe');\n            const styles = iframeEl.contentWindow.getComputedStyle(iframeEl.contentDocument.documentElement);\n            if (styles.getPropertyValue('--900').toString().replace(/ /g, '') !== '#222F1B') {\n                console.error('The value for the gray 900 is not right');\n            }\n        }\n    },\n]);\n", "/** @odoo-module **/\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('website_replace_grid_image', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: 's_text_image',\n        name: 'Text - Image',\n    }),\n    wTourUtils.clickOnSnippet({\n        id: 's_text_image',\n        name: 'Text - Image',\n    }),\n    {\n        content: \"Toggle to grid mode\",\n        trigger: '.o_we_user_value_widget[data-name=\"grid_mode\"]',\n    },\n    {\n        content: \"Replace image\",\n        trigger: 'iframe .s_text_image img',\n        run: 'dblclick',\n    },\n    {\n        content: \"Pick new image\",\n        trigger: '.o_select_media_dialog img[title=\"s_banner_default_image.jpg\"]',\n    },\n    {\n        content: \"Add new image column\",\n        trigger: '.o_we_user_value_widget[data-add-element=\"image\"]',\n    },\n    {\n        content: \"Replace new image\",\n        trigger: 'iframe .s_text_image img[src=\"/web/image/website.s_text_image_default_image\"]',\n        run: 'dblclick',\n    },\n    {\n        content: \"Pick new image\",\n        trigger: '.o_select_media_dialog img[title=\"s_banner_default_image.jpg\"]',\n    },\n    ...wTourUtils.clickOnSave()\n]);\n\nwTourUtils.registerWebsitePreviewTour(\"scroll_to_new_grid_item\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    // Drop enough snippets to scroll.\n    wTourUtils.dragNDrop({id: \"s_text_image\", name: \"Text - Image\"}),\n    wTourUtils.dragNDrop({id: \"s_image_text\", name: \"Image - Text\"}),\n    wTourUtils.dragNDrop({id: \"s_image_text\", name: \"Image - Text\"}),\n    // Toggle the first snippet to grid mode.\n    wTourUtils.clickOnSnippet({id: \"s_text_image\", name: \"Text - Image\"}),\n    wTourUtils.changeOption(\"layout_column\", 'we-button[data-name=\"grid_mode\"]'),\n    // Add a new grid item.\n    wTourUtils.changeOption(\"layout_column\", 'we-button[data-add-element=\"image\"]'),\n    {\n        content: \"Check that the page scrolled to the new grid item\",\n        trigger: \"iframe .s_text_image .o_grid_item:nth-child(3)\",\n        run: function () {\n            // Leave some time to the page to scroll.\n            setTimeout(() => {\n                const newItemPosition = this.$anchor[0].getBoundingClientRect();\n                if (newItemPosition.top < 0) {\n                    console.error(\"The page did not scroll to the new grid item.\");\n                }\n                document.body.classList.add(\"o_scrolled_to_grid_item\");\n            }, 500);\n        },\n    }, {\n        content: \"Make sure the scroll check is done\",\n        trigger: \".o_scrolled_to_grid_item\",\n        run: () => {}, // This is a check.\n    },\n]);\n", "/** @odoo-module **/\n\nimport wTourUtils from \"website.tour_utils\";\n\n// TODO remove this test; it is badly written: you just have to change the fact\n// that editor_enable is added on the body to silently make it useless +\n// useless extra_trigger + useless auto: true + ... A better duplicate of it has\n// been made with \"website_no_dirty_page\".\nwTourUtils.registerWebsitePreviewTour('homepage_edit_discard', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [{\n    trigger: \"#oe_snippets button[data-action=\\\"cancel\\\"]:not([disabled])\",\n    extra_trigger: \"body:not(:has(.o_dialog))\",\n    content: \"<b>Click Discard</b> to Discard all Changes.\",\n    position: \"bottom\",\n}, {\n    trigger: \"iframe body:not(.editor_enable)\",\n    auto: true,\n    run: () => null,\n}]);\n", "/* global ace */\nodoo.define('website.test.html_editor', function (require) {\n'use strict';\n\nconst wTourUtils = require('website.tour_utils');\n\nconst adminCssModif = '#wrap {display: none;}';\nconst demoCssModif = '// demo_edition';\n\nwTourUtils.registerWebsitePreviewTour('html_editor_language', {\n    url: '/test_page',\n    test: true,\n},\n    [\n        {\n            content: \"open site menu\",\n            extra_trigger: \"iframe body:not(.editor_enable)\",\n            trigger: 'button[data-menu-xmlid=\"website.menu_site\"]',\n        },\n        {\n            content: \"open html editor\",\n            trigger: 'a[data-menu-xmlid=\"website.menu_ace_editor\"]',\n        },\n        {\n            content: \"add something in the page's English version\",\n            trigger: 'div.ace_line .ace_xml:contains(\"rumbler\")',\n            run: () => {\n                ace.edit('ace-view-editor').getSession().insert({\n                    row: 1,\n                    column: 1,\n                }, '<br/>\\n');\n            },\n        },\n        {\n            content: \"save the html editor\",\n            extra_trigger: 'div.ace_line .ace_xml:contains(\"br\")',\n            trigger: \".o_ace_view_editor button[data-action=save]\",\n        },\n        {\n            content: \"check that the page has the modification\",\n            trigger: 'iframe #wrapwrap:has(br)',\n            run: () => {}, // it's a check\n        },\n        {\n            content: \"check that the page has not lost the original text\",\n            trigger: 'iframe #wrapwrap:contains(\"rommelpot\")',\n            run: () => {}, // it's a check\n        },\n    ]\n);\n\nwTourUtils.registerWebsitePreviewTour('html_editor_multiple_templates', {\n    url: '/generic',\n    edition: true,\n    test: true,\n},\n    [\n        {\n            content: \"drop a snippet\",\n            trigger: \".oe_snippet:has(.s_cover) .oe_snippet_thumbnail\",\n            // id starting by 'oe_structure..' will actually create an inherited view\n            run: \"drag_and_drop iframe #oe_structure_test_ui\",\n        },\n        ...wTourUtils.clickOnSave(),\n        // 2. Edit generic view\n        {\n            content: \"open site menu\",\n            extra_trigger: \"iframe body:not(.editor_enable)\",\n            trigger: 'button[data-menu-xmlid=\"website.menu_site\"]',\n        },\n        {\n            content: \"open html editor\",\n            trigger: 'a[data-menu-xmlid=\"website.menu_ace_editor\"]',\n        },\n        {\n            content: \"add something in the generic view\",\n            trigger: 'div.ace_line .ace_xml:contains(\"Generic\")',\n            run: function () {\n                ace.edit('ace-view-editor').getSession().insert({row: 3, column: 1}, '<p>somenewcontent</p>\\n');\n            },\n        },\n        // 3. Edit oe_structure specific view\n        {\n            content: \"select oe_structure specific view\",\n            trigger: 'div.ace_line .ace_xml:contains(\"somenewcontent\")',\n            run: function () {\n                var viewId = $('#ace-view-list option:contains(\"oe_structure_test_ui\")').val();\n                $('#ace-view-list').val(viewId).trigger('change');\n            },\n        },\n        {\n            content: \"add something in the oe_structure specific view\",\n            extra_trigger: '#ace-view-id:contains(\"test.generic_view_oe_structure_test_ui\")', // If no xml_id it should show key\n            trigger: 'div.ace_line .ace_xml:contains(\"s_cover\")',\n            run: function () {\n                ace.edit('ace-view-editor').getSession().insert({row: 2, column: 1}, '<p>anothernewcontent</p>\\n');\n            },\n        },\n        {\n            content: \"save the html editor\",\n            extra_trigger: 'div.ace_line .ace_xml:contains(\"anothernewcontent\")',\n            trigger: \".o_ace_view_editor button[data-action=save]\",\n        },\n        {\n           content: \"check that the page has both modification\",\n           extra_trigger: 'iframe #wrapwrap:contains(\"anothernewcontent\")',\n           trigger: 'iframe #wrapwrap:contains(\"somenewcontent\")',\n           run: function () {}, // it's a check\n       },\n    ]\n);\n\nwTourUtils.registerWebsitePreviewTour('test_html_editor_scss', {\n    url: '/contactus',\n    test: true,\n},\n    [\n        // 1. Open Html Editor and select a scss file\n        {\n            content: \"open site menu\",\n            extra_trigger: 'iframe #wrap:visible', // ensure state for later\n            trigger: 'button[data-menu-xmlid=\"website.menu_site\"]',\n        },\n        {\n            content: \"open html editor\",\n            trigger: 'a[data-menu-xmlid=\"website.menu_ace_editor\"]',\n        },\n        {\n            content: \"open type switcher\",\n            trigger: '.o_ace_type_switcher button',\n        },\n        {\n            content: \"select scss files\",\n            trigger: '.o_ace_type_switcher_choice[data-type=\"scss\"]',\n        },\n        {\n            content: \"select 'user_custom_rules'\",\n            trigger: 'body:has(#ace-scss-list option:contains(\"user_custom_rules\"))',\n            run: function () {\n                var scssId = $('#ace-scss-list option:contains(\"user_custom_rules\")').val();\n                $('#ace-scss-list').val(scssId).trigger('change');\n            },\n        },\n        // 2. Edit that file and ensure it was saved then reset it\n        {\n            content: \"add some scss content in the file\",\n            trigger: 'div.ace_line .ace_comment:contains(\"footer {\")',\n            run: function () {\n                ace.edit('ace-view-editor').getSession().insert({row: 2, column: 0}, `${adminCssModif}\\n`);\n            },\n        },\n        {\n            content: \"save the html editor\",\n            extra_trigger: `div.ace_line:contains(\"${adminCssModif}\")`,\n            trigger: \".o_ace_view_editor button[data-action=save]\",\n        },\n         {\n            content: \"check that the scss modification got applied\",\n            trigger: 'iframe body:has(#wrap:hidden)',\n            run: function () {}, // it's a check\n            timeout: 30000, // SCSS compilation might take some time\n        },\n        {\n            content: \"reset view (after reload, html editor should have been reopened where it was)\",\n            trigger: '#ace-view-id button[data-action=\"reset\"]:not([disabled])',\n        },\n        {\n            content: \"confirm reset warning\",\n            trigger: '.modal-footer .btn-primary',\n        },\n        {\n            content: \"check that the scss file was reset correctly, wrap content should now be visible again\",\n            trigger: 'iframe #wrap:visible',\n            run: function () {}, // it's a check\n            timeout: 30000, // SCSS compilation might take some time\n        },\n        // 3. Customize again that file (will be used in second part of the test\n        //    to ensure restricted user can still use the HTML Editor)\n        {\n            content: \"add some scss content in the file\",\n            trigger: 'div.ace_line .ace_comment:contains(\"footer {\")',\n            run: function () {\n                ace.edit('ace-view-editor').getSession().insert({row: 2, column: 0}, `${adminCssModif}\\n`);\n            },\n        },\n        {\n            content: \"save the html editor\",\n            extra_trigger: `div.ace_line:contains(\"${adminCssModif}\")`,\n            trigger: '.o_ace_view_editor button[data-action=save]',\n        },\n        {\n            content: \"check that the scss modification got applied\",\n            trigger: 'iframe body:has(#wrap:hidden)',\n            run: function () {}, // it's a check\n        },\n    ]\n);\n\nwTourUtils.registerWebsitePreviewTour('test_html_editor_scss_2', {\n    url: '/',\n    test: true,\n},\n    [\n        // This part of the test ensures that a restricted user can still use\n        // the HTML Editor if someone else made a customization previously.\n\n        // 4. Open Html Editor and select a scss file\n        {\n            content: \"open site menu\",\n            trigger: 'button[data-menu-xmlid=\"website.menu_site\"]',\n        },\n        {\n            content: \"open html editor\",\n            trigger: 'a[data-menu-xmlid=\"website.menu_ace_editor\"]',\n        },\n        {\n            content: \"open type switcher\",\n            trigger: '.o_ace_type_switcher button',\n        },\n        {\n            content: \"select scss files\",\n            trigger: '.o_ace_type_switcher_choice[data-type=\"scss\"]',\n        },\n        {\n            content: \"select 'user_custom_rules'\",\n            trigger: 'body:has(#ace-scss-list option:contains(\"user_custom_rules\"))',\n            run: function () {\n                var scssId = $('#ace-scss-list option:contains(\"user_custom_rules\")').val();\n                $('#ace-scss-list').val(scssId).trigger('change');\n            },\n        },\n        // 5. Edit that file and ensure it was saved then reset it\n        {\n            content: \"add some scss content in the file\",\n            trigger: `div.ace_line:contains(\"${adminCssModif}\")`, // ensure the admin modification is here\n            run: function () {\n                ace.edit('ace-view-editor').getSession().insert({row: 2, column: 0}, `${demoCssModif}\\n`);\n            },\n        },\n        {\n            content: \"save the html editor\",\n            extra_trigger: `div.ace_line:contains(\"${demoCssModif}\")`,\n            trigger: \".o_ace_view_editor button[data-action=save]\",\n        },\n        {\n            content: \"reset view (after reload, html editor should have been reopened where it was)\",\n            trigger: '#ace-view-id button[data-action=\"reset\"]:not([disabled])',\n            timeout: 30000, // SCSS compilation might take some time\n        },\n        {\n            content: \"confirm reset warning\",\n            trigger: '.modal-footer .btn-primary',\n        },\n        {\n            content: \"check that the scss file was reset correctly\",\n            extra_trigger: `body:not(:has(div.ace_line:contains(\"${adminCssModif}\")))`,\n            trigger: `body:not(:has(div.ace_line:contains(\"${demoCssModif}\")))`,\n            run: function () {}, // it's a check\n            timeout: 30000, // SCSS compilation might take some time\n        },\n    ]\n);\n\n});\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\nimport { boundariesIn, setSelection, nodeSize } from '@web_editor/js/editor/odoo-editor/src/utils/utils';\n\nconst clickOnImgStep = {\n    content: \"Click somewhere else to save.\",\n    trigger: 'iframe #wrap .s_text_image img',\n};\n\nwTourUtils.registerWebsitePreviewTour('link_tools', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    // 1. Create a new link from scratch.\n    wTourUtils.dragNDrop({\n        id: 's_text_image',\n        name: 'Text - Image',\n    }),\n    {\n        content: \"Replace first paragraph, to insert a new link\",\n        trigger: 'iframe #wrap .s_text_image p',\n        run: 'text Go to odoo: '\n    },\n    {\n        content: \"Open link tools\",\n        trigger: \"#toolbar #create-link\",\n    },\n    {\n        content: \"Type the link URL odoo.com\",\n        trigger: '#o_link_dialog_url_input',\n        run: 'text odoo.com'\n    },\n    clickOnImgStep,\n    {\n        content: \"Select the newly created link\",\n        trigger: 'iframe #wrap .s_text_image a[href=\"http://odoo.com\"]:contains(\"odoo.com\")',\n        run() {\n            setSelection(this.$anchor[0], 0, this.$anchor[0], nodeSize(this.$anchor[0]));\n        }\n    },\n    // Remove the link.\n    {\n        content: \"Click on the newly created link\",\n        trigger: 'iframe #wrap .s_text_image a[href=\"http://odoo.com\"]:contains(\"odoo.com\")',\n    },\n    {\n        content: \"Remove the link.\",\n        trigger: 'iframe .popover:contains(\"http://odoo.com\") a .fa-chain-broken',\n    },\n    {\n        content: \"Check that the link was removed\",\n        trigger: 'iframe #wrap .s_text_image p:contains(\"Go to odoo:\"):not(:has(a))',\n        run: () => {}, // It's a check.\n    },\n    // Recreate the link.\n    {\n        content: \"Select first paragraph, to insert a new link\",\n        trigger: 'iframe #wrap .s_text_image p',\n    },\n    {\n        content: \"Open link tools\",\n        trigger: \"#toolbar #create-link\",\n    },\n    {\n        content: \"Type the link URL odoo.com\",\n        trigger: '#o_link_dialog_url_input',\n        run: 'text odoo.com'\n    },\n    clickOnImgStep,\n    // 2. Edit the link with the link tools.\n    {\n        content: \"Click on the newly created link, change content to odoo website\",\n        trigger: 'iframe .s_text_image a[href=\"http://odoo.com\"]:contains(\"odoo.com\")',\n        run: 'text odoo website',\n    },\n    {\n        content: \"Link tools, should be open, change the url\",\n        trigger: '#o_link_dialog_url_input',\n        run: 'text_blur odoo.be'\n    },\n\n    ...wTourUtils.clickOnSave(),\n    // 3. Edit a link after saving the page.\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: \"The new link content should be odoo website and url odoo.be\",\n        trigger: 'iframe .s_text_image a[href=\"http://odoo.be\"]:contains(\"odoo website\")',\n    },\n    {\n        content: \"The new link content should be odoo website and url odoo.be\",\n        trigger: '#toolbar button[data-bs-original-title=\"Link Style\"]',\n    },\n    {\n        content: \"Click on the secondary style button.\",\n        trigger: '#toolbar we-button[data-value=\"secondary\"]',\n    },\n    ...wTourUtils.clickOnSave(),\n    {\n        content: \"The link should have the secondary button style.\",\n        trigger: 'iframe .s_text_image a.btn.btn-secondary[href=\"http://odoo.be\"]:contains(\"odoo website\")',\n        run: () => {}, // It's a check.\n    },\n    // 4. Add link on image.\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    wTourUtils.dragNDrop({\n        id: 's_three_columns',\n        name: 'Columns',\n    }),\n    {\n        content: \"Click on the first image.\",\n        trigger: 'iframe .s_three_columns .row > :nth-child(1) img',\n    },\n    {\n        content: \"Activate link.\",\n        trigger: '.o_we_customize_panel we-row:contains(\"Media\") we-button.fa-link',\n    },\n    {\n        content: \"Set URL.\",\n        trigger: '.o_we_customize_panel we-input:contains(\"Your URL\") input',\n        run: 'text odoo.com',\n    },\n    {\n        content: \"Deselect image.\",\n        trigger: 'iframe .s_three_columns .row > :nth-child(2) img',\n    },\n    {\n        content: \"Re-select image.\",\n        trigger: 'iframe .s_three_columns .row > :nth-child(1) img',\n    },\n    {\n        content: \"Check that the second image is not within a link.\",\n        trigger: 'iframe .s_three_columns .row > :nth-child(2) div > img',\n        run: () => {}, // It's a check.\n    },\n    {\n        content: \"Check that link tools appear.\",\n        trigger: 'iframe .popover div a:contains(\"http://odoo.com\")',\n        run: () => {}, // It's a check.\n    },\n    ...wTourUtils.clickOnSave(),\n    {\n        content: \"Check that the first image was saved.\",\n        trigger: 'iframe .s_three_columns .row > :nth-child(1) div > a > img',\n        run: () => {}, // It's a check.\n    },\n    {\n        content: \"Check that the second image was saved.\",\n        trigger: 'iframe .s_three_columns .row > :nth-child(2) div > img',\n        run: () => {}, // It's a check.\n    },\n    // 5. Remove link from image.\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: \"Reselect the first image.\",\n        trigger: 'iframe .s_three_columns .row > :nth-child(1) div > a > img',\n    },\n    {\n        content: \"Check that link tools appear.\",\n        trigger: 'iframe .popover div a:contains(\"http://odoo.com\")',\n        run: () => {}, // It's a check.\n    },\n    {\n        content: \"Remove link.\",\n        trigger: 'iframe .popover:contains(\"http://odoo.com\") a .fa-chain-broken',\n    },\n    {\n        content: \"Check that image is not within a link anymore.\",\n        trigger: 'iframe .s_three_columns .row > :nth-child(1) div > img',\n        run: () => {}, // It's a check.\n    },\n    // 6. Create new a link from a URL-like text.\n    {\n        content: \"Replace first paragraph, write a URL\",\n        trigger: 'iframe #wrap .s_text_image p',\n        run: 'text odoo.com'\n    },\n    {\n        content: \"Select text\",\n        trigger: 'iframe #wrap .s_text_image p:contains(odoo.com)',\n        run() {\n            setSelection(...boundariesIn(this.$anchor[0]), false);\n        }\n    },\n    {\n        content: \"Open link tools\",\n        trigger: \"#toolbar #create-link\",\n    },\n    clickOnImgStep,\n    {\n        // URL transformation into link should persist, without the need for\n        // input at input[name=url]\n        content: \"Check that link was created\",\n        trigger: \"iframe .s_text_image p a[href='http://odoo.com']:contains('odoo.com')\",\n        run: () => null,\n    },\n    {\n        content: \"Click on link to open the link tools\",\n        trigger: \"iframe .s_text_image p a\",\n    },\n    // 7. Check that http links are not coerced to https and vice-versa.\n    {\n        content: \"Change URL to https\",\n        trigger: \"#o_link_dialog_url_input\",\n        run: 'text https://odoo.com',\n    },\n    {\n        content: \"Check that link was updated\",\n        trigger: \"iframe .s_text_image p a[href='https://odoo.com']:contains('odoo.com')\",\n        run: () => null,\n    },\n    {\n        content: \"Change it back http\",\n        trigger: \"#o_link_dialog_url_input\",\n        run: 'text http://odoo.com',\n    },\n    {\n        content: \"Check that link was updated\",\n        trigger: \"iframe .s_text_image p a[href='http://odoo.com']:contains('odoo.com')\",\n        run: () => null,\n    },\n    // 8. Test conversion between http and mailto links.\n    {\n        content: \"Change URL into an email address\",\n        trigger: \"#o_link_dialog_url_input\",\n        run: \"text callme@maybe.com\",\n    },\n    {\n        content: \"Check that link was updated and link content is synced with URL\",\n        trigger: \"iframe .s_text_image p a[href='mailto:callme@maybe.com']:contains('callme@maybe.com')\",\n        run: () => null,\n    },\n    {\n        content: \"Change URL back into a http one\",\n        trigger: \"#o_link_dialog_url_input\",\n        run: \"text_blur callmemaybe.com\",\n    },\n    {\n        content: \"Check that link was updated and link content is synced with URL\",\n        trigger: \"iframe .s_text_image p a[href='http://callmemaybe.com']:contains('callmemaybe.com')\",\n    },\n    // 9.Test that UI stays up-to-date.\n    {\n        content: \"Edit link label\",\n        trigger: \"iframe .s_text_image p a\",\n        run(actions) {\n            // Simulating text input.\n            const link = this.$anchor[0];\n            actions.text(\"callmemaybe.com/shops\");\n            // Trick the editor into keyboardType === 'PHYSICAL' and delete the\n            // last character \"s\" and end with \"callmemaybe.com/shop\"\n            link.dispatchEvent(new KeyboardEvent(\"keydown\", { key: \"Backspace\", bubbles: true }));\n            // Trigger editor's '_onInput' handler, which leads to a history step.\n            link.dispatchEvent(new InputEvent('input', {inputType: 'insertText', bubbles: true}));\n        },\n    },\n    {\n        content: \"Check that links's href was updated\",\n        trigger: \"iframe .s_text_image p a[href='http://callmemaybe.com/shop']:contains('callmemaybe.com/shop')\",\n        run: () => null,\n    },\n    {\n        content: \"Check popover content is up-to-date\",\n        trigger: \"iframe .popover div a:contains('http://callmemaybe.com/shop')\",\n        run: () => null,\n    },\n    {\n        content: \"Check Link tools URL input content is up-to-date\",\n        trigger: \"#o_link_dialog_url_input\",\n        run() {\n            if (this.$anchor[0].value !== 'http://callmemaybe.com/shop') {\n                throw new Error(\"Tour step failed\") ;\n            }\n        }\n    },\n    ...wTourUtils.clickOnSave(),\n]);\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour(\"website_media_dialog_undraw\", {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\nwTourUtils.dragNDrop({\n    id: 's_text_image',\n    name: 'Text - Image',\n}),\n{\n    content: \"Open the media dialog from the snippet\",\n    trigger: \"iframe .s_text_image img\",\n    run: \"dblclick\",\n}, {\n    content: \"Search for 'banner' to call the media library\", // Mocked call\n    trigger: \".o_select_media_dialog .o_we_search\",\n    run: \"text banner\",\n}, {\n    content: \"Check that the media library is available\",\n    trigger: '.o_select_media_dialog:has(.o_we_search_select option[value=\"media-library\"])',\n    run: () => null, // it's a check\n},\n]);\n\nwTourUtils.registerWebsitePreviewTour(\"website_media_dialog_external_library\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: \"s_text_image\",\n        name: \"Text - Image\",\n    }),\n    {\n        content: \"Open the media dialog from the snippet\",\n        trigger: \"iframe .s_text_image img\",\n        run: \"dblclick\",\n    }, {\n        content: \"Dummy search to call the media library\",\n        trigger: \".o_select_media_dialog .o_we_search\",\n        run: \"text a\",\n    }, {\n        content: \"Choose the media library to only show its media\",\n        trigger: \".o_select_media_dialog .o_we_search_select\",\n        // This is a standard <select>: we can't simulate a click on the option\n        // directly.\n        run: function (actions) {\n            actions.click();\n            actions.text(\"Illustrations\");\n            this.$anchor.trigger($.Event(\"keydown\", {key: 'Enter', keyCode: 13}));\n        },\n    }, {\n        content: \"Double click on the first image\",\n        trigger: \".o_select_media_dialog img.o_we_attachment_highlight\",\n        run: \"dblclick\",\n    }, {\n        content: \"Reopen the media dialog\",\n        trigger: \"iframe .s_text_image img\",\n        run: \"dblclick\",\n    }, {\n        content: \"Check that the image was created only once\",\n        trigger: \".o_select_media_dialog .o_we_existing_attachments\",\n        run: function () {\n            const selector = \".o_existing_attachment_cell img[src^='/web_editor/shape/illustration/']\";\n            const imgName = this.$anchor[0].querySelector(selector).title;\n            const uploadedImgs = this.$anchor[0].querySelectorAll(`${selector}[title='${imgName}']`);\n            if (uploadedImgs.length !== 1) {\n                throw new Error(`error: ${uploadedImgs.length} attachment(s) were found. Exactly 1 should have been created.`);\n            }\n        },\n    },\n]);\n\nwTourUtils.registerWebsitePreviewTour('website_media_dialog_icons', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: 's_process_steps',\n        name: 'Steps',\n    }),\n    {\n        content: \"Open MediaDialog from a snippet icon\",\n        trigger: 'iframe .s_process_steps .fa-unlock-alt',\n        run: \"dblclick\",\n    },\n    {\n        content: \"Pick the same icon\",\n        trigger: '.o_select_media_dialog .o_we_attachment_selected.fa-unlock-alt',\n    },\n    {\n        content: \"Check if the icon remains the same\",\n        trigger: 'iframe .s_process_steps .fa-unlock-alt',\n        run: () => null, // it's a check\n    },\n    {\n        content: \"Open MediaDialog again\",\n        trigger: 'iframe .s_process_steps .fa-unlock-alt',\n        run: \"dblclick\",\n    },\n    {\n        content: \"Click on the ADD button\",\n        trigger: '.o_select_media_dialog .btn:contains(Add)',\n    },\n    {\n        content: \"Check if the icon remains the same\",\n        trigger: 'iframe .s_process_steps .fa-unlock-alt',\n        run: () => null, // it's a check\n    },\n    ...wTourUtils.clickOnSave()\n]);\n\nwTourUtils.registerWebsitePreviewTour(\"website_media_dialog_image_shape\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: \"s_text_image\",\n        name: \"Text - Image\",\n    }),\n    {\n        content: \"Click on the image\",\n        trigger: \"iframe .s_text_image img\",\n    },\n    wTourUtils.changeOption(\"ImageTools\", 'we-select[data-name=\"shape_img_opt\"] we-toggler'),\n    wTourUtils.changeOption(\"ImageTools\", \"we-button[data-set-img-shape]\"),\n    {\n        content: \"Open MediaDialog from an image\",\n        trigger: \"iframe .s_text_image img[data-shape]\",\n        run: \"dblclick\",\n    },\n    {\n        content: \"Click on the 'Icons' tab\",\n        trigger: '.o_select_media_dialog .o_notebook_headers .nav-item a:contains(\"Icons\")',\n    },\n    {\n        content: \"Select an icon\",\n        trigger: \".o_select_media_dialog:has(.nav-link.active:contains('Icons')) .tab-content span.fa-heart\",\n    },\n    {\n        content: \"Checks that the icon doesn't have a shape\",\n        trigger: \"iframe .s_text_image .fa-heart:not([data-shape])\",\n        run: () => {}, //it's a check\n    },\n]);\n", "/** @odoo-module */\nimport wTourUtils from \"website.tour_utils\";\n\nwTourUtils.registerWebsitePreviewTour(\n    \"website_media_iframe_video\",\n    {\n        test: true,\n        url: \"/\",\n        edition: true,\n    },\n    [\n        wTourUtils.dragNDrop({\n            id: \"s_text_image\",\n            name: \"Text - Image\",\n        }),\n        {\n            content: \"Select the image\",\n            trigger: \"iframe #wrap .s_text_image img\",\n        },\n        {\n            content: \"Open image link options\",\n            trigger: \"[data-name='media_link_opt']\",\n        },\n        {\n            content: \"Enter the url\",\n            trigger: \"input[placeholder='www.example.com']\",\n            run: \"text odoo.com\",\n        },\n        {\n            content: \"Click on replace media\",\n            trigger: \"[data-replace-media='true']\",\n        },\n        {\n            content: \"Click on video button\",\n            trigger: \"a:contains('Videos')\",\n        },\n        {\n            content: \"Enter video link\",\n            trigger: \"#o_video_text\",\n            run: \"text https://youtu.be/nbso3NVz3p8\",\n        },\n        {\n            content: \"Check video is preview\",\n            trigger: \".o_video_dialog_iframe\",\n            run: () => {}, // This is a check.\n        },\n        {\n            content: \"Click on 'add' button\",\n            trigger: \".modal-footer button:contains('Add')\",\n        },\n        {\n            content: \"Ensure that the parent of media_iframe_video is not an 'a' tag.\",\n            trigger: \"iframe .media_iframe_video\",\n            run: function () {\n                if (this.$anchor[0].parentElement.tagName === \"A\") {\n                    console.error(\"Iframe video has link!!!\");\n                }\n            },\n        },\n    ]\n);\n\nwTourUtils.registerWebsitePreviewTour(\n    \"website_snippet_background_video\",\n    {\n        test: true,\n        url: \"/\",\n        edition: true,\n    },\n    [\n        wTourUtils.dragNDrop({\n            id: \"s_text_block\",\n            name: \"Text\",\n        }),\n        {\n            content: \"Click on the text block.\",\n            trigger: \"iframe #wrap section.s_text_block\",\n        },\n        {\n            content: \"Click on the 'Background Video' button option.\",\n            trigger: \"we-button[data-name='bg_video_toggler_opt']\",\n        },\n        {\n            content: \"Click on the first sample video in the modal.\",\n            trigger: \"#video-suggestion .o_sample_video\",\n        },\n        {\n            content: \"Check the video is select.\",\n            trigger: \"textarea.is-valid\",\n            run: () => {}, // This is a check.\n        },\n        {\n            content: \"Click on the 'Add' button to apply the selected video as the background.\",\n            trigger: \".modal-footer button.btn-primary\",\n        },\n        {\n            content: \"Verify that the video is set as the background of the snippet.\",\n            trigger: \"iframe #wrap section.o_background_video\",\n        },\n    ]\n);\n", "/** @odoo-module **/\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('website_multi_edition', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    {\n        content: 'Check the current page has not the elements that will be added',\n        trigger: 'iframe body:not(:has(.s_text_image)):not(:has(.s_hr))',\n        run: () => null,\n    },\n    // Edit the main element of the page\n    wTourUtils.dragNDrop({\n        id: 's_text_image',\n        name: 'Text - Image',\n    }),\n    // Edit another part in the page, like the footer\n    wTourUtils.dragNDrop({\n        id: 's_hr',\n        name: 'Separator',\n    }),\n    ...wTourUtils.clickOnSave(),\n    {\n        content: 'Check that the main element of the page was properly saved',\n        trigger: 'iframe main .s_text_image',\n        run: () => null,\n    },\n    {\n        content: 'Check that the footer was properly saved',\n        trigger: 'iframe footer .s_hr',\n        run: () => null,\n    },\n]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\nimport wTourUtils from 'website.tour_utils';\n\n// TODO: This part should be moved in a QUnit test\nconst checkKanbanGroupBy = [{\n    content: \"Click on Kanban View\",\n    trigger: '.o_cp_switch_buttons .o_kanban',\n}, {\n    content: \"Click on Group By\",\n    extra_trigger: '.o_kanban_renderer',\n    trigger: '.o_search_options .o_group_by_menu button',\n}, {\n    content: \"Click on Add Custom Group\",\n    trigger: '.o_search_options .o_add_custom_group_menu button',\n    run: function (actions) {\n        this.$anchor[0].dispatchEvent(new MouseEvent('mouseenter'));\n    },\n}, {\n    content: \"Click on Apply\", // Active is selected by default\n    trigger: '.o_add_custom_group_menu .dropdown-menu .btn-primary',\n}, {\n    content: \"Click on List View\",\n    extra_trigger: '.o_kanban_renderer .o_kanban_header',\n    trigger: '.o_cp_switch_buttons .o_list',\n}, {\n    content: \"Remove applied Group By\",\n    extra_trigger: '.o_list_renderer',\n    trigger: '.o_cp_searchview .o_facet_remove',\n}];\n\nconst checkWebsiteFilter = [{\n    content: \"Click on My Website\",\n    trigger: \"button.dropdown-toggle:contains('My Website')\",\n}, {\n    content: \"Select Test Website\",\n    trigger: \".dropdown-menu.show > .dropdown-item:contains('Test Website')\",\n}, {\n    content: \"Check that the homepage is now the one of Test Website\",\n    trigger: \".o_list_table .o_data_row .o_data_cell[name=name]:contains('Home') \" +\n             \"~ .o_data_cell[name=website_id]:contains('Test Website')\",\n    run: () => null, // it's a check\n}, {\n    content: \"Click on Test Website\",\n    trigger: \"button.dropdown-toggle:contains('Test Website')\",\n}, {\n    content: \"Go back to My Website\",\n    trigger: \".dropdown-menu.show > .dropdown-item:contains('My Website')\",\n}, {\n    content: \"Check that the homepage is now the one of My Website\",\n    trigger: \".o_list_table .o_data_row .o_data_cell[name=name]:contains('Home') \" +\n             \"~ .o_data_cell[name=website_id]:contains('My Website'):not(:contains('2'))\",\n    run: () => null, // it's a check\n}];\n\nconst deleteSelectedPage = [\n    {\n        content: \"Click on Action\",\n        trigger: '.o_cp_action_menus button',\n    },\n    {\n        content: \"Click on Delete\",\n        trigger: '.o-dropdown--menu span:contains(\"Delete\")',\n    },\n    {\n        content: \"Click on I am sure about this\",\n        trigger: 'main.modal-body input[type=\"checkbox\"]',\n        // The loading of the dependencies can take a while and\n        // sometimes reach the default 10s timeout\n        timeout: 20000,\n    },\n    {\n        content: \"Click on OK\",\n        trigger: '.modal-content footer button.btn-primary:not([disabled])',\n    }\n];\nconst homePage = 'tr:contains(\"Home\")';\n\nwTourUtils.registerWebsitePreviewTour('website_page_manager', {\n    test: true,\n    url: '/',\n}, [\n    {\n        content: \"Click on Site\",\n        trigger: 'button.dropdown-toggle[title=\"Site\"]',\n    },\n    {\n        content: \"Click on Pages\",\n        trigger: 'a.dropdown-item[data-menu-xmlid=\"website.menu_website_pages_list\"]',\n    },\n    ...checkKanbanGroupBy,\n    ...checkWebsiteFilter,\n    {\n        content: \"Click on Home Page\",\n        trigger: `.o_list_renderer ${homePage} td.o_list_record_selector input[type=\"checkbox\"]`,\n    },\n    ...deleteSelectedPage,\n    {\n        content: \"Check that the page has been removed\",\n        trigger: `.o_list_renderer:not(:has(${homePage}))`,\n        run: () => null,\n    },\n    {\n        content: \"Click on All Pages\",\n        trigger: '.o_list_renderer thead input[type=\"checkbox\"]',\n    },\n    ...deleteSelectedPage,\n    {\n        content: \"Check that all pages have been removed\",\n        trigger: '.o_list_renderer tbody:not(:has([data-id]))',\n        run: () => null,\n    },\n]);\n\nwTourUtils.registerWebsitePreviewTour('website_page_manager_session_forced', {\n    test: true,\n    url: '/',\n}, [...wTourUtils.testSwitchWebsite('Test Website'), {\n    content: \"Click on Site\",\n    trigger: 'button.dropdown-toggle[data-menu-xmlid=\"website.menu_site\"]',\n}, {\n    content: \"Click on Pages\",\n    trigger: 'a.dropdown-item[data-menu-xmlid=\"website.menu_website_pages_list\"]',\n}, {\n    content: \"Check that the homepage is the one of Test Website\",\n    trigger: \".o_list_table .o_data_row .o_data_cell[name=name]:contains('Home') \" +\n             \"~ .o_data_cell[name=website_id]:contains('Test Website')\",\n    run: () => null, // it's a check\n}, {\n    content: \"Check that the selected website is Test Website\",\n    trigger: \".o_search_options .dropdown-toggle:contains('Test Website')\",\n    run: () => null, // it's a check\n}]);\n\ntour.register('website_page_manager_direct_access', {\n    test: true,\n    url: '/web#action=website.action_website_pages_list',\n}, [{\n    content: \"Check that the homepage is the one of Test Website\",\n    trigger: \".o_list_table .o_data_row .o_data_cell[name=name]:contains('Home') \" +\n             \"~ .o_data_cell[name=website_id]:contains('Test Website')\",\n    run: () => null, // it's a check\n}, {\n    content: \"Check that the selected website is Test Website\",\n    trigger: \".o_search_options .dropdown-toggle:contains('Test Website')\",\n    run: () => null, // it's a check\n}]);\n", "odoo.define(\"website.tour.parallax\", function (require) {\n\"use strict\";\n\nconst wTourUtils = require(\"website.tour_utils\");\n\nconst coverSnippet = {id: \"s_cover\", name: \"Cover\"};\n\nwTourUtils.registerWebsitePreviewTour(\"test_parallax\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop(coverSnippet),\n    wTourUtils.clickOnSnippet(coverSnippet),\n    wTourUtils.changeOption(\"BackgroundOptimize\", \"we-toggler\"),\n    wTourUtils.changeOption(\"BackgroundOptimize\", 'we-button[data-gl-filter=\"blur\"]'),\n{\n    content: \"Check that the Cover snippet has the Blur filter on its background image\",\n    trigger: \"iframe .s_cover span[data-gl-filter='blur']\",\n    run: () => {}, //it's a check\n},\n    wTourUtils.changeOption(\"Parallax\", \"we-toggler\"),\n    wTourUtils.changeOption(\"Parallax\", 'we-button[data-select-data-attribute=\"0\"]'),\n{\n    content: \"Check that the data related to the filter have been transferred to the new target\",\n    trigger: \"iframe .s_cover[data-gl-filter='blur']\",\n    run: () => {}, //it's a check\n},\n{\n    content: \"Check that the 'o_modified_image_to_save' class has been transferred to the new target\",\n    trigger: \"iframe .s_cover.o_modified_image_to_save\",\n    run: () => {}, //it's a check\n},\n    wTourUtils.changeOption(\"Parallax\", \"we-toggler\"),\n    wTourUtils.changeOption(\"Parallax\", 'we-button[data-select-data-attribute=\"1\"]'),\n{\n    content: \"Check that the 'o_modified_image_to_save' class has been deleted from the old target\",\n    trigger: \"iframe .s_cover:not(.o_modified_image_to_save)\",\n    run: () => {}, //it's a check\n},\n{\n    content: \"Check that the 'o_modified_image_to_save' class has been transferred to the new target\",\n    trigger: \"iframe span.s_parallax_bg.o_modified_image_to_save\",\n    run: () => {}, //it's a check\n},\n{\n    content: \"Check that the data related to the filter have been transferred to the new target\",\n    trigger: \"iframe span.s_parallax_bg[data-gl-filter='blur']\",\n    run: () => {}, //it's a check\n},\n    wTourUtils.changeOption(\"Parallax\", \"we-toggler\"),\n    wTourUtils.changeOption(\"Parallax\", 'we-button[data-select-data-attribute=\"1.5\"]'),\n{\n    content: \"Check that the option was correctly applied\",\n    trigger: 'iframe span.s_parallax_bg[style*=top][style*=bottom][style*=transform]',\n    run: () => {}, //it's a check\n},\n    ...wTourUtils.clickOnSave(),\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n{\n    content: \"The parallax should not add o_dirty when entering edit mode\",\n    trigger: 'iframe #wrap:not(.o_dirty)',\n    run: () => {}, //it's a check\n},\n]);\n});\n", "odoo.define('website.tour.public_user_editor_dep_widget', function (require) {\n'use strict';\n\nconst publicWidget = require('web.public.widget');\nconst wysiwygLoader = require('web_editor.loader');\n\npublicWidget.registry['public_user_editor_test'] = publicWidget.Widget.extend({\n    selector: 'textarea.o_public_user_editor_test_textarea',\n\n    /**\n     * @override\n     */\n    start: async function () {\n        await this._super(...arguments);\n        await wysiwygLoader.loadFromTextarea(this, this.el, {});\n    },\n});\n});\n\nodoo.define('website.tour.public_user_editor', function (require) {\n'use strict';\n\nconst tour = require('web_tour.tour');\n\ntour.register('public_user_editor', {\n    test: true,\n}, [{\n    trigger: '.note-editable',\n    run: function () {}, // Simple check\n}]);\n});\n", "odoo.define('website.tour_reset_password', function (require) {\n'use strict';\n\nvar tour = require('web_tour.tour');\nrequire('web.dom_ready');\n\ntour.register('website_reset_password', {\n    test: true,\n}, [\n    {\n        content: \"fill new password\",\n        trigger: '.oe_reset_password_form input[name=\"password\"]',\n        run: \"text adminadmin\"\n    },\n    {\n        content: \"fill confirm password\",\n        trigger: '.oe_reset_password_form input[name=\"confirm_password\"]',\n        run: \"text adminadmin\"\n    },\n    {\n        content: \"submit reset password form\",\n        trigger: '.oe_reset_password_form button[type=\"submit\"]',\n    },\n    {\n        content: \"check that we're logged in\",\n        trigger: '.oe_topbar_name:contains(\"The King\")',\n        run: function () {}\n    },\n]);\n});\n", "odoo.define(\"website.tour.restricted_editor\", function (require) {\n\"use strict\";\n\nvar wTourUtils = require(\"website.tour_utils\");\n\nwTourUtils.registerWebsitePreviewTour(\"restricted_editor\", {\n    test: true,\n    url: \"/\",\n}, [\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n]);\n});\n", "odoo.define('website.tour.rte', function (require) {\n'use strict';\n\nvar session = require('web.session');\nconst wTourUtils = require('website.tour_utils');\n\nvar domReady = new Promise(function (resolve) {\n    $(resolve);\n});\nvar ready = Promise.all([domReady, session.is_bound]);\n\nwTourUtils.registerWebsitePreviewTour('rte_translator', {\n    test: true,\n    url: '/',\n    wait_for: ready,\n}, [{\n    content: \"click language dropdown\",\n    trigger: 'iframe .js_language_selector .dropdown-toggle',\n}, {\n    content: \"click on Add a language\",\n    trigger: 'iframe a.o_add_language',\n}, {\n    content: \"type Parseltongue\",\n    trigger: 'div[name=\"lang_ids\"] .o_input_dropdown input',\n    run: 'text Parseltongue',\n}, {\n    content: 'select Parseltongue',\n    trigger: '.dropdown-item:contains(Parseltongue)',\n}, {\n    content: \"load Parseltongue\",\n    trigger: '.modal-footer .btn-primary',\n    extra_trigger: '.modal-dialog div[name=\"lang_ids\"] .rounded-pill .o_tag_badge_text:contains(Parseltongue)',\n}, {\n    content: \"click language dropdown (2)\",\n    trigger: 'iframe .js_language_selector .dropdown-toggle',\n    timeout: 60000,\n}, {\n    content: \"go to english version\",\n    trigger: 'iframe .js_language_selector a[data-url_code=\"en\"]',\n    extra_trigger: 'iframe html[lang*=\"pa-GB\"]',\n}, {\n    content: \"Open new page menu\",\n    trigger: \".o_menu_systray .o_new_content_container > a\",\n    extra_trigger: 'iframe html[lang*=\"en-US\"]',\n    consumeVisibleOnly: true,\n}, {\n    content: \"click on new page\",\n    trigger: '.o_new_content_element a',\n}, {\n    content: \"insert file name\",\n    trigger: '.modal-dialog input[type=\"text\"]',\n    run: 'text rte_translator.xml',\n}, {\n    content: \"create file\",\n    trigger: '.modal-dialog button.btn-primary',\n    extra_trigger: 'input[type=\"text\"]:propValue(rte_translator.xml)',\n}, {\n    content: \"click on the 'page manager' button\",\n    trigger: 'button[name=\"website.action_website_pages_list\"]',\n}, {\n    content: \"click on the record to display the xml file in the iframe\",\n    trigger: 'td:contains(\"rte_translator.xml\")',\n}, {\n    content: \"Open new page menu\",\n    trigger: \".o_menu_systray .o_new_content_container > a\",\n    consumeVisibleOnly: true,\n}, {\n    content: \"click on new page\",\n    trigger: '.o_new_content_element a',\n}, {\n    content: \"insert page name\",\n    trigger: '.modal-dialog input[type=\"text\"]',\n    run: 'text rte_translator',\n}, {\n    content: \"create page\",\n    trigger: '.modal-dialog button.btn-primary',\n    extra_trigger: 'input[type=\"text\"]:propValue(rte_translator)',\n}, {\n    content: \"drop a snippet\",\n    trigger: \"#snippet_structure .oe_snippet:eq(1) .oe_snippet_thumbnail\",\n    run: 'drag_and_drop iframe #wrap',\n}, {\n    content: \"change content\",\n    trigger: 'iframe #wrap',\n    run: function () {\n        $('iframe:not(.o_ignore_in_tour)').contents().find(\"#wrap p:first\").replaceWith('<p>Write one or <font style=\"background-color: yellow;\">two paragraphs <b>describing</b></font> your product or\\\n                <font style=\"color: rgb(255, 0, 0);\">services</font>. To be successful your content needs to be\\\n                useful to your <a href=\"/999\">readers</a>.</p> <input value=\"test translate default value\" placeholder=\"test translate placeholder\"/>\\\n                <p>&lt;b&gt;&lt;/b&gt; is an HTML&nbsp;tag &amp; is empty</p>');\n        $('iframe:not(.o_ignore_in_tour)').contents().find(\"#wrap img\").attr(\"title\", \"test translate image title\");\n    }\n}, {\n    content: \"save\",\n    trigger: 'button[data-action=save]',\n    extra_trigger: 'iframe #wrap p:first b',\n}, {\n    content: \"click language dropdown (3)\",\n    trigger: 'iframe .js_language_selector .dropdown-toggle',\n    extra_trigger: 'iframe body:not(.editor_enable)',\n}, {\n    content: \"click on Parseltongue version\",\n    trigger: 'iframe .js_language_selector a[data-url_code=\"pa_GB\"]',\n    extra_trigger: 'iframe html[lang*=\"en\"]',\n}, {\n    content: \"translate\",\n    trigger: '.o_menu_systray .o_translate_website_container > a',\n    extra_trigger: 'iframe html:not(:has(#wrap p span))',\n}, {\n    content: \"close modal\",\n    trigger: '.modal-footer .btn-secondary',\n}, {\n    content: \"check if translation is activate\",\n    trigger: 'iframe [data-oe-translation-initial-sha]',\n}, {\n    content: \"translate text\",\n    extra_trigger: '#oe_snippets.o_loaded',\n    trigger: 'iframe #wrap p font:first',\n    run: function (actionHelper) {\n        actionHelper.text('translated Parseltongue text');\n        const Wysiwyg = odoo.__DEBUG__.services['web_editor.wysiwyg'];\n        Wysiwyg.setRange(this.$anchor.contents()[0], 22);\n        this.$anchor.trigger($.Event(\"keyup\", {key: '_', keyCode: 95}));\n        this.$anchor.trigger('input');\n    },\n}, {\n    content: \"translate text with special char\",\n    trigger: 'iframe #wrap input + p span:first',\n    run: function (actionHelper) {\n        actionHelper.click();\n        this.$anchor.prepend('&lt;{translated}&gt;');\n        const Wysiwyg = odoo.__DEBUG__.services['web_editor.wysiwyg'];\n        Wysiwyg.setRange(this.$anchor.contents()[0], 0);\n        this.$anchor.trigger($.Event(\"keyup\", {key: '_', keyCode: 95}));\n        this.$anchor.trigger('input');\n    },\n}, {\n    content: \"click on input\",\n    trigger: 'iframe #wrap input:first',\n    extra_trigger: 'iframe #wrap .o_dirty font:first:contains(translated Parseltongue text)',\n    run: 'click',\n}, {\n    content: \"translate placeholder\",\n    trigger: '.modal-dialog input:first',\n    run: 'text test Parseltongue placeholder',\n}, {\n    content: \"translate default value\",\n    trigger: '.modal-dialog input:last',\n    run: 'text test Parseltongue default value',\n}, {\n    content: \"close modal\",\n    trigger: '.modal-footer .btn-primary',\n    extra_trigger: '.modal input:propValue(test Parseltongue placeholder)',\n}, {\n    content: \"check: input marked as translated\",\n    trigger: 'iframe input[placeholder=\"test Parseltongue placeholder\"].oe_translated',\n    run: () => {},\n}, {\n    content: \"save translation\",\n    trigger: 'button[data-action=save]',\n}, {\n    content: \"check: content is translated\",\n    trigger: 'iframe #wrap p font:first:contains(translated Parseltongue text)',\n    extra_trigger: 'iframe body:not(.editor_enable)',\n    run: function () {}, // it's a check\n}, {\n    content: \"check: content with special char is translated\",\n    trigger: \"iframe #wrap input + p:contains(<{translated}><b></b> is an HTML\\xa0tag & )\",\n    run: function () {}, // it's a check\n\n}, {\n    content: \"check: placeholder translation\",\n    trigger: 'iframe input[placeholder=\"test Parseltongue placeholder\"]',\n    run: function () {}, // it's a check\n}, {\n    content: \"check: default value translation\",\n    trigger: 'iframe input[value=\"test Parseltongue default value\"]',\n    run: () => {},\n}, {\n    content: \"open language selector\",\n    trigger: 'iframe .js_language_selector button:first',\n    extra_trigger: 'iframe html[lang*=\"pa-GB\"]:not(:has(#wrap p span))',\n}, {\n    content: \"return to english version\",\n    trigger: 'iframe .js_language_selector a[data-url_code=\"en\"]',\n}, {\n    content: \"edit english version\",\n    trigger: '.o_edit_website_container > a',\n    extra_trigger: 'iframe body:not(:has(#wrap p font:first:containsExact(paragraphs <b>describing</b>)))',\n}, {\n    content: \"select text\",\n    extra_trigger: '#oe_snippets.o_loaded',\n    trigger: 'iframe #wrap p',\n    run: function (actionHelper) {\n        actionHelper.click();\n        var el = this.$anchor[0];\n        var mousedown = document.createEvent('MouseEvents');\n        mousedown.initMouseEvent('mousedown', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, el);\n        el.dispatchEvent(mousedown);\n        var mouseup = document.createEvent('MouseEvents');\n        const Wysiwyg = odoo.__DEBUG__.services['web_editor.wysiwyg'];\n        Wysiwyg.setRange(el.childNodes[2], 6, el.childNodes[2], 13);\n        mouseup.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, el);\n        el.dispatchEvent(mouseup);\n    },\n// This is disabled for now because it reveals a bug that is fixed in saas-15.1\n// and considered a tradeoff in 15.0. The bug concerns the invalidation of\n// translations when inserting tags with more than one character. Whereas <u>\n// didn't trigger an invalidation, <span style=\"text-decoration-line: underline;\">\n// does.\n// }, {\n//     content: \"underline\",\n//     trigger: '.oe-toolbar #underline',\n}, {\n    content: \"save new change\",\n    trigger: 'button[data-action=save]',\n    // See comment above.\n    // extra_trigger: '#wrap.o_dirty p span[style*=\"text-decoration-line: underline;\"]',\n}, {\n    content: \"click language dropdown (4)\",\n    trigger: 'iframe .js_language_selector .dropdown-toggle',\n    extra_trigger: 'iframe body:not(.editor_enable)',\n}, {\n    content: \"return in Parseltongue\",\n    trigger: 'iframe html[lang=\"en-US\"] .js_language_selector .js_change_lang[data-url_code=\"pa_GB\"]',\n}, {\n    content: \"check bis: content is translated\",\n    trigger: 'iframe #wrap p font:first:contains(translated Parseltongue text)',\n    extra_trigger: 'iframe html[lang*=\"pa-GB\"]',\n}, {\n    content: \"check bis: placeholder translation\",\n    trigger: 'iframe input[placeholder=\"test Parseltongue placeholder\"]',\n}, {\n    content: \"open site menu\",\n    trigger: 'button[data-menu-xmlid=\"website.menu_site\"]',\n}, {\n    content: \"Open HTML editor\",\n    trigger: 'a[data-menu-xmlid=\"website.menu_ace_editor\"]',\n}, {\n    content: \"Check that the editor is not showing translated content (1)\",\n    trigger: '.ace_text-layer .ace_line:contains(\"an HTML\")',\n    run: function (actions) {\n        var lineEscapedText = $(this.$anchor.text()).last().text();\n        if (lineEscapedText !== \"&lt;b&gt;&lt;/b&gt; is an HTML&nbsp;tag &amp; is empty\") {\n            console.error('The HTML editor should display the correct untranslated content');\n            $('iframe:not(.o_ignore_in_tour)').contents().find('body').addClass('rte_translator_error');\n        }\n    },\n}, {\n    content: \"Check that the editor is not showing translated content (2)\",\n    trigger: 'iframe body:not(.rte_translator_error)',\n    run: function () {},\n}]);\n});\n", "/** @odoo-module */\n\nimport weUtils from 'web_editor.utils';\nimport wTourUtils from 'website.tour_utils';\n\nconst snippets = [\n    {\n        id: 's_text_image',\n        name: 'Text - Image',\n    },\n];\nconst gradients = [\n    'linear-gradient(135deg, rgb(203, 94, 238) 0%, rgb(75, 225, 236) 100%)',\n    'linear-gradient(135deg, rgb(255, 222, 202) 0%, rgb(202, 115, 69) 100%)',\n];\n\nfunction typeToName(xType) {\n    return xType === 'cc' ? 'color combinations' : xType === 'bg' ? 'background colors' : 'gradients';\n}\n\nfunction switchTo(type, _name) {\n    const target = type === 'cc' ? 'color-combinations' : type === 'bg' ? 'custom-colors' : 'gradients';\n    const name = _name || typeToName(type);\n    return {\n        trigger: `.o_we_colorpicker_switch_pane_btn[data-target=\"${target}\"]`,\n        content: `Switch to ${name}`,\n    };\n}\n\nfunction addCheck(steps, checkX, checkNoX, xType, noSwitch = false) {\n    if (!checkX && !checkNoX) {\n        return;\n    }\n\n    const name = typeToName(xType);\n    const selectorCheckX = checkX && `.o_we_color_btn[data-color=\"${checkX}\"].selected`;\n    const selectorCheckNoX = checkNoX && `.o_we_color_btn[data-color=\"${checkNoX}\"]:not(.selected)`;\n    const step = {\n        trigger: selectorCheckX || selectorCheckNoX,\n        content: `The correct ${name} is marked as selected`,\n        position: 'bottom',\n        run: () => null,\n    };\n    if (!selectorCheckX && selectorCheckNoX) {\n        step.extra_trigger = selectorCheckNoX;\n    }\n\n    if (!noSwitch) {\n        steps.push(switchTo(xType, name));\n    }\n    steps.push(step);\n}\n\nfunction checkAndUpdateBackgroundColor({\n    checkCC, checkNoCC,\n    checkBg, checkNoBg,\n    checkGradient, checkNoGradient,\n    changeType, change,\n    finalSelector, finalRun\n}) {\n    const steps = [\n        wTourUtils.changeBackgroundColor(),\n    ];\n\n    addCheck(steps, checkCC, checkNoCC, 'cc', true);\n    addCheck(steps, checkBg, checkNoBg, 'bg');\n    addCheck(steps, checkGradient, checkNoGradient, 'gradient');\n\n    if (changeType) {\n        steps.push(switchTo(changeType));\n        steps.push(wTourUtils.changeOption('ColoredLevelBackground', `.o_we_color_btn[data-color=\"${change}\"]`, 'background color', 'top', true));\n        steps.push({\n            trigger: finalSelector,\n            content: \"The selected colors have been applied (CC AND (BG or GRADIENT))\",\n            position: 'bottom',\n            run: finalRun,\n        });\n    }\n\n    return steps;\n}\n\nfunction updateAndCheckCustomGradient({updateStep, checkGradient}) {\n    const steps = [updateStep, {\n        trigger: `iframe #wrapwrap section.${snippets[0].id}.o_cc1`,\n        content: 'Color combination 1 still selected',\n        run: () => null,\n    }];\n    addCheck(steps, checkGradient, checkGradient !== gradients[0] && gradients[0], 'gradient', true);\n    return steps;\n}\n\nwTourUtils.registerWebsitePreviewTour('snippet_background_edition', {\n    url: '/',\n    edition: true,\n    test: true,\n},\n[\nwTourUtils.dragNDrop(snippets[0]),\nwTourUtils.clickOnSnippet(snippets[0]),\n\n// Add a color combination\n...checkAndUpdateBackgroundColor({\n    changeType: 'cc',\n    change: 3,\n    finalSelector: `iframe .${snippets[0].id}.o_cc.o_cc3:not([class*=bg-]):not([style*=\"background\"])`,\n}),\n\n// Change the color combination + Check the previous one was marked as selected\n...checkAndUpdateBackgroundColor({\n    checkCC: 3,\n    changeType: 'cc',\n    change: 2,\n    finalSelector: `iframe .${snippets[0].id}.o_cc.o_cc2:not(.o_cc3):not([class*=bg-])`,\n}),\n\n// Check the color combination was marked as selected + Edit the bg color\n...checkAndUpdateBackgroundColor({\n    checkCC: 2,\n    checkNoCC: 3,\n    changeType: 'bg',\n    change: 'black-50',\n    finalSelector: `iframe .${snippets[0].id}.o_cc.o_cc2.bg-black-50`,\n}),\n\n// Check the current color palette selection + Change the bg color\n...checkAndUpdateBackgroundColor({\n    checkCC: 2,\n    checkBg: 'black-50',\n    changeType: 'bg',\n    change: '800',\n    finalSelector: `iframe .${snippets[0].id}.o_cc.o_cc2.bg-800:not(.bg-black-50)`,\n}),\n\n// Check the current color palette selection + Change the color combination\n// again. It should keep the bg color class.\n...checkAndUpdateBackgroundColor({\n    checkCC: 2,\n    checkBg: '800',\n    checkNoBg: 'black-50',\n    changeType: 'cc',\n    change: 4,\n    finalSelector: `iframe .${snippets[0].id}.o_cc.o_cc4:not(.o_cc2).bg-800`,\n}),\n\n// Check the current color palette status + Replace the bg color by a gradient\n...checkAndUpdateBackgroundColor({\n    checkCC: 4,\n    checkNoCC: 2,\n    checkBg: '800',\n    changeType: 'gradient',\n    change: gradients[0],\n    finalSelector: `iframe .${snippets[0].id}.o_cc.o_cc4:not(.bg-800)[style*=\"background-image: ${gradients[0]}\"]`,\n}),\n\n// Check the current color palette status + Replace the gradient\n...checkAndUpdateBackgroundColor({\n    checkCC: 4,\n    checkNoBg: '800',\n    checkGradient: gradients[0],\n    changeType: 'gradient',\n    change: gradients[1],\n    finalSelector: `iframe .${snippets[0].id}.o_cc.o_cc4[style*=\"background-image: ${gradients[1]}\"]:not([style*=\"background-image: ${gradients[0]}\"])`,\n}),\n\n// Check the current color palette selection + Change the color combination\n// again. It should keep the gradient.\n...checkAndUpdateBackgroundColor({\n    checkCC: 4,\n    checkGradient: gradients[1],\n    checkNoGradient: gradients[0],\n    changeType: 'cc',\n    change: 1,\n    finalSelector: `iframe .${snippets[0].id}.o_cc.o_cc1:not(.o_cc4)[style*=\"background-image: ${gradients[1]}\"]`,\n}),\n\n// Final check of the color status in the color palette\n...checkAndUpdateBackgroundColor({\n    checkCC: 1,\n    checkNoCC: 4,\n    checkGradient: gradients[1],\n}),\n\n// Now, add an image on top of that color combination + gradient\n{\n    // Close the palette before selecting a media.\n    trigger: '.snippet-option-ColoredLevelBackground we-title',\n    content: 'Close palette',\n},\nwTourUtils.changeOption('ColoredLevelBackground', '[data-name=\"bg_image_toggle_opt\"]'),\n{\n    trigger: '.o_existing_attachment_cell img',\n    content: \"Select an image in the media dialog\",\n},\n{\n    trigger: `iframe .${snippets[0].id}.o_cc.o_cc1`,\n    run: function () {\n        const parts = weUtils.backgroundImageCssToParts(this.$anchor.css('background-image'));\n        if (!parts.url || !parts.url.startsWith('url(')) {\n            console.error('An image should have been added as background.');\n        }\n        if (parts.gradient !== gradients[1]) {\n            console.error('The gradient should have been kept when adding the background image');\n        }\n    },\n},\n\n// Replace the gradient while there is a background-image\n...checkAndUpdateBackgroundColor({\n    checkCC: 1,\n    checkGradient: gradients[1],\n    changeType: 'gradient',\n    change: gradients[0],\n    finalSelector: `iframe .${snippets[0].id}.o_cc.o_cc1:not([style*=\"${gradients[1]}\"])`,\n    finalRun: function () {\n        const parts = weUtils.backgroundImageCssToParts(this.$anchor.css('background-image'));\n        if (!parts.url || !parts.url.startsWith('url(')) {\n            console.error('The image should have been kept when changing the gradient');\n        }\n        if (parts.gradient !== gradients[0]) {\n            console.error('The gradient should have been changed');\n        }\n    },\n}),\n\n// Customize gradient\nwTourUtils.changeBackgroundColor(),\nswitchTo('gradient'),\n// Avoid navigating across tabs to maintain current editor state\n// Step colors\n...updateAndCheckCustomGradient({\n    updateStep: {\n        trigger: '.colorpicker .o_custom_gradient_scale',\n        content: 'Add step',\n        run: 'click',\n    },\n    checkGradient: 'linear-gradient(135deg, rgb(203, 94, 238) 0%, rgb(203, 94, 238) 0%, rgb(75, 225, 236) 100%)',\n}),\n...updateAndCheckCustomGradient({\n    updateStep: {\n        trigger: '.colorpicker .o_slider_multi input.active',\n        content: 'Move step',\n        run: () => {\n            const slider = $('.colorpicker .o_slider_multi input.active');\n            slider.val(45);\n            slider.trigger('click');\n        },\n    },\n    checkGradient: 'linear-gradient(135deg, rgb(203, 94, 238) 0%, rgb(203, 94, 238) 45%, rgb(75, 225, 236) 100%)',\n}),\n...updateAndCheckCustomGradient({\n    updateStep: {\n        trigger: '.colorpicker .o_color_picker_inputs .o_hex_div input',\n        content: 'Pick step color',\n        run: 'text #FF0000',\n    },\n    checkGradient: 'linear-gradient(135deg, rgb(203, 94, 238) 0%, rgb(255, 0, 0) 45%, rgb(75, 225, 236) 100%)',\n}),\n...updateAndCheckCustomGradient({\n    updateStep: {\n        trigger: '.colorpicker .o_remove_color',\n        content: 'Delete step',\n        run: 'click',\n    },\n    checkGradient: 'linear-gradient(135deg, rgb(203, 94, 238) 0%, rgb(75, 225, 236) 100%)',\n}),\n// Linear\n...updateAndCheckCustomGradient({\n    updateStep: {\n        trigger: '.colorpicker input[data-name=\"angle\"]',\n        content: 'Change angle',\n        run: 'text_blur 50',\n    },\n    checkGradient: 'linear-gradient(50deg, rgb(203, 94, 238) 0%, rgb(75, 225, 236) 100%)',\n}),\n// Radial\n...updateAndCheckCustomGradient({\n    updateStep: {\n        trigger: '.colorpicker we-button[data-gradient-type=\"radial-gradient\"]',\n        content: 'Switch to Radial',\n        run: 'click',\n    },\n    checkGradient: 'radial-gradient(circle farthest-side at 25% 25%, rgb(203, 94, 238) 0%, rgb(75, 225, 236) 100%)',\n}),\n...updateAndCheckCustomGradient({\n    updateStep: {\n        trigger: '.colorpicker input[data-name=\"positionX\"]',\n        content: 'Change X position',\n        run: 'text_blur 33',\n    },\n    checkGradient: 'radial-gradient(circle farthest-side at 33% 25%, rgb(203, 94, 238) 0%, rgb(75, 225, 236) 100%)',\n}),\n...updateAndCheckCustomGradient({\n    updateStep: {\n        trigger: '.colorpicker input[data-name=\"positionY\"]',\n        content: 'Change Y position',\n        run: 'text_blur 75',\n    },\n    checkGradient: 'radial-gradient(circle farthest-side at 33% 75%, rgb(203, 94, 238) 0%, rgb(75, 225, 236) 100%)',\n}),\n...updateAndCheckCustomGradient({\n    updateStep: {\n        trigger: '.colorpicker we-button[data-gradient-size=\"closest-side\"]',\n        content: 'Change color spread size',\n        run: 'click',\n    },\n    checkGradient: 'radial-gradient(circle closest-side at 33% 75%, rgb(203, 94, 238) 0%, rgb(75, 225, 236) 100%)',\n}),\n// Revert to predefined gradient\n{\n    trigger: `.o_we_color_btn[data-color=\"${gradients[0]}\"]`,\n    content: `Revert to predefiend gradient ${gradients[0]}`,\n    run: 'click',\n},\n\n// Replace the gradient by a bg color\n...checkAndUpdateBackgroundColor({\n    checkCC: 1,\n    checkGradient: gradients[0],\n    checkNoGradient: gradients[1],\n    changeType: 'bg',\n    change: 'black-75',\n    finalSelector: `iframe .${snippets[0].id}.o_cc.o_cc1.bg-black-75[style^=\"background-image: url(\"]:not([style*=\"${gradients[0]}\"])`\n}),\n\n// Re-add a gradient\n...checkAndUpdateBackgroundColor({\n    checkCC: 1,\n    checkBg: 'black-75',\n    checkNoGradient: gradients[0],\n    changeType: 'gradient',\n    change: gradients[1],\n    finalSelector: `iframe .${snippets[0].id}.o_cc.o_cc1:not(.bg-black-75)`,\n    finalRun: function () {\n        const parts = weUtils.backgroundImageCssToParts(this.$anchor.css('background-image'));\n        if (!parts.url || !parts.url.startsWith('url(')) {\n            console.error('The image should have been kept when re-adding the gradient');\n        }\n        if (parts.gradient !== gradients[1]) {\n            console.error('The gradient should have been re-added');\n        }\n    },\n}),\n\n// Final check of color selection and removing the image\n...checkAndUpdateBackgroundColor({\n    checkCC: 1,\n    checkNoBg: 'black-75',\n    checkGradient: gradients[1],\n}),\nwTourUtils.changeOption('ColoredLevelBackground', '[data-name=\"bg_image_toggle_opt\"]', 'image toggle', 'top', true),\n{\n    trigger: `iframe .${snippets[0].id}.o_cc.o_cc1[style*=\"background-image: ${gradients[1]}\"]`,\n    run: () => null,\n},\n\n// Now removing all colors via the 'None' button (note: colorpicker still opened)\n{\n    trigger: '.o_colorpicker_reset',\n    content: \"Click on the None button of the color palette\",\n},\n{\n    trigger: `iframe .${snippets[0].id}:not(.o_cc):not(.o_cc1):not([style*=\"background-image\"])`,\n    content: \"All color classes and properties should have been removed\",\n    run: () => null,\n}\n]);\n", "/** @odoo-module **/\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('snippet_cache_across_websites', {\n    edition: true,\n    test: true,\n    url: '/@/'\n}, [\n    {\n        content: \"Check that the custom snippet is displayed\",\n        trigger: '#snippet_custom_body span:contains(\"custom_snippet_test\")',\n        run: () => null,\n    },\n    // There's no need to save, but canceling might or might not show a popup...\n    ...wTourUtils.clickOnSave(),\n    ...wTourUtils.testSwitchWebsite('Test Website'),\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: \"Check that the custom snippet is not here\",\n        extra_trigger: '#oe_snippets:not(:has(#snippet_custom_body span:contains(\"custom_snippet_test\")))',\n        trigger: '#oe_snippets:has(#snippet_custom.d-none)',\n        run: () => null,\n    },\n]);\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('snippet_countdown', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({id: 's_countdown', name: 'Countdown'}),\n    wTourUtils.clickOnSnippet({id: 's_countdown', name: 'Countdown'}),\n    wTourUtils.changeOption('countdown', 'we-select:has([data-end-action]) we-toggler', 'end action'),\n    wTourUtils.changeOption('countdown', 'we-button[data-end-action=\"message\"]', 'end action'),\n    wTourUtils.changeOption('countdown', 'we-button.toggle-edit-message', 'message preview'),\n    // The next two steps check that the end message does not disappear when a\n    // widgets_start_request is triggered.\n    {\n        content: \"Hover an option which has a preview\",\n        trigger: '[data-select-class=\"o_half_screen_height\"]',\n        run: function (actions) {\n            this.$anchor.trigger('mouseover');\n            this.$anchor.trigger('mouseenter');\n        },\n    },\n    {\n        content: \"Check that the countdown message is still displayed\",\n        trigger: 'iframe .s_countdown .s_picture',\n        run: () => {\n            // Just a visibility check\n\n            // Also make sure the mouseout and mouseleave are triggered so that\n            // next steps make sense.\n            // TODO the next steps are not actually testing anything without\n            // it and the mouseout and mouseleave make sense but really it\n            // should not be *necessary* to simulate those for the editor flow\n            // to make some sense.\n            const $previousAnchor = $('[data-select-class=\"o_half_screen_height\"]');\n            $previousAnchor.trigger('mouseout');\n            $previousAnchor.trigger('mouseleave');\n        },\n    },\n    // Next, we change the end action to message and no countdown while the edit\n    // message toggle is still activated. It should hide the countdown\n    wTourUtils.changeOption('countdown', 'we-select:has([data-end-action]) we-toggler', 'end action'),\n    wTourUtils.changeOption('countdown', 'we-button[data-end-action=\"message_no_countdown\"]', 'end action'),\n    {\n        content: \"Check that the countdown is not displayed\",\n        trigger: 'iframe .s_countdown:has(.s_countdown_canvas_wrapper:not(:visible))',\n        run: () => null, // Just a visibility check\n    },\n    {\n        content: \"Check that the message is still displayed\",\n        trigger: 'iframe .s_countdown .s_picture',\n        run: () => null, // Just a visibility check\n    },\n]);\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('snippet_editor_panel_options', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\nwTourUtils.dragNDrop({\n    id: 's_text_image',\n    name: 'Text - Image',\n}),\n// Test keeping the text selection when using the width option.\n{\n    content: \"Click on the first paragraph.\",\n    trigger: 'iframe .s_text_image p',\n}, {\n    content: \"The text toolbar should be visible. The paragraph should be selected.\",\n    trigger: '#oe_snippets .o_we_customize_panel > #o_we_editor_toolbar_container',\n    run() {\n        const iframeDocument = document.querySelector('.o_iframe').contentDocument;\n        const pText = iframeDocument.querySelector('.s_text_image p').textContent;\n        const selection = iframeDocument.getSelection().toString();\n        if (pText !== selection) {\n            console.error(\"The paragraph was not correctly selected.\");\n        }\n    },\n}, {\n    content: \"Click on the width option.\",\n    trigger: '[data-select-class=\"o_container_small\"]',\n}, {\n    content: \"The snippet should have the correct class.\",\n    trigger: 'iframe .s_text_image > .o_container_small',\n    run: () => {}, // It's a check.\n}, {\n    content: \"The text toolbar should still be visible, and the text still selected.\",\n    trigger: '#oe_snippets .o_we_customize_panel > #o_we_editor_toolbar_container',\n    run() {\n        const iframeDocument = document.querySelector('.o_iframe').contentDocument;\n        const pText = iframeDocument.querySelector('.s_text_image p').textContent;\n        const selection = iframeDocument.getSelection().toString();\n        if (pText !== selection) {\n            console.error(\"The paragraph text selection was lost.\");\n        }\n    },\n},\n// Test the anchor option.\n{\n    content: \"Click on the anchor option\",\n    trigger: '#oe_snippets .snippet-option-anchor we-button',\n    run() {\n        // The clipboard cannot be accessed from a script.\n        // https://w3c.github.io/editing/docs/execCommand/#dfn-the-copy-command\n        // The execCommand is patched for that step so that ClipboardJS still\n        // sends the 'success' event.\n        const oldExecCommand = document.execCommand;\n        document.execCommand = () => true;\n        this.$anchor[0].click();\n        document.execCommand = oldExecCommand;\n    }\n}, {\n    content: \"Check the copied url from the notification toast\",\n    trigger: '.o_notification_manager .o_notification_content',\n    run() {\n        const { textContent } = this.$anchor[0];\n        const url = textContent.substring(textContent.indexOf('/'));\n\n        // The url should not target the client action\n        if (url.startsWith('/@')) {\n            console.error('The anchor option should target the frontend');\n        }\n\n        const iframeDocument = document.querySelector('.o_iframe').contentDocument;\n        const snippetId = iframeDocument.querySelector('.s_text_image').id;\n        if (!url || url.indexOf(snippetId) < 0) {\n            console.error('The anchor option does not target the correct snippet.');\n        }\n    },\n},\n// Test keeping the text selection when adding columns to a snippet with none.\nwTourUtils.goBackToBlocks(),\nwTourUtils.dragNDrop({\n    id: 's_text_block',\n    name: 'Text',\n}),\n{\n    content: \"Click on the first paragraph.\",\n    trigger: 'iframe .s_text_block p',\n}, {\n    content: \"The text toolbar should be visible. The paragraph should be selected.\",\n    trigger: '#oe_snippets .o_we_customize_panel > #o_we_editor_toolbar_container',\n    run() {\n        const iframeDocument = document.querySelector('.o_iframe').contentDocument;\n        const pText = iframeDocument.querySelector('.s_text_block p').textContent;\n        const selection = iframeDocument.getSelection().toString();\n        if (pText !== selection) {\n            console.error(\"The paragraph was not correctly selected.\");\n        }\n    },\n}, {\n    content: \"Click on the columns option.\",\n    trigger: '.snippet-option-layout_column we-select',\n},\n{\n    content: \"Change the number of columns.\",\n    trigger: '.snippet-option-layout_column [data-select-count=\"3\"]',\n}, {\n    content: \"The snippet should have the correct number of columns.\",\n    trigger: 'iframe .s_text_block .container > .row',\n    run() {\n        if (this.$anchor[0].childElementCount !== 3) {\n            console.error(\"The snippet does not have the correct number of columns\");\n        }\n    },\n}, {\n    content: \"The text toolbar should still be visible, and the text still selected.\",\n    trigger: '#oe_snippets .o_we_customize_panel > #o_we_editor_toolbar_container',\n    run() {\n        const iframeDocument = document.querySelector('.o_iframe').contentDocument;\n        const pText = iframeDocument.querySelector('.s_text_block p').textContent;\n        const selection = iframeDocument.getSelection().toString();\n        if (pText !== selection) {\n            console.error(\"The paragraph text selection was lost.\");\n        }\n    },\n},\n// Test keeping the text selection when removing all columns of a snippet.\n{\n    content: \"Click on the columns option.\",\n    trigger: '.snippet-option-layout_column we-select',\n},\n{\n    content: \"Change the number of columns.\",\n    trigger: '.snippet-option-layout_column [data-select-count=\"0\"]',\n}, {\n    content: \"The snippet should have the correct number of columns.\",\n    trigger: 'iframe .s_text_block .container:not(:has(.row))',\n}, {\n    content: \"The text toolbar should still be visible, and the text still selected.\",\n    trigger: '#oe_snippets .o_we_customize_panel > #o_we_editor_toolbar_container',\n    run() {\n        const iframeDocument = document.querySelector('.o_iframe').contentDocument;\n        const pText = iframeDocument.querySelector('.s_text_block p').textContent;\n        const selection = iframeDocument.getSelection().toString();\n        if (pText !== selection) {\n            console.error(\"The paragraph text selection was lost.\");\n        }\n    },\n},\n// Test keeping the text selection when toggling the grid mode.\nwTourUtils.changeOption(\"layout_column\", 'we-button[data-name=\"grid_mode\"]'),\n{\n    content: \"The snippet row should have the grid mode class.\",\n    trigger: \"iframe .s_text_block .row.o_grid_mode\",\n    run: () => {}, // It's a check.\n}, {\n    content: \"The text toolbar should still be visible, and the text still selected.\",\n    trigger: \"#oe_snippets .o_we_customize_panel > #o_we_editor_toolbar_container\",\n    run() {\n        const iframeDocument = document.querySelector(\".o_iframe\").contentDocument;\n        const pText = iframeDocument.querySelector(\".s_text_block p\").textContent;\n        const selection = iframeDocument.getSelection().toString();\n        if (pText !== selection) {\n            console.error(\"The paragraph text selection was lost.\");\n        }\n    },\n},\n// Test keeping the text selection when toggling back the normal mode.\nwTourUtils.changeOption(\"layout_column\", 'we-button[data-name=\"normal_mode\"]'),\n{\n    content: \"The snippet row should not have the grid mode class anymore.\",\n    trigger: \"iframe .s_text_block .row:not(.o_grid_mode)\",\n    run: () => {}, // It's a check.\n}, {\n    content: \"The text toolbar should still be visible, and the text still selected.\",\n    trigger: \"#oe_snippets .o_we_customize_panel > #o_we_editor_toolbar_container\",\n    run() {\n        const iframeDocument = document.querySelector(\".o_iframe\").contentDocument;\n        const pText = iframeDocument.querySelector(\".s_text_block p\").textContent;\n        const selection = iframeDocument.getSelection().toString();\n        if (pText !== selection) {\n            console.error(\"The paragraph text selection was lost.\");\n        }\n    },\n},\n// Test close dropdowns if click anywhere outside the dropdown\n{\n    content: \"Open text style dropdown.\",\n    trigger: \"#style button.dropdown-toggle\",\n}, {\n    content: \"Check if dropdown opened correctly.\",\n    trigger: \"#style button[data-bs-toggle=dropdown][aria-expanded=true]\",\n    run: () => {}, // It's a check.\n}, {\n    content: \"Click on the first paragraph again.\",\n    trigger: \"iframe .s_text_block p\",\n}, {\n    content: \"Check if dropdown closed correctly.\",\n    trigger: \"#style button[data-bs-toggle=dropdown][aria-expanded=false]\",\n    run: () => {}, // It's a check.\n},\n...wTourUtils.clickOnSave(),\n]);\n", "odoo.define(\"website.tour.snippet_empty_parent_autoremove\", function (require) {\n\"use strict\";\n\nconst wTourUtils = require('website.tour_utils');\n\nfunction removeSelectedBlock() {\n    return {\n        content: \"Remove selected block\",\n        trigger: '#oe_snippets we-customizeblock-options:nth-last-child(3) .oe_snippet_remove',\n    };\n}\n\nwTourUtils.registerWebsitePreviewTour('snippet_empty_parent_autoremove', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    // Base case: remove both columns from text - image\n    wTourUtils.dragNDrop({\n        id: 's_text_image',\n        name: 'Text - Image',\n    }),\n    {\n        content: \"Click on second column\",\n        trigger: 'iframe #wrap .s_text_image .row > :nth-child(2)',\n    },\n    removeSelectedBlock(),\n    {\n        content: \"Click on first column\",\n        trigger: 'iframe #wrap .s_text_image .row > :first-child',\n    },\n    removeSelectedBlock(),\n    {\n        content: \"Check that #wrap is empty\",\n        trigger: 'iframe #wrap:empty',\n    },\n\n    // Banner: test that parallax, bg-filter and shape are not treated as content\n    wTourUtils.dragNDrop({\n        id: 's_banner',\n        name: 'Banner',\n    }),\n    wTourUtils.clickOnSnippet({\n        id: 's_banner',\n        name: 'Banner',\n    }),\n    {\n        content: \"Check that parallax is present\",\n        trigger: 'iframe #wrap .s_banner .s_parallax_bg',\n        run: () => null,\n    },\n    wTourUtils.changeOption('ColoredLevelBackground', 'Shape'),\n    {\n        content: \"Check that shape is present\",\n        trigger: 'iframe #wrap .s_banner .o_we_shape',\n        run: () => null,\n    },\n    {\n        content: \"Click on first column\",\n        trigger: 'iframe #wrap .s_banner .row > :first-child',\n    },\n    removeSelectedBlock(),\n    {\n        content: \"Check that #wrap is empty\",\n        trigger: 'iframe #wrap:empty',\n        run: () => null,\n    },\n]);\n});\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('snippet_image_gallery', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({id: 's_image_gallery', name: 'Images Wall'}),\n    ...wTourUtils.clickOnSave(),\n    {\n        content: 'Click on an image of the Image Wall',\n        trigger: 'iframe .s_image_gallery img',\n        run: 'click',\n    },\n    {\n        content: 'Check that the modal has opened properly',\n        trigger: 'iframe .s_gallery_lightbox img',\n        run: () => {}, // This is a check.\n    },\n]);\n\nwTourUtils.registerWebsitePreviewTour(\"snippet_image_gallery_remove\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: \"s_image_gallery\",\n        name: \"Image Gallery\",\n}), wTourUtils.clickOnSnippet({\n    id: 's_image_gallery',\n    name: 'Image Gallery',\n}), {\n    content: \"Click on Remove all\",\n    trigger: \"we-button:has(div:contains('Remove all'))\",\n}, {\n    content: \"Click on Add Images\",\n    trigger: \"iframe span:contains('Add Images')\",\n}, {\n    content: \"Click on the first new image\",\n    trigger: \".o_select_media_dialog img[title='s_default_image.jpg']\",\n}, {\n    content: \"Click on the second new image\",\n    trigger: \".o_select_media_dialog img[title='s_default_image2.jpg']\",\n},\n    wTourUtils.addMedia(),\n   {\n    content: \"Click on the image of the Image Gallery snippet\",\n    trigger: \"iframe .s_image_gallery .carousel-item.active  img\",\n}, {\n    content: \"Check that the Snippet Editor of the clicked image has been loaded\",\n    trigger: \"we-customizeblock-options span:contains('Image'):not(:contains('Image Gallery'))\",\n    run: () => null,\n}, {\n    content: \"Click on Remove Block\",\n    trigger: \".o_we_customize_panel we-title:has(span:contains('Image Gallery')) we-button[title='Remove Block']\",\n}, {\n    content: \"Check that the Image Gallery snippet has been removed\",\n    trigger: \"iframe #wrap:not(:has(.s_image_gallery))\",\n    run: () => null,\n}]);\n\nwTourUtils.registerWebsitePreviewTour(\"snippet_image_gallery_reorder\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: \"s_image_gallery\",\n        name: \"Image Gallery\",\n    }),\n{\n    content: \"Click on the first image of the snippet\",\n    trigger: \"iframe .s_image_gallery .carousel-item.active img\",\n},\n    wTourUtils.changeOption('ImageTools', 'we-select:contains(\"Filter\") we-toggler'),\n    wTourUtils.changeOption('ImageTools', '[data-gl-filter=\"blur\"]'),\n{\n    content: \"Check that the image has the correct filter\",\n    trigger: \".snippet-option-ImageTools we-select:contains('Filter') we-toggler:contains('Blur')\",\n    run: () => null, // This is a check.\n}, {\n    content: \"Click on move to next\",\n    trigger: \".snippet-option-gallery_img we-button[data-position='next']\",\n}, {\n    content: \"Check that the image has been moved\",\n    trigger: \"iframe .s_image_gallery .carousel-item.active img[data-index='1']\",\n    run: () => null, // This is a check.\n}, {\n    content: \"Click on the footer to reload the editor panel\",\n    trigger: \"iframe #footer\",\n}, {\n    content: \"Check that the footer options have been loaded\",\n    trigger: \".snippet-option-HideFooter we-button:contains('Page Visibility')\",\n    run: () => null, // This is a check.\n}, {\n    content: \"Click on the moved image\",\n    trigger: \"iframe .s_image_gallery .carousel-item.active img[data-index='1'][data-gl-filter='blur']\",\n}, {\n    content: \"Check that the image still has the correct filter\",\n    trigger: \".snippet-option-ImageTools we-select:contains('Filter') we-toggler:contains('Blur')\",\n    run: () => null, // This is a check.\n}, {\n    content: \"Click to access next image\",\n    trigger: \"iframe .s_image_gallery .carousel-control-next\",\n}, {\n    content: \"Check that the option has changed\",\n    trigger: \".snippet-option-ImageTools we-select:contains('Filter') we-toggler:not(:contains('Blur'))\",\n    run: () => null, // This is a check.\n}, {\n    content: \"Click to access previous image\",\n    trigger: \"iframe .s_image_gallery .carousel-control-prev\",\n}, {\n    content: \"Check that the option is restored\",\n    trigger: \".snippet-option-ImageTools we-select:contains('Filter') we-toggler:contains('Blur')\",\n    run: () => null, // This is a check.\n}]);\n\nwTourUtils.registerWebsitePreviewTour(\"snippet_image_gallery_thumbnail_update\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: \"s_image_gallery\",\n        name: \"Image Gallery\",\n    }),\n    wTourUtils.clickOnSnippet({\n        id: \"s_image_gallery\",\n        name: \"Image Gallery\",\n    }),\n    wTourUtils.changeOption(\"gallery\", \"we-button[data-add-images]\"),\n{\n    content: \"Click on the default image\",\n    trigger: \".o_select_media_dialog img[title='s_default_image.jpg']\",\n},\n    wTourUtils.addMedia(),\n{\n    content: \"Check that the new image has been added\",\n    trigger: \"iframe .s_image_gallery:has(img[data-index='3'])\",\n    run: () => null, // This is a check.\n}, {\n    content: \"Check that the thumbnail of the first image has not been changed\",\n    trigger: \"iframe .s_image_gallery ul.carousel-indicators li:first-child[style='background-image: url(/web/image/website.library_image_08)']\",\n    run: () => null, // This is a check.\n}]);\n", "/** @odoo-module **/\n\nimport wTourUtils from \"website.tour_utils\";\n\nconst selectSignImageStep = {\n    content: \"Click on sign image\",\n    extra_trigger: \".o_we_customize_panel:not(:has(.snippet-option-gallery_img))\",\n    trigger: \"iframe .s_image_gallery img[data-original-src*='sign']\",\n};\n// Without reselecting the image, the tour manages to click on the\n// move button before the active image is updated.\n// We need to first select the footer and then the social media in it to prevent\n// race condition with the potential loader after image wall order option.\nconst reselectSignImageSteps = [{\n    content: \"Select footer\",\n    extra_trigger: \"iframe .s_image_gallery .o_masonry_col:nth-child(3):has(img[data-index='5'])\",\n    trigger: \"iframe footer\",\n}, {\n    content: \"Select social media in footer\",\n    trigger: \"iframe footer .s_social_media\",\n}, {\n    content: \"Check that the social media options are displayed\",\n    trigger: \"we-list[data-name='social_media_list']\",\n    run: () => {}, // This is a check.\n}, selectSignImageStep];\n\nwTourUtils.registerWebsitePreviewTour(\"snippet_images_wall\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: \"s_images_wall\",\n        name: \"Images Wall\",\n}), wTourUtils.clickOnSnippet({\n    id: \"s_image_gallery\",\n    name: \"Images Wall\",\n}),\nselectSignImageStep,\n{\n    content: \"Click on add a link\",\n    trigger: \".snippet-option-ReplaceMedia we-button[data-set-link]\",\n}, {\n    content: \"Change the link of the image\",\n    trigger: \".snippet-option-ReplaceMedia [data-set-url] input\",\n    run: \"text /contactus\",\n}, {\n    content: \"Click on move to previous\",\n    trigger: \".snippet-option-gallery_img we-button[data-position='prev']\",\n}, {\n    content: \"Check if sign is in second column\",\n    trigger: \"iframe .s_image_gallery .o_masonry_col:nth-child(2):has(a[href='/contactus'] img[data-index='1'][data-original-src*='sign'])\",\n    run: () => {}, // This is a check.\n},\n...reselectSignImageSteps,\n{\n    content: \"Click on move to first\",\n    trigger: \".snippet-option-gallery_img we-button[data-position='first']\",\n}, {\n    content: \"Check if sign is in first column\",\n    trigger: \"iframe .s_image_gallery .o_masonry_col:nth-child(1):has(img[data-index='0'][data-original-src*='sign'])\",\n    run: () => {}, // This is a check.\n},\n...reselectSignImageSteps,\n{\n    content: \"Click on move to previous\",\n    trigger: \".snippet-option-gallery_img we-button[data-position='prev']\",\n}, {\n    content: \"Check if sign is in third column\",\n    trigger: \"iframe .s_image_gallery .o_masonry_col:nth-child(3):has(img[data-index='5'][data-original-src*='sign'])\",\n    run: () => {}, // This is a check.\n},\n...reselectSignImageSteps,\n{\n    content: \"Click on move to next\",\n    trigger: \".snippet-option-gallery_img we-button[data-position='next']\",\n}, {\n    content: \"Check if sign is in first column\",\n    trigger: \"iframe .s_image_gallery .o_masonry_col:nth-child(1):has(img[data-index='0'][data-original-src*='sign'])\",\n    run: () => {}, // This is a check.\n},\n...reselectSignImageSteps,\n{\n    content: \"Click on move to last\",\n    trigger: \".snippet-option-gallery_img we-button[data-position='last']\",\n}, {\n    content: \"Check layout\",\n    trigger: \"iframe .s_image_gallery .o_masonry_col:nth-child(3):has(img[data-index='5'][data-original-src*='sign'])\",\n    run: () => {}, // This is a check.\n}]);\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('snippet_popup_add_remove', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [{\n    content: 'Drop s_popup snippet',\n    trigger: '.oe_snippet:has( > [data-snippet=\"s_popup\"]) .oe_snippet_thumbnail',\n    run: \"drag_and_drop iframe #wrap\",\n}, {\n    content: 'Edit s_popup snippet',\n    in_modal: false,\n    trigger: 'iframe #wrap.o_editable [data-snippet=\"s_popup\"] .row > div', // Click deep in the snippet structure\n}, {\n    content: 'Check s_popup setting are loaded, wait panel is visible',\n    in_modal: false,\n    trigger: '.o_we_customize_panel',\n    run: () => null,\n},\n...wTourUtils.clickOnSave(),\n...wTourUtils.clickOnEditAndWaitEditMode(),\n{\n    content: 'Toggle the visibility of the Popup',\n    in_modal: false,\n    trigger: '.o_we_invisible_el_panel .o_we_invisible_entry:contains(\"Popup\")',\n}, {\n    content: 'Edit s_popup snippet(2)',\n    in_modal: false,\n    trigger: 'iframe #wrap.o_editable [data-snippet=\"s_popup\"] h2',\n    run: function() {\n        // Simulating pressing enter.\n        const anchor = this.$anchor[0];\n        // Trick the editor into keyboardType === 'PHYSICAL' and press enter\n        anchor.dispatchEvent(new KeyboardEvent(\"keydown\", { key: \"Enter\", bubbles: true }));\n        // Trigger editor's '_onInput' handler, which leads to historyRollback.\n        anchor.dispatchEvent(new InputEvent('input', { inputType: 'insertLineBreak', bubbles: true }));\n    }\n}, {\n    content: 'Check the s_popup was visible',\n    in_modal: false,\n    trigger: 'iframe #wrap.o_editable [data-snippet=\"s_popup\"]:not(.d-none)',\n    run: () => null,\n}, {\n    content: `Remove the s_popup snippet`,\n    in_modal: false,\n    trigger: '.o_we_customize_panel we-customizeblock-options:contains(\"Popup\") we-button.oe_snippet_remove:first',\n}, {\n    content: 'Check the s_popup was removed',\n    in_modal: false,\n    trigger: 'iframe #wrap.o_editable:not(:has([data-snippet=\"s_popup\"]))',\n    run: () => null,\n},\n// Test that undoing dropping the snippet removes the invisible elements panel.\n{\n    content: \"Drop the snippet again.\",\n    trigger: '#oe_snippets .oe_snippet:has(> [data-snippet=\"s_popup\"]) .oe_snippet_thumbnail',\n    run: \"drag_and_drop iframe #wrap\",\n}, {\n    content: \"The popup should be in the invisible elements panel.\",\n    in_modal: false,\n    trigger: '.o_we_invisible_el_panel .o_we_invisible_entry',\n    run: () => null, // It's a check.\n}, {\n    content: \"Click on the 'undo' button.\",\n    in_modal: false,\n    trigger: '#oe_snippets button[data-action=\"undo\"]',\n}, {\n    content: \"Check that the s_popup was removed.\",\n    in_modal: false,\n    trigger: 'iframe #wrap.o_editable:not(:has([data-snippet=\"s_popup\"]))',\n    run: () => null, // It's a check.\n}, {\n    content: \"The invisible elements panel should also be removed.\",\n    trigger: '#oe_snippets:has(.o_we_invisible_el_panel.d-none)',\n    run: () => null, // It's a check.\n}]);\n", "/** @odoo-module */\n\nimport wTourUtils from \"website.tour_utils\";\n\nconst snippets = [\n    {\n        id: \"s_popup\",\n        name: \"Popup\",\n    },\n    {\n        id: \"s_media_list\",\n        name: \"Media List\",\n    },\n    {\n        id: \"s_three_columns\",\n        name: \"Columns\",\n    },\n];\n\nconst setOnScrollAnim = function () {\n    return [\n        wTourUtils.changeOption(\"WebsiteAnimate\", 'we-select[data-is-animation-type-selection=\"true\"] we-toggler'),\n        wTourUtils.changeOption(\"WebsiteAnimate\", 'we-button[data-animation-mode=\"onScroll\"]'),\n        wTourUtils.changeOption(\"WebsiteAnimate\", 'we-select[data-name=\"animation_effect_opt\"] we-toggler'),\n        wTourUtils.changeOption(\"WebsiteAnimate\", 'we-button[data-name=\"o_anim_slide_in_opt\"]'),\n    ];\n};\n\nwTourUtils.registerWebsitePreviewTour(\"snippet_popup_and_animations\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop(snippets[1]), // Media List\n    wTourUtils.dragNDrop(snippets[1]), // Media List\n    wTourUtils.dragNDrop(snippets[2]), // Columns\n    wTourUtils.clickOnElement(\"3rd columns\", \"iframe .s_three_columns .row > :last-child\"),\n    ...setOnScrollAnim(),\n    {\n        content: \"Open the Cookies Bar.\",\n        trigger: \".o_we_invisible_el_panel .o_we_invisible_entry\",\n    },\n    {\n        content: \"Scroll to top\",\n        trigger: \"iframe #wrapwrap\",\n        extra_trigger: \"iframe #website_cookies_bar:not(.d-none)\",\n        run: function () {\n            const animatedColumnEl = this.$anchor[0].querySelector(\".s_three_columns .row > :last-child\");\n            // When the animated element is fully visible, its animation delay\n            // should be rounded to -1 in the following condition.\n            if (Math.round(parseFloat(animatedColumnEl.style.animationDelay)) !== -1) {\n                console.error(\"The scroll animation in the page did not start properly with the cookies bar open.\");\n            }\n            this.$anchor[0].scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth'\n            });\n        },\n    },\n    {\n        content: \"Wait for the page to be scrolled to the top.\",\n        trigger: \"iframe .s_three_columns .row > :last-child:not(.o_animating)\",\n        extra_trigger: \"iframe header#top:not(.o_header_affixed)\",\n        run: function () {\n            // If the column has been animated successfully, the animation delay\n            // should be set to approximately zero when it is not visible.\n            // The main goal of the following condition is to verify if the\n            // animation delay is being updated as expected.\n            if (Math.round(parseFloat(this.$anchor[0].style.animationDelay)) !== 0) {\n                console.error(\"The scroll animation in the page did not end properly with the cookies bar open.\");\n            }\n        },\n    },\n    {\n        content: \"Close the Cookies Bar.\",\n        trigger: \".o_we_invisible_el_panel .o_we_invisible_entry\",\n        run: \"click\",\n    },\n    wTourUtils.dragNDrop(snippets[0]), // Popup\n    wTourUtils.dragNDrop(snippets[1]), // Media List\n    {\n        content: \"Drag the Columns building block and drop it at the bottom of the popup.\",\n        trigger: '#oe_snippets .oe_snippet[name=\"Columns\"] .oe_snippet_thumbnail:not(.o_we_already_dragging)',\n        extra_trigger: \".o_website_preview.editor_enable.editor_has_snippets\",\n        run: \"drag_and_drop iframe #wrapwrap .modal-content .s_media_list .container > .row > :last-child\",\n    },\n    wTourUtils.clickOnElement(\"3rd columns\", \"iframe .s_popup .s_three_columns .row > :last-child\"),\n    ...setOnScrollAnim(),\n    {\n        content: \"Verify the animation delay of the animated element in the popup at the beginning\",\n        trigger: \"iframe .s_popup .modal\",\n        run: function () {\n            const animatedColumnEl = this.$anchor[0].querySelector(\".s_three_columns .row > :last-child\");\n            // When the animated element is fully visible, its animation delay\n            // should be rounded to -1 in the following condition.\n            if (Math.round(parseFloat(animatedColumnEl.style.animationDelay)) !== -1) {\n                console.error(\"The scroll animation in the modal did not start properly.\");\n            }\n            this.$anchor[0].closest(\".modal\").scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth'\n            });\n        },\n    },\n    {\n        content: \"Wait until the column is no longer animated/visible.\",\n        trigger: \"iframe .s_popup .s_three_columns .row > :last-child:not(.o_animating)\",\n        run: function () {\n            // If the column has been animated successfully, the animation delay\n            // should be set to approximately zero when it is not visible.\n            if (Math.round(parseFloat(this.$anchor[0].style.animationDelay)) !== 0) {\n                console.error(\"The scroll animation in the modal did not end properly.\");\n            }\n        },\n    },\n]);\n", "/** @odoo-module */\n\nimport wTourUtils from \"website.tour_utils\";\n\nconst snippets = [\n    {\n        id: \"s_popup\",\n        name: \"Popup\",\n    },\n    {\n        id: \"s_media_list\",\n        name: \"Media List\",\n    },\n];\n\nconst checkScrollbar = function (hasScrollbar) {\n    return {\n        content: `Check that the #wrapwrap ${hasScrollbar ? \"has\" : \"does not have\"} a vertical scrollbar.`,\n        trigger: `iframe ${hasScrollbar ? \"body:not(.modal-open)\" : \"body.modal-open\"}`,\n        run: function () {\n            const wrapwrapEl = this.$anchor[0].querySelector(\"#wrapwrap\");\n            const wrapwrapStyle = window.getComputedStyle(wrapwrapEl);\n            if (!hasScrollbar && (wrapwrapStyle.overflow !== \"hidden\" || parseFloat(wrapwrapStyle.paddingRight) < 1)) {\n                console.error(\"error The #wrapwrap vertical scrollbar should be hidden\");\n            } else if (hasScrollbar && (wrapwrapStyle.overflow === \"hidden\" || parseFloat(wrapwrapStyle.paddingRight) > 0)) {\n                console.error(\"error The #wrapwrap vertical scrollbar should be displayed\");\n            }\n        },\n    };\n};\n\nconst toggleBackdrop = function () {\n    return wTourUtils.changeOption('SnippetPopup', 'we-button[data-name=\"popup_backdrop_opt\"] we-checkbox', 'backdrop');\n};\n\nwTourUtils.registerWebsitePreviewTour(\"snippet_popup_and_scrollbar\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop(snippets[1]), // Media List\n    wTourUtils.dragNDrop(snippets[0]), // Popup\n    checkScrollbar(false),\n    wTourUtils.clickOnSnippet(snippets[0]), // Popup\n    toggleBackdrop(), // hide Popup backdrop\n    checkScrollbar(true),\n    wTourUtils.goBackToBlocks(),\n    {\n        content: \"Drag the Media List block and drop it in the popup.\",\n        trigger: \"#oe_snippets .oe_snippet:has(> [data-snippet='s_media_list']) .oe_snippet_thumbnail\",\n        run: \"drag_and_drop iframe #wrap .s_popup .modal-content.oe_structure\",\n    },\n    checkScrollbar(false),\n    {\n        content: \"Select the Media List snippet in the Popup.\",\n        trigger: \"iframe #wrap .s_popup .modal-content .s_media_list\",\n    },\n    {\n        content: \"Remove the Media List snippet in the Popup.\",\n        trigger: \"iframe .oe_overlay.oe_active .oe_snippet_remove\",\n    },\n    checkScrollbar(true),\n    toggleBackdrop(), // show Popup backdrop\n    checkScrollbar(false),\n    {\n        content: \"Close the Popup.\",\n        trigger: \".o_we_invisible_el_panel .o_we_invisible_entry\",\n    },\n    checkScrollbar(true),\n    {\n        content: \"Open the Cookies Bar.\",\n        trigger: \".o_we_invisible_el_panel .o_we_invisible_entry:last-child\",\n    },\n    checkScrollbar(true),\n    toggleBackdrop(), // show Cookies Bar backdrop\n    checkScrollbar(false),\n    toggleBackdrop(), // hide Cookies Bar backdrop\n    checkScrollbar(true),\n    {\n        content: \"Open the Popup.\",\n        trigger: \".o_we_invisible_el_panel .o_we_invisible_entry\",\n    },\n    checkScrollbar(false),\n    wTourUtils.goBackToBlocks(),\n    {\n        content: \"Drag the Media List block and drop it in the popup.\",\n        trigger: \"#oe_snippets .oe_snippet:has(> [data-snippet='s_media_list']) .oe_snippet_thumbnail\",\n        run: \"drag_and_drop iframe #wrap .s_popup .modal-content.oe_structure\",\n    },\n    checkScrollbar(false),\n    wTourUtils.clickOnSnippet(snippets[0]), // Popup\n    {\n        content: \"Remove the s_popup snippet\",\n        trigger: \".o_we_customize_panel we-customizeblock-options:contains('Popup') we-button.oe_snippet_remove:first\",\n        in_modal: false,\n        run: \"click\",\n    },\n    checkScrollbar(true),\n    wTourUtils.goBackToBlocks(),\n    {\n        content: \"Drag a Media List snippet and drop it in the Cookies Bar.\",\n        trigger: \"#oe_snippets .oe_snippet:has(> [data-snippet='s_media_list']) .oe_snippet_thumbnail\",\n        run: \"drag_and_drop iframe #website_cookies_bar .modal-content.oe_structure\",\n    },\n    {\n        content: \"Select the Media List snippet in the Cookies Bar.\",\n        trigger: \"iframe #website_cookies_bar .modal-content .s_media_list\",\n    },\n    {\n        content: \"Duplicate the Media List snippet\",\n        trigger: \".o_we_customize_panel we-customizeblock-options:contains('Media List') we-button.oe_snippet_clone:first\",\n        in_modal: false,\n        run: \"click\",\n    },\n    checkScrollbar(false),\n    {\n        content: \"Remove the first Media List snippet in the Cookies Bar.\",\n        trigger: \"iframe .oe_overlay.oe_active .oe_snippet_remove\",\n    },\n    {\n        content: \"Remove the second Media List snippet in the Cookies Bar.\",\n        trigger: \"iframe .oe_overlay.oe_active .oe_snippet_remove\",\n    },\n    checkScrollbar(true),\n]);\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\n// TODO: Remove following steps once fix of task-3212519 is done.\n// Those steps are preventing a race condition to happen in the meantime: when\n// the tour was clicking on the toggle to hide facebook in the next step, it\n// would actually \"ignore\" the result of the click on the toggle and would just\n// consider the action of focusing out the input.\nconst socialRaceConditionClass = 'social_media_race_condition';\nconst preventRaceConditionStep = [{\n    content: \"Wait a few ms to avoid race condition\",\n    // Ensure the class is remove from previous call of those steps\n    extra_trigger: `body:not(.${socialRaceConditionClass})`,\n    trigger: 'iframe .s_social_media',\n    run() {\n        setTimeout(() => {\n            document.body.classList.add(socialRaceConditionClass);\n        }, 500);\n    }\n}, {\n    content: \"Check the race condition class is added after a few ms\",\n    trigger: `body.${socialRaceConditionClass}`,\n    run() {\n        document.body.classList.remove(socialRaceConditionClass);\n    }\n}];\n\nconst replaceIconByImage = function (url) {\n    return [{\n        content: \"Replace the icon by an image\",\n        trigger: `iframe .s_social_media a[href='${url}'] i.fa`,\n        run: \"dblclick\",\n    },\n    {\n        content: \"Go to the Images tab in the media dialog\",\n        trigger: \".o_select_media_dialog .o_notebook_headers .nav-item a:contains('Images')\",\n    },\n    {\n        content: \"Select the image\",\n        trigger: \".o_select_media_dialog img[title='s_banner_default_image.jpg']\",\n    },\n    ...preventRaceConditionStep,\n    ];\n};\n\nconst addNewSocialNetwork = function (optionIndex, linkIndex, url, replaceIcon = false) {\n    const replaceIconByImageSteps = replaceIcon ? replaceIconByImage(\"https://www.example.com\") : [];\n    return [{\n        content: \"Click on Add New Social Network\",\n        trigger: 'we-list we-button.o_we_list_add_optional',\n    },\n    {\n        content: \"Ensure new option is found\",\n        trigger: `we-list table input:eq(${optionIndex})[data-list-position=${optionIndex}][data-dom-position=${linkIndex}][data-undeletable=false]`,\n        run: () => {}, // This is a check.\n    },\n    {\n        content: \"Ensure new link is found\",\n        trigger: `iframe .s_social_media:has(a:eq(${linkIndex})[href='https://www.example.com'])`,\n        run: () => {}, // This is a check.\n    },\n    ...replaceIconByImageSteps,\n    {\n        content: \"Change added Option label\",\n        trigger: `we-list table input:eq(${optionIndex})`,\n        run: `text ${url}`,\n    },\n    {\n        content: \"Ensure new link is changed\",\n        trigger: `iframe .s_social_media:has(a:eq(${linkIndex})[href='${url}'])`,\n        run: () => {}, // This is a check.\n    },\n    ...preventRaceConditionStep,\n    ];\n};\n\nwTourUtils.registerWebsitePreviewTour('snippet_social_media', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({id: 's_social_media', name: 'Social Media'}),\n    wTourUtils.clickOnSnippet({id: 's_social_media', name: 'Social Media'}),\n    ...addNewSocialNetwork(6, 6, 'https://www.youtu.be/y7TlnAv6cto'),\n    {\n        content: 'Click on the toggle to hide Facebook',\n        trigger: 'we-list table we-button.o_we_user_value_widget',\n        run: 'click',\n    },\n    {\n        content: \"Ensure twitter became first\",\n        trigger: 'iframe .s_social_media:has(a:eq(0)[href=\"/website/social/twitter\"])',\n        run: () => {}, // This is a check.\n    },\n    {\n        content: 'Drag the facebook link at the end of the list',\n        trigger: 'we-list table we-button.o_we_drag_handle',\n        position: 'bottom',\n        run: \"drag_and_drop we-list table tr:last-child\",\n    },\n    {\n        content: 'Check drop completed',\n        trigger: 'we-list table input:eq(6)[data-media=\"facebook\"]',\n        run: () => {}, // This is a check.\n    },\n    ...preventRaceConditionStep,\n    // Create a Link for which we don't have an icon to propose.\n    ...addNewSocialNetwork(7, 6, 'https://whatever.it/1EdSw9X'),\n    // Create a custom instagram link.\n    ...addNewSocialNetwork(8, 7, 'https://instagr.am/odoo.official/'),\n    {\n        content: \"Check if the result is correct before removing\",\n        trigger: \"iframe .s_social_media\" +\n                 \":has(a:eq(0)[href='/website/social/twitter'])\" +\n                 \":has(a:eq(1)[href='/website/social/linkedin'])\" +\n                 \":has(a:eq(2)[href='/website/social/youtube'])\" +\n                 \":has(a:eq(3)[href='/website/social/instagram'])\" +\n                 \":has(a:eq(4)[href='/website/social/github'])\" +\n                 \":has(a:eq(5)[href='https://www.youtu.be/y7TlnAv6cto']:has(i.fa-youtube))\" +\n                 \":has(a:eq(6)[href='https://whatever.it/1EdSw9X']:has(i.fa-pencil))\" +\n                 \":has(a:eq(7)[href='https://instagr.am/odoo.official/']:has(i.fa-instagram))\",\n        run: () => {}, // This is a check.\n    },\n    // Create a custom link, not officially supported, ensure icon is found.\n    {\n        content: 'Change custom social to unsupported link',\n        trigger: 'we-list table input:eq(5)',\n        run: 'text https://www.paypal.com/abc',\n    },\n    {\n        content: \"Ensure paypal icon is found\",\n        trigger: \"iframe .s_social_media\" +\n                 \":has(a:eq(5)[href='https://www.paypal.com/abc']:has(i.fa-paypal))\",\n        run: () => {}, // This is a check.\n    },\n    ...preventRaceConditionStep,\n    {\n        content: 'Delete the custom link',\n        trigger: 'we-list we-button.o_we_select_remove_option',\n        run: 'click',\n    },\n    {\n        content: \"Ensure custom link was removed\",\n        trigger: 'iframe .s_social_media:has(a:eq(5)[href=\"https://whatever.it/1EdSw9X\"]:has(i.fa-pencil))',\n        run: () => {}, // This is a check.\n    },\n    {\n        content: 'Click on the toggle to show Facebook',\n        trigger: 'we-list table we-button.o_we_user_value_widget:not(.active)',\n        run: 'click',\n    },\n    {\n        content: \"Check if the result is correct after removing\",\n        trigger: \"iframe .s_social_media\" +\n                 \":has(a:eq(0)[href='/website/social/twitter'])\" +\n                 \":has(a:eq(1)[href='/website/social/linkedin'])\" +\n                 \":has(a:eq(2)[href='/website/social/youtube'])\" +\n                 \":has(a:eq(3)[href='/website/social/instagram'])\" +\n                 \":has(a:eq(4)[href='/website/social/github'])\" +\n                 \":has(a:eq(5)[href='/website/social/facebook'])\" +\n                 \":has(a:eq(6)[href='https://whatever.it/1EdSw9X']:has(i.fa-pencil))\" +\n                 \":has(a:eq(7)[href='https://instagr.am/odoo.official/']:has(i.fa-instagram))\",\n        run: () => {}, // This is a check.\n    },\n    {\n        content: 'Change url of the DB instagram link',\n        trigger: 'we-list table input:eq(3)',\n        run: 'text https://instagram.com/odoo.official/',\n    },\n    {\n        content: 'Save',\n        trigger: 'button[data-action=save]',\n        run: function () {\n            // We need this 'setTimeout' to ensure that the 'change' event of\n            // the input has enough time to be executed. Without it, the click\n            // on the save button takes priority, and the 'change' event is not\n            // executed (see the '_onListItemChange' function of the 'we-list'\n            // widget).\"\n            setTimeout(() => {\n                this.$anchor[0].click();\n            }, 500);\n        },\n    },\n    {\n        content: \"Wait until save's calls are finished\",\n        trigger: \"iframe body:not(.editor_enable)\",\n        run: function () {}, // it's a check\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    wTourUtils.clickOnSnippet({\n        id: 's_social_media',\n        name: 'Social Media',\n    }),\n    {\n        content: \"Check if we can still change custom icons\",\n        trigger: 'iframe .s_social_media a[href=\"https://whatever.it/1EdSw9X\"] i.fa-pencil',\n        run: 'dblclick',\n    },\n    {\n        content: \"Select a new icon\",\n        trigger: '.o_select_media_dialog .fa-heart',\n    },\n    {\n        content: \"Check if the result is correct after setting the icon\",\n        trigger: \"iframe .s_social_media\" +\n                 \":has(a:eq(0)[href='/website/social/twitter'])\" +\n                 \":has(a:eq(1)[href='/website/social/linkedin'])\" +\n                 \":has(a:eq(2)[href='/website/social/youtube'])\" +\n                 \":has(a:eq(3)[href='/website/social/instagram'])\" +\n                 \":has(a:eq(4)[href='/website/social/github'])\" +\n                 \":has(a:eq(5)[href='/website/social/facebook'])\" +\n                 \":has(a:eq(6)[href='https://whatever.it/1EdSw9X']:has(i.fa-heart))\" +\n                 \":has(a:eq(7)[href='https://instagr.am/odoo.official/']:has(i.fa-instagram))\",\n        run: () => {}, // This is a check.\n    },\n    // Create a social network but replace its icon by an image before setting\n    // the link (`replaceIcon` parameter set to `true`).\n    ...addNewSocialNetwork(8, 8, \"https://google.com\", true),\n    // Create a social network after replacing the first icon by an image.\n    ...replaceIconByImage(\"/website/social/twitter\"),\n    ...addNewSocialNetwork(9, 9, \"https://facebook.com\"),\n    {\n        content: \"Check if the result is correct after adding images\",\n        trigger: \"iframe .s_social_media\" +\n                 \":has(a:eq(0)[href='/website/social/twitter']:has(img))\" +\n                 \":has(a:eq(8)[href='https://google.com']:has(img))\" +\n                 \":has(a:eq(9)[href='https://facebook.com']:has(img))\",\n        run: () => {}, // This is a check.\n    },\n    ...wTourUtils.clickOnSave(),\n]);\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\nconst scrollToHeading = function (position) {\n    return {\n        content: `Scroll to h1 number ${position}`,\n        trigger: `iframe h1:eq(${position})`,\n        run: function () {\n            this.$anchor[0].scrollIntoView(true);\n        },\n    };\n};\nconst checkTOCNavBar = function (tocPosition, activeHeaderPosition) {\n    return {\n        content: `Check that the header ${activeHeaderPosition} is active for TOC ${tocPosition}`,\n        trigger: `iframe .s_table_of_content:eq(${tocPosition}) .table_of_content_link:eq(${activeHeaderPosition}).active `,\n        run: () => {}, // This is a check.\n    };\n};\n\nwTourUtils.registerWebsitePreviewTour('snippet_table_of_content', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({id: 's_table_of_content', name: 'Table of Content'}),\n    wTourUtils.dragNDrop({id: 's_table_of_content', name: 'Table of Content'}),\n    // To make sure that the public widgets of the two previous ones started.\n    wTourUtils.dragNDrop({id: 's_banner', name: 'Banner'}),\n    ...wTourUtils.clickOnSave(),\n    checkTOCNavBar(0, 0),\n    checkTOCNavBar(1, 0),\n    scrollToHeading(1),\n    checkTOCNavBar(0, 1),\n    checkTOCNavBar(1, 0),\n    scrollToHeading(2),\n    checkTOCNavBar(1, 0),\n    scrollToHeading(3),\n    checkTOCNavBar(1, 1),\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: \"Click on the first TOC's title\",\n        trigger: 'iframe .s_table_of_content:eq(0) h1',\n    },\n    {\n        content: \"Hide the first TOC on mobile\",\n        trigger: '[data-toggle-device-visibility=\"no_mobile\"]',\n    },\n    {\n        content: \"Click on the second TOC's title\",\n        trigger: 'iframe .s_table_of_content:eq(1) h1',\n    },\n    {\n        content: \"Hide the second TOC on desktop\",\n        trigger: '[data-toggle-device-visibility=\"no_desktop\"]',\n    },\n    ...wTourUtils.clickOnSave(),\n    {\n        content: \"Check that we have the good TOC on desktop\",\n        trigger: 'iframe .s_table_of_content.o_snippet_mobile_invisible',\n        run: () => {\n            if ($(document.querySelector('iframe .s_table_of_content.o_snippet_desktop_invisible'))\n                    .is(':visible')) {\n                console.error('The mobile TOC should not be visible on desktop');\n            }\n        },\n    },\n    {\n        content: \"Toggle the mobile view\",\n        trigger: '.o_mobile_preview',\n    },\n    {\n        content: \"Check that we have the good TOC on mobile\",\n        trigger: 'iframe .s_table_of_content.o_snippet_desktop_invisible',\n        run: () => {\n            if ($(document.querySelector('iframe .s_table_of_content.o_snippet_mobile_invisible'))\n                    .is(':visible')) {\n                console.error('The desktop TOC should not be visible on mobile');\n            }\n        },\n    },\n]);\n", "/** @odoo-module **/\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('snippet_translation', {\n    url: '/',\n    edition: true,\n    test: true,\n}, [\n    wTourUtils.dragNDrop({name: 'Cover'}),\n    {\n        content: \"Check that contact us contain Parseltongue\",\n        trigger: 'iframe .s_cover .btn-primary:contains(\"Contact us in Parseltongue\")',\n        run: () => null, // it's a check\n    },\n    {\n        content: \"Check that the save button contains 'in fu_GB'\",\n        trigger: '.btn[data-action=\"save\"]:contains(\"Save in fu_GB\")',\n        run: () => null, // it's a check\n    },\n]);\nwTourUtils.registerWebsitePreviewTour('snippet_translation_changing_lang', {\n    url: '/',\n    test: true,\n}, [\n    {\n        content: \"Change language to Parseltongue\",\n        trigger: 'iframe .js_language_selector .btn',\n    },\n    {\n        content: \"Change the language to English\",\n        trigger: 'iframe .js_language_selector .js_change_lang[data-url_code=\"en\"]',\n    },\n    {\n        content: \"Enable translation\",\n        trigger: '.o_translate_website_container a',\n    },\n    {\n        content: \"Close the dialog\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    ...wTourUtils.clickOnSave(),\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    wTourUtils.dragNDrop({name: 'Cover'}),\n    {\n        content: \"Check that contact us contain Parseltongue\",\n        trigger: 'iframe .s_cover .btn-primary:contains(\"Contact us in Parseltongue\")',\n        run: () => null, // it's a check\n    },\n]);\n", "odoo.define(\"website.tour.snippet_version\", function (require) {\n\"use strict\";\n\nconst wTourUtils = require('website.tour_utils');\n\nwTourUtils.registerWebsitePreviewTour(\"snippet_version\", {\n    edition: true,\n    url: \"/\",\n    test: true,\n}, [{\n    content: \"Drop s_test_snip snippet\",\n    trigger: '#oe_snippets .oe_snippet:has(.s_test_snip) .oe_snippet_thumbnail',\n    run: \"drag_and_drop iframe #wrap\",\n}, {\n    content: \"Drop s_text_image snippet\",\n    trigger: '#oe_snippets .oe_snippet:has(.s_text_image) .oe_snippet_thumbnail:not(.o_we_already_dragging)',\n    run: \"drag_and_drop iframe #wrap\",\n}, {\n    content: \"Test t-snippet and t-snippet-call: snippets have data-snippet set\",\n    trigger: '#oe_snippets .o_panel_body > .oe_snippet.ui-draggable',\n    run: function () {\n        // Tests done here as all these are not visible on the page\n        const draggableSnippets = document.querySelectorAll('#oe_snippets .o_panel_body > .oe_snippet.ui-draggable > :nth-child(2)');\n        if (![...draggableSnippets].every(el => el.dataset.snippet)) {\n            console.error(\"error Some t-snippet are missing their template name\");\n        }\n        if (!document.querySelector('#oe_snippets [data-snippet=\"s_test_snip\"] [data-snippet=\"s_share\"]')) {\n            console.error(\"error s_share t-called inside s_test_snip is missing template name\");\n        }\n        if (!document.querySelector('iframe:not(.o_ignore_in_tour)').contentDocument.querySelector('#wrap [data-snippet=\"s_test_snip\"] [data-snippet=\"s_share\"]')) {\n            console.error(\"error Dropped a s_test_snip snippet but missing s_share template name in it\");\n        }\n    },\n},\n    ...wTourUtils.clickOnSave(),\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n{\n    content: \"Modify the version of snippets\",\n    trigger: '#oe_snippets .o_panel_body > .oe_snippet',\n    run: function () {\n        document.querySelector('#oe_snippets .oe_snippet > [data-snippet=\"s_test_snip\"]').dataset.vjs = '999';\n        document.querySelector('#oe_snippets .oe_snippet > [data-snippet=\"s_share\"]').dataset.vcss = '999';\n        document.querySelector('#oe_snippets .oe_snippet > [data-snippet=\"s_text_image\"]').dataset.vxml = '999';\n    },\n}, {\n    content: \"Edit s_test_snip\",\n    trigger: 'iframe #wrap.o_editable .s_test_snip',\n}, {\n    content: \"Edit text_image\",\n    extra_trigger: 'we-customizeblock-options:contains(Test snip) .snippet-option-VersionControl > we-alert',\n    trigger: 'iframe #wrap.o_editable .s_text_image',\n}, {\n    content: \"Edit s_share\",\n    extra_trigger: 'we-customizeblock-options:contains(Text - Image) .snippet-option-VersionControl  > we-alert',\n    trigger: 'iframe #wrap.o_editable .s_share',\n}, {\n    content: \"s_share is outdated\",\n    extra_trigger: 'we-customizeblock-options:contains(Share) .snippet-option-VersionControl > we-alert',\n    trigger: 'iframe body',\n}]);\n});\n", "odoo.define(\"website.tour.snippets_all_drag_and_drop\", async function (require) {\n\"use strict\";\n\nconst { WysiwygAdapterComponent } = require('@website/components/wysiwyg_adapter/wysiwyg_adapter');\nconst websiteTourUtils = require('website.tour_utils');\nconst { patch, unpatch } = require('web.utils');\n\nconst patchWysiwygAdapter = () => patch(WysiwygAdapterComponent.prototype, 'snippets_all_drag_and_drop.wysiwyg_adapter', {\n    _trigger_up(ev) {\n        this._super(...arguments);\n        if (ev.name === 'snippet_removed') {\n            $('body').attr('test-dd-snippet-removed', true);\n        }\n    }\n});\n\nconst unpatchWysiwygAdapter = () => unpatch(WysiwygAdapterComponent.prototype, 'snippets_all_drag_and_drop.wysiwyg_adapter');\n\nconst tour = require(\"web_tour.tour\");\n\nlet snippetsNames = (new URL(document.location.href)).searchParams.get('snippets_names') || '';\n// When this test is loaded in the backend, the search params aren't as easy to\n// read as before. Little trickery to make this test run.\nconst searchParams = new URLSearchParams(window.location.href.split('#')[1]).get('path');\nif (searchParams) {\n    snippetsNames = new URLSearchParams(searchParams.split('/')[1]).get('snippets_names') || '';\n    snippetsNames = snippetsNames.split(',');\n}\nlet steps = [];\nlet n = 0;\nfor (const snippet of snippetsNames) {\n    n++;\n    const snippetSteps = [{\n        content: `Drop ${snippet} snippet [${n}/${snippetsNames.length}]`,\n        trigger: `#oe_snippets .oe_snippet:has( > [data-snippet='${snippet}']) .oe_snippet_thumbnail`,\n        run: \"drag_and_drop iframe #wrap\",\n    }, {\n        content: `Edit ${snippet} snippet`,\n        trigger: `iframe #wrap.o_editable [data-snippet='${snippet}']`,\n    }, {\n        content: `check ${snippet} setting are loaded, wait panel is visible`,\n        trigger: \".o_we_customize_panel\",\n        run: function () {}, // it's a check\n    }, {\n        content: `Remove the ${snippet} snippet`, // Avoid bad perf if many snippets\n        trigger: \"we-button.oe_snippet_remove:last\"\n    }, {\n        content: `click on 'BLOCKS' tab (${snippet})`,\n        extra_trigger: 'body[test-dd-snippet-removed]',\n        trigger: \".o_we_add_snippet_btn\",\n        run: function (actions) {\n            $('body').removeAttr('test-dd-snippet-removed');\n            actions.auto();\n        },\n    }];\n\n    if (snippet === 's_google_map') {\n        snippetSteps.splice(1, 3, {\n            content: 'Close API Key popup',\n            trigger: \"iframe .modal-footer .btn-secondary\",\n        });\n    } else if (['s_popup', 's_newsletter_subscribe_popup'].includes(snippet)) {\n        snippetSteps[2]['in_modal'] = false;\n        snippetSteps.splice(3, 2, {\n            content: `Hide the ${snippet} popup`,\n            trigger: \"iframe .s_popup_close\",\n        }, {\n            content: `Make sure ${snippet} is hidden`,\n            trigger: \"iframe body:not(.modal-open)\",\n        });\n    }\n    steps = steps.concat(snippetSteps);\n}\n\ntour.register(\"snippets_all_drag_and_drop\", {\n    test: true,\n    // To run the tour locally, you need to insert the URL sent by the python\n    // tour here. There is currently an issue with tours which don't have an URL\n    // url: '/?enable_editor=1&snippets_names=s_showcase,s_numbers,s_...',\n}, [\n    ...websiteTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: \"Ensure snippets are actually passed at the test.\",\n        trigger: \"body\",\n        run: function () {\n            // safety check, otherwise the test might \"break\" one day and\n            // receive no steps. The test would then not test anything anymore\n            // without us noticing it.\n            if (steps.length < 220) {\n                console.error(`This test is not behaving as it should, got only ${steps.length} steps.`);\n            }\n            patchWysiwygAdapter();\n        },\n    },\n    // This first step is needed as it will be used later for inner snippets\n    // Without this, it will dropped inside the footer and will need an extra\n    // selector.\n    {\n        content: \"Drop s_text_image snippet\",\n        trigger: \"#oe_snippets .oe_snippet:has( > [data-snippet='s_text_image']) .oe_snippet_thumbnail\",\n        run: \"drag_and_drop iframe #wrap\"\n    },\n    {\n        content: \"Edit s_text_image snippet\",\n        trigger: \"iframe #wrap.o_editable [data-snippet='s_text_image']\"\n    },\n    {\n        content: \"check setting are loaded, wait panel is visible\",\n        trigger: \".o_we_customize_panel\"\n    },\n    // We hide the header before starting to drop snippets. This prevents\n    // situations where the header's drop zones overlap with those of the #wrap,\n    // ensuring that a snippet is dropped in the #wrap as expected instead of\n    // the header.\n    websiteTourUtils.clickOnSnippet({id: \"o_header_standard\", name: \"Header\"}),\n    websiteTourUtils.changeOption(\"TopMenuVisibility\", \"we-select:has([data-visibility]) we-toggler\"),\n    websiteTourUtils.changeOption(\"TopMenuVisibility\", 'we-button[data-visibility=\"hidden\"]'),\n    {\n        content: \"click on 'BLOCKS' tab\",\n        trigger: \".o_we_add_snippet_btn\"\n    },\n].concat(steps).concat([\n    {\n        content: \"Remove wysiwyg patch\",\n        trigger: \"body\",\n        run: () => unpatchWysiwygAdapter(),\n    }\n]),\n);\n});\n", "odoo.define('website.tour.specific_website_editor', function (require) {\n'use strict';\n\nconst tour = require('web_tour.tour');\nconst wTourUtils = require(\"website.tour_utils\");\n\nwTourUtils.registerWebsitePreviewTour(\"generic_website_editor\", {\n    test: true,\n    edition: true,\n}, [{\n    trigger: 'iframe body:not([data-hello=\"world\"])',\n    content: 'Check that the editor DOM matches its website-generic features',\n    run: function () {}, // Simple check\n}]);\n\n// Good practice would have been to use `wTourUtils.registerWebsitePreviewTour`\n// for this tour with `edition: true` and remove the first step to enter edit\n// mode. Unfortunately this breaks the page and therefore the test fails for\n// unknown reason.\ntour.register('specific_website_editor', {\n    test: true,\n}, [\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n    trigger: 'iframe body[data-hello=\"world\"]',\n    content: 'Check that the editor DOM matches its website-specific features',\n    run: function () {}, // Simple check\n}]);\n});\n", "/** @odoo-module **/\n\nimport wTourUtils from 'website.tour_utils';\n\nconst countdownSnippet = {\n    name: 'Countdown',\n    id: 's_countdown',\n};\nconst dragNDropOutOfFooter = wTourUtils.dragNDrop(countdownSnippet);\ndragNDropOutOfFooter.run = 'drag_and_drop iframe #wrapwrap #wrap';\n\nwTourUtils.registerWebsitePreviewTour('website_start_cloned_snippet', {\n    edition: true,\n    test: true,\n    url: '/',\n}, [\n    dragNDropOutOfFooter,\n    wTourUtils.clickOnSnippet(countdownSnippet),\n    {\n        content: 'Click on clone snippet',\n        trigger: '.oe_snippet_clone',\n    },\n    {\n        content: 'Check that the cloned snippet has a canvas and that something has been drawn inside of it',\n        trigger: 'iframe .s_countdown:eq(1) canvas',\n        run: function () {\n            // Check that at least one bit has been drawn in the canvas\n            if (!this.$anchor[0].getContext('2d').getImageData(0, 0, 1000, 1000).data.includes(1)) {\n                console.error('The cloned snippet should have been started');\n            }\n        },\n    },\n]);\n", "/** @odoo-module */\n\nimport wTourUtils from \"website.tour_utils\";\n\nwTourUtils.registerWebsitePreviewTour(\"text_animations\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: \"s_cover\",\n        name: \"Cover\",\n    }),\n    {\n        content: \"Click on the snippet title\",\n        trigger: \"iframe .s_cover h1 > font\",\n        run: \"dblclick\", // Make sure the title is selected.\n    },\n    {\n        content: \"Click on the 'Animate Text' button to activate the option\",\n        trigger: \"div.o_we_animate_text\",\n    },\n    {\n        content: \"Check that the animation was applied\",\n        trigger: \"iframe .s_cover h1 span.o_animated_text\",\n        run: () => null, // it's a check\n    },\n    {\n        content: \"Click on the 'Animate Text' button\",\n        trigger: \"div.o_we_animate_text\",\n    },\n    {\n        content: \"Check that the animation was disabled for the title\",\n        trigger: \"iframe .s_cover:not(:has(.o_animated_text))\",\n        run: () => null, // it's a check\n    },\n    {\n        content: \"Try to apply the text animation again\",\n        trigger: \"div.o_we_animate_text\",\n    },\n    {\n        content: \"Check that the animation was applied\",\n        trigger: \"iframe .s_cover:has(span.o_animated_text)\",\n        run: () => null, // it's a check\n    },\n]);\n", "/** @odoo-module **/\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('translate_menu_name', {\n    url: '/pa_GB',\n    test: true,\n    edition: false,\n}, [\n    {\n        content: \"activate translate mode\",\n        trigger: '.o_translate_website_container a',\n    },\n    {\n        content: \"Close the dialog\",\n        trigger: '.modal-footer .btn-primary',\n    },\n    wTourUtils.clickOnExtraMenuItem({}, true),\n    {\n        content: \"translate the menu entry\",\n        trigger: 'iframe a[href=\"/englishURL\"] span',\n        run: 'text value pa-GB',\n    },\n    ...wTourUtils.clickOnSave(),\n]);\n", "odoo.define(\"website.tour.unsplash_beacon\", function (require) {\n\"use strict\";\n\nconst tour = require(\"web_tour.tour\");\n\ntour.register(\"test_unsplash_beacon\", {\n    test: true,\n    url: \"/\",\n}, [{\n    content: \"Verify whether beacon was sent.\",\n    trigger: 'img[data-beacon=\"sent\"]',\n    run: () => {}, // This is a check.\n}]);\n});\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\ntour.register('website_backend_menus_redirect', {\n    test: true,\n    url: '/',\n},\n[{\n    content: 'Need at least a step so the tour is not failing in enterprise',\n    trigger: 'body',\n    edition: 'enterprise',\n}, {\n    content: 'Make frontend to backend menus appears',\n    trigger: 'body:has(#wrap)',\n    run: function () {\n        // The dropdown is hidden behind an SVG on hover animation.\n        this.$anchor.find('.o_frontend_to_backend_apps_menu').addClass('show');\n    },\n    edition: 'community',\n}, {\n    content: 'Click on Test Root backend menu',\n    trigger: '.o_frontend_to_backend_apps_menu a:contains(\"Test Root\")',\n    edition: 'community',\n}, {\n    content: 'Check that we landed on the apps page (Apps), and not the Home Action page (Settings)',\n    trigger: '.oe_module_vignette',\n    edition: 'community',\n},\n]);\n", "/** @odoo-module **/\n\nimport wTourUtils from 'website.tour_utils';\n\nconst cover = {\n    id: 's_cover',\n    name: 'Cover',\n};\n\nwTourUtils.registerWebsitePreviewTour('website_click_tour', {\n    test: true,\n    url: '/',\n}, [\n    {\n        content: \"trigger a page navigation\",\n        trigger: 'iframe a[href=\"/contactus\"]',\n    },\n    {\n        content: \"wait for the page to be loaded\",\n        trigger: '.o_website_preview[data-view-xmlid=\"website.contactus\"]',\n        run: () => null, // it's a check\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: \"click on a link that would trigger navigation\",\n        trigger: 'iframe a[href=\"/\"]',\n    },\n    wTourUtils.goBackToBlocks(),\n    wTourUtils.dragNDrop(cover),\n    wTourUtils.clickOnSnippet(cover),\n    ...wTourUtils.clickOnSave(),\n    {\n        content: \"wait for the iframe to be ready\",\n        trigger: 'iframe body:not(.editor_enable)',\n        run: () => null, // it's a check\n    }\n]);\n", "odoo.define('website.tour.form_editor', function (require) {\n    'use strict';\n\n    const wTourUtils = require(\"website.tour_utils\");\n\n    // Visibility possible values:\n    const VISIBLE = 'Always Visible';\n    const HIDDEN = 'Hidden';\n    const CONDITIONALVISIBILITY = 'Visible only if';\n\n    const NB_NON_ESSENTIAL_REQUIRED_FIELDS_IN_DEFAULT_FORM = 2;\n    const ESSENTIAL_FIELDS_VALID_DATA_FOR_DEFAULT_FORM = [\n        {\n            name: 'email_from',\n            value: 'admin@odoo.com',\n        },\n        {\n            name: 'subject',\n            value: 'Hello, world!',\n        }\n    ];\n    const essentialFieldsForDefaultFormFillInSteps = [];\n    for (const data of ESSENTIAL_FIELDS_VALID_DATA_FOR_DEFAULT_FORM) {\n        essentialFieldsForDefaultFormFillInSteps.push({\n            content: \"Enter data in model-required field\",\n            trigger: `iframe .s_website_form_model_required .s_website_form_input[name=\"${data.name}\"]`,\n            run: `text ${data.value}`,\n        });\n    }\n\n    // TODO: in master only keep the conversion of the double quotes character.\n    // Replace all `\"` character by `&quot;`, all `'` character by `&apos;` and\n    // all \"`\" character by `&lsquo;`.\n    const getQuotesEncodedName = function (name) {\n            return name.replaceAll(/\"/g, character => `&quot;`)\n                       .replaceAll(/'/g, character => `&apos;`)\n                       .replaceAll(/`/g, character => `&lsquo;`)\n                       .replaceAll(\"\\\\\", character => `&bsol;`);\n    };\n\n    const triggerFieldByLabel = (label) => {\n        return `.s_website_form_field.s_website_form_custom:has(label:contains(\"${label}\"))`;\n    };\n    const selectFieldByLabel = (label) => {\n        return [{\n            content: `Select field \"${label}\"`,\n            trigger: \"iframe \" + triggerFieldByLabel(label),\n        }];\n    };\n    const selectButtonByText = function (text) {\n        return [{\n            content: \"Open the select\",\n            trigger: `we-select:has(we-button:contains(\"${text}\")) we-toggler`,\n        },\n        {\n            content: \"Click on the option\",\n            trigger: `we-select we-button:contains(\"${text}\")`,\n        }];\n    };\n    const selectButtonByData = function (data) {\n        return [{\n            content: \"Open the select\",\n            trigger: `we-select:has(we-button[${data}]) we-toggler`,\n        }, {\n            content: \"Click on the option\",\n            trigger: `we-select we-button[${data}]`,\n        }];\n    };\n    const addField = function (name, type, label, required, isCustom,\n                               display = {visibility: VISIBLE, condition: \"\"}) {\n        const data = isCustom ? `data-custom-field=\"${name}\"` : `data-existing-field=\"${name}\"`;\n        const ret = [{\n            content: \"Select form\",\n            extra_trigger: 'iframe .s_website_form_field',\n            trigger: 'iframe section.s_website_form',\n        }, {\n            content: \"Add field\",\n            trigger: 'we-button[data-add-field]',\n        },\n        ...selectButtonByData(data),\n        {\n            content: \"Wait for field to load\",\n            trigger: `iframe .s_website_form_field[data-type=\"${name}\"], .s_website_form_input[name=\"${name}\"]`, //custom or existing field\n            run: function () {},\n        },\n        ...selectButtonByText(display.visibility),\n    ];\n        let testText = 'iframe .s_website_form_field';\n        if (display.condition) {\n            ret.push({\n                content: \"Set the visibility condition\",\n                trigger: 'we-input[data-attribute-name=\"visibilityCondition\"] input',\n                run: `text ${display.condition}`,\n            });\n        }\n        if (required) {\n            testText += '.s_website_form_required';\n            ret.push({\n                content: \"Mark the field as required\",\n                trigger: 'we-button[data-name=\"required_opt\"] we-checkbox',\n            });\n        }\n        if (label) {\n            testText += `:has(label:contains(${label}))`;\n            ret.push({\n                content: \"Change the label text\",\n                trigger: 'we-input[data-set-label-text] input',\n                run: `text ${label}`,\n            });\n        }\n        if (type !== 'checkbox' && type !== 'radio' && type !== 'select') {\n            let inputType = type === 'textarea' ? type : `input[type=\"${type}\"]`;\n            const nameAttribute = isCustom && label ? getQuotesEncodedName(label) : name;\n            testText += `:has(${inputType}[name=\"${nameAttribute}\"]${required ? \"[required]\" : \"\"})`;\n            // Because 'testText' will be used as selector to verify the content\n            // of the label, the `\\` character needs to be escaped.\n            testText = testText.replaceAll(\"\\\\\", \"\\\\\\\\\");\n        }\n        ret.push({\n            content: \"Check the resulting field\",\n            trigger: testText,\n            run: function () {},\n        });\n        return ret;\n    };\n    const addCustomField = function (name, type, label, required, display) {\n        return addField(name, type, label, required, true, display);\n    };\n    const addExistingField = function (name, type, label, required, display) {\n        return addField(name, type, label, required, false, display);\n    };\n\n    wTourUtils.registerWebsitePreviewTour(\"website_form_editor_tour\", {\n        url: '/',\n        edition: true,\n        test: true,\n    }, [\n        // Drop a form builder snippet and configure it\n        {\n            content: \"Drop the form snippet\",\n            trigger: '#oe_snippets .oe_snippet:has(.s_website_form) .oe_snippet_thumbnail',\n            run: 'drag_and_drop iframe #wrap',\n        }, {\n            content: \"Select form by clicking on an input field\",\n            extra_trigger: 'iframe .s_website_form_field',\n            trigger: 'iframe section.s_website_form input',\n        }, {\n            content: \"Verify that the form editor appeared\",\n            trigger: '.o_we_customize_panel .snippet-option-WebsiteFormEditor',\n            run: () => null,\n        }, {\n            content: \"Go back to blocks to unselect form\",\n            trigger: '.o_we_add_snippet_btn',\n        }, {\n            content: \"Select form by clicking on a text area\",\n            extra_trigger: 'iframe .s_website_form_field',\n            trigger: 'iframe section.s_website_form textarea',\n        }, {\n            content: \"Verify that the form editor appeared\",\n            trigger: '.o_we_customize_panel .snippet-option-WebsiteFormEditor',\n            run: () => null,\n        }, {\n            content: \"Rename the field label\",\n            trigger: 'we-input[data-set-label-text] input',\n            run: \"text Renamed\",\n        }, {\n            content: \"Leave the rename options\",\n            trigger: 'we-input[data-set-label-text] input',\n            run: \"text_blur\",\n        }, {\n            content: \"Go back to blocks to unselect form\",\n            trigger: '.o_we_add_snippet_btn',\n        }, {\n            content: \"Select form itself (not a specific field)\",\n            extra_trigger: 'iframe .s_website_form_field',\n            trigger: 'iframe section.s_website_form',\n        },\n        ...selectButtonByText('Send an E-mail'),\n        {\n            content: \"Form has a model name\",\n            trigger: 'iframe section.s_website_form form[data-model_name=\"mail.mail\"]',\n        }, {\n            content: 'Edit the Phone Number field',\n            trigger: 'iframe input[name=\"phone\"]',\n        }, {\n            content: 'Change the label position of the phone field',\n            trigger: 'we-button[data-select-label-position=\"right\"]',\n        },\n        ...addCustomField(\"char\", \"text\", \"Conditional Visibility Check 1\", false),\n        ...addCustomField(\"char\", \"text\", \"Conditional Visibility Check 2\", false),\n        ...selectButtonByData(\"data-set-visibility='conditional'\"),\n        ...selectButtonByData(\"data-set-visibility-dependency='Conditional Visibility Check 1'\"),\n        ...addCustomField(\"char\", \"text\", \"Conditional Visibility Check 2\", false),\n        ...selectFieldByLabel(\"Conditional Visibility Check 1\"),\n        ...selectButtonByData(\"data-set-visibility='conditional'\"),\n        {\n            content: \"Check that 'Conditional Visibility Check 2' is not in the list of the visibility selector of Conditional Visibility Check 1\",\n            trigger: \"we-select[data-name='hidden_condition_opt']:not(:has(we-button[data-set-visibility-dependency='Conditional Visibility Check 2']))\",\n            run: () => null,\n        },\n        ...addCustomField(\"char\", \"text\", \"Conditional Visibility Check 3\", false),\n        ...addCustomField(\"char\", \"text\", \"Conditional Visibility Check 4\", false),\n        ...selectButtonByData(\"data-set-visibility='conditional'\"),\n        ...selectButtonByData(\"data-set-visibility-dependency='Conditional Visibility Check 3'\"),\n        {\n            content: \"Change the label of 'Conditional Visibility Check 4' and change it to 'Conditional Visibility Check 3'\",\n            trigger: 'we-input[data-set-label-text] input',\n            run: \"text Conditional Visibility Check 3\",\n        },\n        {\n            content: \"Check that the conditional visibility of the renamed field is removed\",\n            trigger: \"we-customizeblock-option.snippet-option-WebsiteFieldEditor we-select:contains('Visibility'):has(we-toggler:contains('Always Visible'))\",\n            run: () => null,\n        },\n        ...addCustomField(\"char\", \"text\", \"Conditional Visibility Check 5\", false),\n        ...addCustomField(\"char\", \"text\", \"Conditional Visibility Check 6\", false),\n        ...selectButtonByData(\"data-set-visibility='conditional'\"),\n        {\n            content: \"Change the label of 'Conditional Visibility Check 6' and change it to 'Conditional Visibility Check 5'\",\n            trigger: 'we-input[data-set-label-text] input',\n            run: \"text Conditional Visibility Check 5\",\n        },\n        {\n            content: \"Check that 'Conditional Visibility Check 5' is not in the list of the renamed field\",\n            trigger: \"we-customizeblock-option.snippet-option-WebsiteFieldEditor we-select[data-name='hidden_condition_opt']:not(:has(we-button:contains('Conditional Visibility Check 5')))\",\n            run: () => null,\n        },\n        ...addExistingField('email_cc', 'text', 'Test conditional visibility', false, {visibility: CONDITIONALVISIBILITY, condition: 'odoo'}),\n        // Check that visibility condition is deleted on dependency type change.\n        ...addCustomField(\"char\", \"text\", \"dependent\", false, {visibility: CONDITIONALVISIBILITY}),\n        ...addCustomField(\"selection\", \"radio\", \"dependency\", false),\n        ...selectFieldByLabel(\"dependent\"),\n        ...selectButtonByData('data-set-visibility-dependency=\"dependency\"'),\n        ...selectFieldByLabel(\"dependency\"),\n        ...selectButtonByData('data-custom-field=\"char\"'),\n        ...selectFieldByLabel(\"dependent\"),\n        {\n            content: \"Open the select\",\n            trigger: 'we-select:has(we-button[data-set-visibility=\"visible\"]) we-toggler',\n        },\n        {\n            content: \"Check that the field no longer has conditional visibility\",\n            trigger: \"we-select we-button[data-set-visibility='visible'].active\",\n            run: () => null,\n        },\n\n        ...addExistingField('date', 'text', 'Test Date', true),\n\n        ...addExistingField('record_name', 'text', 'Awesome Label', false, {visibility: HIDDEN}),\n\n        ...addExistingField('body_html', 'textarea', 'Your Message', true),\n\n        ...addExistingField('recipient_ids', 'checkbox'),\n\n        ...addCustomField('one2many', 'checkbox', 'Products', true),\n        {\n            content: \"Change Option 1 label\",\n            trigger: 'we-list table input:eq(0)',\n            run: 'text Iphone',\n        }, {\n            content: \"Change Option 2 label\",\n            trigger: 'we-list table input:eq(1)',\n            run: 'text Galaxy S',\n        }, {\n            content: \"Change first Option 3 label\",\n            trigger: 'we-list table input:eq(2)',\n            run: 'text Xperia',\n        }, {\n            content: \"Click on Add new Checkbox\",\n            trigger: 'we-list we-button.o_we_list_add_optional',\n        }, {\n            content: \"Change added Option label\",\n            trigger: 'we-list table input:eq(3)',\n            run: 'text Wiko Stairway',\n        }, {\n            content: \"Check the resulting field\",\n            trigger: \"iframe .s_website_form_field.s_website_form_custom.s_website_form_required\" +\n                        \":has(.s_website_form_multiple[data-display='horizontal'])\" +\n                        \":has(.checkbox:has(label:contains('Iphone')):has(input[type='checkbox'][required]))\" +\n                        \":has(.checkbox:has(label:contains('Galaxy S')):has(input[type='checkbox'][required]))\" +\n                        \":has(.checkbox:has(label:contains('Xperia')):has(input[type='checkbox'][required]))\" +\n                        \":has(.checkbox:has(label:contains('Wiko Stairway')):has(input[type='checkbox'][required]))\",\n            run: function () {},\n        },\n        ...selectButtonByData('data-multi-checkbox-display=\"vertical\"'),\n        {\n            content: \"Check the resulting field\",\n            trigger: \"iframe .s_website_form_field.s_website_form_custom.s_website_form_required\" +\n                        \":has(.s_website_form_multiple[data-display='vertical'])\" +\n                        \":has(.checkbox:has(label:contains('Iphone')):has(input[type='checkbox'][required]))\" +\n                        \":has(.checkbox:has(label:contains('Galaxy S')):has(input[type='checkbox'][required]))\" +\n                        \":has(.checkbox:has(label:contains('Xperia')):has(input[type='checkbox'][required]))\" +\n                        \":has(.checkbox:has(label:contains('Wiko Stairway')):has(input[type='checkbox'][required]))\",\n            run: function () {},\n        },\n        // Check conditional visibility for the relational fields\n        ...selectButtonByData(\"data-set-visibility='conditional'\"),\n        ...selectButtonByData(\"data-set-visibility-dependency='recipient_ids'\"),\n        ...selectButtonByText(\"Is not equal to\"),\n        ...selectButtonByText(\"Mitchell Admin\"),\n        ...wTourUtils.clickOnSave(),\n        {\n            content: \"Check 'products' field is visible.\",\n            trigger: `iframe .s_website_form:has(${triggerFieldByLabel(\"Products\")}:visible)`,\n            run: () => {}, // it's a check\n        }, {\n            content: \"choose the option 'Mitchell Admin' of partner.\",\n            trigger: \"iframe .checkbox:has(label:contains('Mitchell Admin')) input[type='checkbox']\",\n        }, {\n            content: \"Check 'products' field is not visible.\",\n            trigger: \"iframe .s_website_form\" +`:has(${triggerFieldByLabel(\"Products\")}:not(:visible))`,\n            run: () => {}, // it's a check\n        },\n        ...wTourUtils.clickOnEditAndWaitEditMode(),\n\n        ...addCustomField('selection', 'radio', 'Service', true),\n        {\n            content: \"Change Option 1 label\",\n            trigger: 'we-list table input:eq(0)',\n            run: 'text After-sales Service',\n        }, {\n            content: \"Change Option 2 label\",\n            trigger: 'we-list table input:eq(1)',\n            run: 'text Invoicing Service',\n        }, {\n            content: \"Change first Option 3 label\",\n            trigger: 'we-list table input:eq(2)',\n            run: 'text Development Service',\n        }, {\n            content: \"Click on Add new Checkbox\",\n            trigger: 'we-list we-button.o_we_list_add_optional',\n        }, {\n            content: \"Change last Option label\",\n            trigger: 'we-list table input:eq(3)',\n            run: 'text Management Service',\n        }, {\n            content: \"Mark the field as not required\",\n            extra_trigger: \"we-list table input:eq(3)[name='Management Service']\",\n            trigger: 'we-button[data-name=\"required_opt\"] we-checkbox',\n        }, {\n            content: \"Check the resulting field\",\n            trigger: \"iframe .s_website_form_field.s_website_form_custom:not(.s_website_form_required)\" +\n                        \":has(.radio:has(label:contains('After-sales Service')):has(input[type='radio']:not([required])))\" +\n                        \":has(.radio:has(label:contains('Invoicing Service')):has(input[type='radio']:not([required])))\" +\n                        \":has(.radio:has(label:contains('Development Service')):has(input[type='radio']:not([required])))\" +\n                        \":has(.radio:has(label:contains('Management Service')):has(input[type='radio']:not([required])))\",\n            run: function () {},\n        },\n\n        ...addCustomField('many2one', 'select', 'State', true),\n\n        // Customize custom selection field\n        {\n            content: \"Change Option 1 Label\",\n            trigger: 'we-list table input:eq(0)',\n            run: 'text Germany',\n        }, {\n            content: \"Change Option 2 Label\",\n            trigger: 'we-list table input:eq(1)',\n            run: 'text Belgium',\n        }, {\n            content: \"Change first Option 3 label\",\n            trigger: 'we-list table input:eq(2)',\n            run: 'text France',\n        }, {\n            content: \"Click on Add new Checkbox\",\n            trigger: 'we-list we-button.o_we_list_add_optional',\n        }, {\n            content: \"Change last Option label\",\n            trigger: 'we-list table input:eq(3)',\n            run: 'text Canada',\n        }, {\n            content: \"Remove Germany Option\",\n            trigger: '.o_we_select_remove_option:eq(0)',\n        }, {\n            content: \"Click on Add new Checkbox\",\n            trigger: 'we-list we-button.o_we_list_add_optional',\n        }, {\n            content: \"Change last option label with a number\",\n            trigger: 'we-list table input:eq(3)',\n            run: 'text 44 - UK',\n        }, {\n            content: \"Check that the input value is the full option value\",\n            trigger: \"we-list table input:eq(3)[name='44 - UK']\",\n            run: () => {\n                const addedOptionEl = document.querySelector('iframe.o_iframe').contentDocument.querySelector('.s_website_form_field select option[value=\"44 - UK\"]');\n                if (!addedOptionEl) {\n                    console.error('The number option was not correctly added');\n                }\n            },\n        }, {\n            content: \"Check the resulting snippet\",\n            trigger: \"iframe .s_website_form_field.s_website_form_custom.s_website_form_required\" +\n                        \":has(label:contains('State'))\" +\n                        \":has(select[required]:hidden)\" +\n                        \":has(.s_website_form_select_item:contains('Belgium'))\" +\n                        \":has(.s_website_form_select_item:contains('France'))\" +\n                        \":has(.s_website_form_select_item:contains('Canada'))\" +\n                        \":has(.s_website_form_select_item:contains('44 - UK'))\" +\n                        \":not(:has(.s_website_form_select_item:contains('Germany')))\",\n            run: function () {},\n        },\n\n        ...addExistingField('attachment_ids', 'file', 'Invoice Scan'),\n\n        {\n            content: \"Insure the history step of the editor is not checking for unbreakable\",\n            trigger: 'iframe #wrapwrap',\n            run: () => {\n                const wysiwyg = $('iframe:not(.o_ignore_in_tour)').contents().find('#wrapwrap').data('wysiwyg');\n                wysiwyg.odooEditor.historyStep(true);\n            },\n        },\n        // Edit the submit button using linkDialog.\n        {\n            content: \"Click submit button to show edit popover\",\n            trigger: 'iframe .s_website_form_send',\n        }, {\n            content: \"Click on Edit Link in Popover\",\n            trigger: 'iframe .o_edit_menu_popover .o_we_edit_link',\n        }, {\n            content: \"Check that no URL field is suggested\",\n            trigger: '#toolbar:has(#url_row:hidden)',\n            run: () => null,\n        }, {\n            content: \"Change button's style\",\n            trigger: '.dropdown-toggle[data-bs-original-title=\"Link Style\"]',\n            run: () => {\n                $('.dropdown-toggle[data-bs-original-title=\"Link Style\"]').click();\n                $('[data-value=\"secondary\"]').click();\n                $('[data-bs-original-title=\"Link Shape\"]').click();\n                $('[data-value=\"rounded-circle\"]').click();\n                $('[data-bs-original-title=\"Link Size\"]').click();\n                $('[data-value=\"sm\"]').click();\n            },\n        }, {\n            content: \"Check the resulting button\",\n            trigger: 'iframe .s_website_form_send.btn.btn-sm.btn-secondary.rounded-circle',\n            run: () => null,\n        },\n        // Add a default value to a auto-fillable field.\n        {\n            content: 'Select the name field',\n            trigger: 'iframe .s_website_form_field:eq(0)',\n        }, {\n            content: 'Set a default value to the name field',\n            trigger: 'we-input[data-attribute-name=\"value\"] input',\n            run: 'text John Smith',\n        },\n\n        // Add two fields: the 1st one's visibility is tied to the 2nd one\n        // being set, and the 2nd one is autopopulated. As a result, both\n        // should be visible by default.\n        ...addCustomField(\"char\", \"text\", \"field A\", false, {visibility: CONDITIONALVISIBILITY}),\n        ...addCustomField(\"char\", \"text\", \"field B\", false),\n        ...selectFieldByLabel(\"field A\"),\n        ...selectButtonByData('data-set-visibility-dependency=\"field B\"'),\n        ...selectButtonByData('data-select-data-attribute=\"set\"'),\n        ...selectFieldByLabel(\"field B\"),\n        {\n            content: \"Insert default value\",\n            trigger: 'we-input[data-attribute-name=\"value\"] input',\n            run: \"text prefilled\",\n        },\n        {\n            content: \"Save the page\",\n            trigger: \"button[data-action=save]\",\n        },\n        {\n            content: 'Verify value attribute and property',\n            extra_trigger: 'iframe body:not(.editor_enable)',\n            trigger: 'iframe .s_website_form_field:eq(0) input[value=\"John Smith\"]:propValue(\"Mitchell Admin\")',\n        },\n        {\n            content: 'Verify that phone field is still auto-fillable',\n            trigger: 'iframe .s_website_form_field input[data-fill-with=\"phone\"]:propValue(\"+1 555-555-5555\")',\n        },\n        // Check that the resulting form behavior is correct.\n        {\n            content: \"Check that field B prefill text is set\",\n            trigger: `iframe ${triggerFieldByLabel(\"field B\")}:has(input[value=\"prefilled\"])`,\n            run: () => null, // it's a check\n        }, {\n            content: \"Check that field A is visible\",\n            trigger: `iframe .s_website_form:has(${triggerFieldByLabel(\"field A\")}:visible)`,\n            run: () => null, // it's a check\n        },\n        // A) Check that if we edit again and save again the default value is\n        // not deleted.\n        // B) Add a 3rd field. Field A's visibility is tied to field B being set,\n        // field B is autopopulated and its visibility is tied to field C being\n        // set, and field C is empty.\n        ...wTourUtils.clickOnEditAndWaitEditMode(),\n        {\n            content: 'Edit the form',\n            trigger: 'iframe .s_website_form_field:eq(0) input',\n            run: 'click',\n        },\n        ...addCustomField(\"char\", \"text\", \"field C\", false),\n        ...selectFieldByLabel(\"field B\"),\n        ...selectButtonByText(CONDITIONALVISIBILITY),\n        ...selectButtonByText(CONDITIONALVISIBILITY),\n        {\n            content: \"Check that there is a comparator after two clicks on 'Visible only if'\",\n            trigger: \"[data-attribute-name='visibilityComparator']\",\n            run: function () {\n                if (!this.$anchor[0].querySelector(\"we-button.active\")) {\n                    console.error(\"A default comparator should be set\");\n                }\n            },\n        },\n        ...selectButtonByData('data-set-visibility-dependency=\"field C\"'),\n        ...selectButtonByData('data-select-data-attribute=\"set\"'),\n        {\n            content: 'Save the page',\n            trigger: 'button[data-action=save]',\n            run: 'click',\n        },\n\n        // Check that the resulting form behavior is correct.\n        {\n            content: 'Verify that the value has not been deleted',\n            extra_trigger: 'iframe body:not(.editor_enable)',\n            trigger: 'iframe .s_website_form_field:eq(0) input[value=\"John Smith\"]',\n        }, {\n            content: \"Check that fields A and B are not visible and that field B's prefill text is still set\",\n            trigger: \"iframe .s_website_form\" +\n                `:has(${triggerFieldByLabel(\"field A\")}:not(:visible))` +\n                `:has(${triggerFieldByLabel(\"field B\")}` +\n                `:has(input[value=\"prefilled\"]):not(:visible))`,\n            run: () => null, // it's a check\n        }, {\n            content: \"Type something in field C\",\n            trigger: `iframe ${triggerFieldByLabel(\"field C\")} input`,\n            run: \"text Sesame\",\n        }, {\n            content: \"Check that fields A and B are visible\",\n            trigger: `iframe .s_website_form:has(${triggerFieldByLabel(\"field B\")}:visible)` +\n                `:has(${triggerFieldByLabel(\"field A\")}:visible)`,\n            run: () => null, // it's a check\n        },\n\n        // Have field A's visibility tied to field B containing something,\n        // while field B's visibility is also tied to another field.\n        ...wTourUtils.clickOnEditAndWaitEditMode(),\n        ...selectFieldByLabel(\"field A\"),\n        {\n            content: \"Verify that the form editor appeared\",\n            trigger: \".o_we_customize_panel .snippet-option-WebsiteFormEditor\",\n            run: () => null,\n        },\n        ...selectButtonByData('data-select-data-attribute=\"contains\"'),\n        {\n            content: \"Tie the visibility of field A to field B containing 'peek-a-boo'\",\n            trigger: \"we-input[data-name=hidden_condition_additional_text] input\",\n            run: \"text peek-a-boo\",\n        },\n        ...wTourUtils.clickOnSave(),\n\n        // Check that the resulting form works and does not raise an error.\n         {\n            content: \"Write anything in C\",\n            trigger: `iframe ${triggerFieldByLabel(\"field C\")} input`,\n            run: \"text Mellon\",\n        }, {\n            content: \"Check that field B is visible, but field A is not\",\n            trigger: `iframe .s_website_form:has(${triggerFieldByLabel(\"field B\")}:visible)` +\n                `:has(${triggerFieldByLabel(\"field A\")}:not(:visible))`,\n            run: () => null, // it's a check\n        }, {\n            content: \"Insert 'peek-a-boo' in field B\",\n            trigger: `iframe ${triggerFieldByLabel(\"field B\")} input`,\n            run: \"text peek-a-boo\",\n        }, {\n            content: \"Check that field A is visible\",\n            trigger: `iframe .s_website_form:has(${triggerFieldByLabel(\"field A\")}:visible)`,\n            run: () => null, // it's a check\n        },\n\n        ...wTourUtils.clickOnEditAndWaitEditMode(),\n        ...addCustomField(\"char\", \"text\", \"field D\", false),\n        {\n            content: \"Select the 'Subject' field\",\n            trigger: 'iframe .s_website_form_field.s_website_form_model_required:has(label:contains(\"Subject\"))',\n        },\n        ...selectButtonByText(CONDITIONALVISIBILITY),\n        ...selectButtonByData('data-set-visibility-dependency=\"field D\"'),\n        ...selectButtonByData('data-select-data-attribute=\"set\"'),\n        {\n            content: \"Set a default value to the 'Subject' field\",\n            trigger: 'we-input[data-attribute-name=\"value\"] input',\n            run: 'text Default Subject',\n        },\n        {\n            content: \"Select the 'Your Message' field\",\n            trigger: 'iframe .s_website_form_field.s_website_form_required:has(label:contains(\"Your Message\"))',\n        },\n        ...selectButtonByText(CONDITIONALVISIBILITY),\n        ...selectButtonByData('data-set-visibility-dependency=\"field D\"'),\n        ...selectButtonByData('data-select-data-attribute=\"set\"'),\n\n        ...wTourUtils.clickOnSave(),\n        // Ensure that a field required for a model is not disabled when\n        // conditionally hidden.\n        {\n            content: \"Check that the 'Subject' field is not disabled\",\n            trigger: `iframe .s_website_form:has(.s_website_form_model_required ` +\n                `.s_website_form_input[value=\"Default Subject\"]:not([disabled]):not(:visible))`,\n            run: () => null, // it's a check\n        },\n        // Ensure that a required field (but not for a model) is disabled when\n        // conditionally hidden.\n        {\n            content: \"Check that the 'Your Message' field is disabled\",\n            trigger: `iframe .s_website_form:has(.s_website_form_required ` +\n                `.s_website_form_input[name=\"body_html\"][required][disabled]:not(:visible))`,\n            run: () => null, // it's a check\n        },\n\n        ...wTourUtils.clickOnEditAndWaitEditMode(),\n        {\n            content: \"Select the 'Subject' field\",\n            trigger: 'iframe .s_website_form_field.s_website_form_model_required:has(label:contains(\"Subject\"))',\n        },\n        ...selectButtonByData(\"data-set-visibility='visible'\"),\n        {\n            content: \"Empty the default value of the 'Subject' field\",\n            trigger: 'we-input[data-attribute-name=\"value\"] input',\n            run: \"remove_text\",\n        },\n        {\n            content: \"Select the 'Your Message' field\",\n            trigger: 'iframe .s_website_form_field.s_website_form_required:has(label:contains(\"Your Message\"))',\n        },\n        ...selectButtonByData(\"data-set-visibility='visible'\"),\n        {\n            content: 'Click on the submit button',\n            trigger: 'iframe .s_website_form_send',\n            run: 'click',\n        },\n        {\n            content: 'Change the Recipient Email',\n            trigger: '[data-field-name=\"email_to\"] input',\n            run: 'text test@test.test',\n        },\n        // The next four calls to \"addCustomField\" are there to ensure such\n        // characters do not make the form editor crash.\n        ...addCustomField(\"char\", \"text\", \"''\", false),\n        ...addCustomField(\"char\", \"text\", '\"\"', false),\n        ...addCustomField(\"char\", \"text\", \"``\", false),\n        ...addCustomField(\"char\", \"text\", \"\\\\\", false),\n        {\n            content: 'Save the page',\n            trigger: 'button[data-action=save]',\n            run: 'click',\n        },\n        {\n            content: 'Verify that the recipient email has been saved',\n            trigger: 'iframe body:not(.editor_enable)',\n            // We have to this that way because the input type = hidden.\n            extra_trigger: 'iframe form:has(input[name=\"email_to\"][value=\"test@test.test\"])',\n        },\n    ]);\n\n    function editContactUs(steps) {\n        return [\n            {\n                content: \"Select the contact us form by clicking on an input field\",\n                trigger: 'iframe .s_website_form input',\n                extra_trigger: '#oe_snippets .oe_snippet_thumbnail',\n                run: 'click',\n            },\n            ...steps,\n            {\n                content: 'Save the page',\n                trigger: 'button[data-action=save]',\n            },\n            {\n                content: 'Wait for reload',\n                trigger: 'body:not(.editor_enable)',\n            },\n        ];\n    }\n\n    wTourUtils.registerWebsitePreviewTour('website_form_contactus_edition_with_email', {\n        url: '/contactus',\n        edition: true,\n        test: true,\n    }, editContactUs([\n        {\n            content: 'Change the Recipient Email',\n            trigger: '[data-field-name=\"email_to\"] input',\n            run: 'text test@test.test',\n        },\n    ]));\n    wTourUtils.registerWebsitePreviewTour('website_form_contactus_edition_no_email', {\n        url: '/contactus',\n        edition: true,\n        test: true,\n    }, editContactUs([\n        {\n            content: \"Change a random option\",\n            trigger: '[data-set-mark] input',\n            run: 'text_blur **',\n        }, {\n            content: \"Check that the recipient email is correct\",\n            trigger: 'we-input[data-field-name=\"email_to\"] input:propValue(\"website_form_contactus_edition_no_email@mail.com\")',\n            run: () => null, // it's a check.\n        },\n    ]));\n\n    wTourUtils.registerWebsitePreviewTour('website_form_conditional_required_checkboxes', {\n        test: true,\n        url: '/',\n        edition: true,\n    }, [\n        // Create a form with two checkboxes: the second one required but\n        // invisible when the first one is checked. Basically this should allow\n        // to have: both checkboxes are visible by default but the form can\n        // only be sent if one of the checkbox is checked.\n        {\n            content: \"Add the form snippet\",\n            trigger: '#oe_snippets .oe_snippet:has(.s_website_form) .oe_snippet_thumbnail',\n            run: 'drag_and_drop iframe #wrap',\n        }, {\n            content: \"Select the form by clicking on an input field\",\n            extra_trigger: 'iframe .s_website_form_field',\n            trigger: 'iframe section.s_website_form input',\n            run: function (actions) {\n                actions.auto();\n\n                // The next steps will be about removing non essential required\n                // fields. For the robustness of the test, check that amount\n                // of field stays the same.\n                const requiredFields = this.$anchor.closest('[data-snippet]').find('.s_website_form_required');\n                if (requiredFields.length !== NB_NON_ESSENTIAL_REQUIRED_FIELDS_IN_DEFAULT_FORM) {\n                    console.error('The amount of required fields seems to have changed');\n                }\n            },\n        },\n        ...((function () {\n            const steps = [];\n            for (let i = 0; i < NB_NON_ESSENTIAL_REQUIRED_FIELDS_IN_DEFAULT_FORM; i++) {\n                steps.push({\n                    content: \"Select required field to remove\",\n                    trigger: 'iframe .s_website_form_required .s_website_form_input',\n                });\n                steps.push({\n                    content: \"Remove required field\",\n                    trigger: 'iframe .oe_overlay .oe_snippet_remove',\n                });\n            }\n            return steps;\n        })()),\n        ...addCustomField('boolean', 'checkbox', 'Checkbox 1', false),\n        ...addCustomField('boolean', 'checkbox', 'Checkbox 2', true, {visibility: CONDITIONALVISIBILITY}),\n        {\n            content: \"Open condition item select\",\n            trigger: 'we-select[data-name=\"hidden_condition_opt\"] we-toggler',\n        }, {\n            content: \"Choose first checkbox as condition item\",\n            trigger: 'we-button[data-set-visibility-dependency=\"Checkbox 1\"]',\n        }, {\n            content: \"Open condition comparator select\",\n            trigger: 'we-select[data-attribute-name=\"visibilityComparator\"] we-toggler',\n        }, {\n            content: \"Choose 'not equal to' comparator\",\n            trigger: 'we-button[data-select-data-attribute=\"!selected\"]',\n        }, {\n            content: 'Save the page',\n            trigger: 'button[data-action=save]',\n        },\n\n        // Check that the resulting form behavior is correct\n        {\n            content: \"Wait for page reload\",\n            trigger: 'iframe body:not(.editor_enable) [data-snippet=\"s_website_form\"]',\n            run: function (actions) {\n                // The next steps will be about removing non essential required\n                // fields. For the robustness of the test, check that amount\n                // of field stays the same.\n                const essentialFields = this.$anchor.find('.s_website_form_model_required');\n                if (essentialFields.length !== ESSENTIAL_FIELDS_VALID_DATA_FOR_DEFAULT_FORM.length) {\n                    console.error('The amount of model-required fields seems to have changed');\n                }\n            },\n        },\n        ...essentialFieldsForDefaultFormFillInSteps,\n        {\n            content: 'Try sending empty form',\n            trigger: 'iframe .s_website_form_send',\n        }, {\n            content: 'Check the form could not be sent',\n            trigger: 'iframe #s_website_form_result.text-danger',\n            run: () => null,\n        }, {\n            content: 'Check the first checkbox',\n            trigger: 'iframe input[type=\"checkbox\"][name=\"Checkbox 1\"]',\n        }, {\n            content: 'Check the second checkbox is now hidden',\n            trigger: 'iframe .s_website_form:has(input[type=\"checkbox\"][name=\"Checkbox 2\"]:not(:visible))',\n            run: () => null,\n        }, {\n            content: 'Try sending the form',\n            trigger: 'iframe .s_website_form_send',\n        }, {\n            content: \"Check the form was sent (success page without form)\",\n            trigger: 'iframe body:not(:has([data-snippet=\"s_website_form\"])) .fa-check-circle',\n            run: () => null,\n        }, {\n            content: \"Go back to the form\",\n            trigger: 'iframe a.navbar-brand.logo',\n        },\n        ...essentialFieldsForDefaultFormFillInSteps,\n        {\n            content: 'Check the second checkbox',\n            trigger: 'iframe input[type=\"checkbox\"][name=\"Checkbox 2\"]',\n        }, {\n            content: 'Try sending the form again',\n            trigger: 'iframe .s_website_form_send',\n        }, {\n            content: \"Check the form was again sent (success page without form)\",\n            trigger: 'iframe body:not(:has([data-snippet=\"s_website_form\"])) .fa-check-circle',\n            run: () => null,\n        }\n    ]);\n\n    wTourUtils.registerWebsitePreviewTour('website_form_contactus_change_random_option', {\n        test: true,\n        url: '/contactus',\n        edition: true,\n    }, editContactUs([\n        {\n            content: \"Change a random option\",\n            trigger: '[data-set-mark] input',\n            run: 'text_blur **',\n        },\n    ]));\n\n    // Check that the editable form content is actually editable.\n    wTourUtils.registerWebsitePreviewTour(\"website_form_editable_content\", {\n        test: true,\n        url: \"/\",\n        edition: true,\n    }, [\n        {\n            ...wTourUtils.dragNDrop({id: \"s_website_form\", name: \"Form\"}),\n            run: \"drag_and_drop iframe #wrap\",\n        },\n        {\n            content: \"Check that a form field is not editable\",\n            extra_trigger: \"iframe .s_website_form_field\",\n            trigger: \"iframe section.s_website_form input\",\n            run: function () {\n                if (this.$anchor[0].isContentEditable) {\n                    console.error(\"A form field should not be editable.\");\n                }\n            },\n        },\n        {\n            content: \"Go back to blocks\",\n            trigger: \".o_we_add_snippet_btn\",\n        },\n        wTourUtils.dragNDrop({id: \"s_three_columns\", name: \"Columns\"}),\n        {\n            content: \"Select the first column\",\n            trigger: \"iframe .s_three_columns .row > :nth-child(1)\",\n        },\n        {\n            content: \"Drag and drop the selected column inside the form\",\n            trigger: \"iframe .o_overlay_move_options .ui-draggable-handle\",\n            run: \"drag_and_drop iframe section.s_website_form\",\n        },\n        {\n            content: \"Click on the text inside the dropped form column\",\n            trigger: \"iframe section.s_website_form h3.card-title\",\n            run: \"dblclick\",\n        },\n        {   // Simulate a user interaction with the editable content.\n            content: \"Update the text inside the form column\",\n            trigger: \"iframe section.s_website_form h3.card-title\",\n            run: \"keydown 65 66 67\",\n        },\n        {\n            content: \"Check that the new text value was correctly set\",\n            trigger: \"iframe section.s_website_form h3:containsExact(ABC)\",\n            run: () => null, // it's a check\n        },\n        {   content: \"Remove the dropped column\",\n            trigger: \"iframe .oe_overlay.oe_active .oe_snippet_remove\",\n            run: \"click\",\n        },\n        ...wTourUtils.clickOnSave(),\n    ]);\n\n    wTourUtils.registerWebsitePreviewTour(\"website_form_special_characters\", {\n        test: true,\n        url: \"/\",\n        edition: true,\n    }, [\n        {\n            ...wTourUtils.dragNDrop({id: \"s_website_form\", name: \"Form\"}),\n            run: \"drag_and_drop iframe #wrap\",\n        },\n        {\n            content: \"Select form by clicking on an input field\",\n            extra_trigger: \"iframe .s_website_form_field\",\n            trigger: \"iframe section.s_website_form input\",\n        },\n        ...addCustomField(\"char\", \"text\", `Test1\"'`, false),\n        ...addCustomField(\"char\", \"text\", 'Test2`\\\\', false),\n        ...wTourUtils.clickOnSave(),\n        ...essentialFieldsForDefaultFormFillInSteps,\n        {\n            content: \"Complete 'Your Question' field\",\n            trigger: \"iframe textarea[name='description']\",\n            run: \"text test\",\n        }, {\n            content: \"Complete the first added field\",\n            trigger: \"iframe input[name='Test1&quot;&apos;']\",\n            run: \"text test1\",\n        }, {\n            content: \"Complete the second added field\",\n            trigger: \"iframe input[name='Test2&lsquo;&bsol;']\",\n            run: \"text test2\",\n        }, {\n            content: \"Click on 'Submit'\",\n            trigger: \"iframe a.s_website_form_send\",\n        }, {\n            content: \"Check the form was again sent (success page without form)\",\n            trigger: \"iframe body:not(:has([data-snippet='s_website_form'])) .fa-check-circle\",\n            run: () => null,\n        },\n    ]);\n\n    return {};\n});\n", "/** @odoo-module **/\nimport tour from 'web_tour.tour';\nimport rpc from 'web.rpc';\n\ntour.register(\"website_form_editor_tour_submit\", {\n    test: true,\n},[\n    {\n        content:  \"Try to send the form with some required fields not filled in\",\n        extra_trigger:  \"form[data-model_name='mail.mail']\" +\n                        \"[data-success-page='/contactus-thank-you']\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Name')):has(input[type='text'][name='name'][required]))\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Email')):has(input[type='email'][name='email_from'][required]))\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Question')):has(textarea[name='description'][required]))\" +\n                        \":has(.s_website_form_field:has(label:contains('Subject')):has(input[type='text'][name='subject'][required]))\" +\n                        \":has(.s_website_form_field:has(label:contains('Test Date')):has(input[type='text'][name='date'][required]))\" +\n                        \":has(.s_website_form_field:has(label:contains('Awesome Label')):hidden)\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Message')):has(textarea[name='body_html'][required]))\" +\n                        \":has(.s_website_form_field:has(label:contains('Products')):has(input[type='checkbox'][name='Products'][value='Iphone'][required]))\" +\n                        \":has(.s_website_form_field:has(label:contains('Products')):has(input[type='checkbox'][name='Products'][value='Galaxy S'][required]))\" +\n                        \":has(.s_website_form_field:has(label:contains('Products')):has(input[type='checkbox'][name='Products'][value='Xperia'][required]))\" +\n                        \":has(.s_website_form_field:has(label:contains('Products')):has(input[type='checkbox'][name='Products'][value='Wiko Stairway'][required]))\" +\n                        \":has(.s_website_form_field:has(label:contains('Service')):has(input[type='radio'][name='Service'][value='After-sales Service']:not([required])))\" +\n                        \":has(.s_website_form_field:has(label:contains('Service')):has(input[type='radio'][name='Service'][value='Invoicing Service']:not([required])))\" +\n                        \":has(.s_website_form_field:has(label:contains('Service')):has(input[type='radio'][name='Service'][value='Development Service']:not([required])))\" +\n                        \":has(.s_website_form_field:has(label:contains('Service')):has(input[type='radio'][name='Service'][value='Management Service']:not([required])))\" +\n                        \":has(.s_website_form_field:has(label:contains('State')):has(select[name='State'][required]:has(option[value='Belgium'])))\" +\n                        \":has(.s_website_form_field.s_website_form_required:has(label:contains('State')):has(select[name='State'][required]:has(option[value='France'])))\" +\n                        \":has(.s_website_form_field:has(label:contains('State')):has(select[name='State'][required]:has(option[value='Canada'])))\" +\n                        \":has(.s_website_form_field:has(label:contains('Invoice Scan')))\" +\n                        \":has(.s_website_form_field:has(input[name='email_to'][value='test@test.test']))\" +\n                        \":has(.s_website_form_field:has(input[name='website_form_signature']))\",\n        trigger:  \".s_website_form_send\"\n    },\n    {\n        content:  \"Check if required fields were detected and complete the Subject field\",\n        extra_trigger:  \"form:has(#s_website_form_result.text-danger)\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Name')):not(.o_has_error))\" +\n                        \":has(.s_website_form_field:has(label:contains('Email')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Question')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Subject')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Test Date')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Message')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Products')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Service')):not(.o_has_error))\" +\n                        \":has(.s_website_form_field:has(label:contains('State')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Invoice Scan')):not(.o_has_error))\",\n        trigger:  \"input[name=subject]\",\n        run:      \"text Jane Smith\"\n    },\n    {\n        content:  \"Update required field status by trying to Send again\",\n        trigger:  \".s_website_form_send\"\n    },\n    {\n        content:  \"Check if required fields were detected and complete the Message field\",\n        extra_trigger:  \"form:has(#s_website_form_result.text-danger)\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Name')):not(.o_has_error))\" +\n                        \":has(.s_website_form_field:has(label:contains('Email')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Question')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Subject')):not(.o_has_error))\" +\n                        \":has(.s_website_form_field:has(label:contains('Test Date')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Message')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Products')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Service')):not(.o_has_error))\" +\n                        \":has(.s_website_form_field:has(label:contains('State')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Invoice Scan')):not(.o_has_error))\",\n        trigger:  \"textarea[name=body_html]\",\n        run:      \"text A useless message\"\n    },\n    {\n        content:  \"Update required field status by trying to Send again\",\n        trigger:  \".s_website_form_send\"\n    },\n    {\n        content:  \"Check if required fields was detected and check a product. If this fails, you probably broke the cleanForSave.\",\n        extra_trigger:  \"form:has(#s_website_form_result.text-danger)\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Name')):not(.o_has_error))\" +\n                        \":has(.s_website_form_field:has(label:contains('Email')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Question')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Subject')):not(.o_has_error))\" +\n                        \":has(.s_website_form_field:has(label:contains('Test Date')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Your Message')):not(.o_has_error))\" +\n                        \":has(.s_website_form_field:has(label:contains('Products')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Service')):not(.o_has_error))\" +\n                        \":has(.s_website_form_field:has(label:contains('State')).o_has_error)\" +\n                        \":has(.s_website_form_field:has(label:contains('Invoice Scan')):not(.o_has_error))\",\n        trigger:  \"input[name=Products][value='Wiko Stairway']\"\n    },\n    {\n        content:  \"Complete Date field\",\n        trigger:  \".s_website_form_datetime [data-toggle='datetimepicker']\",\n    },\n    {\n        content:  \"Check another product\",\n        trigger:  \"input[name='Products'][value='Xperia']\"\n    },\n    {\n        content:  \"Check a service\",\n        trigger:  \"input[name='Service'][value='Development Service']\"\n    },\n    {\n        content:  \"Select a State\",\n        trigger:  \"select[name='State']\",\n        run:      \"text Canada\",\n    },\n    {\n        content:  \"Complete Your Name field\",\n        trigger:  \"input[name='name']\",\n        run:      \"text chhagan\"\n    },\n    {\n        content:  \"Complete Email field\",\n        trigger:  \"input[name=email_from]\",\n        run:      \"text test@mail.com\"\n    },\n    {\n        content: \"Complete Subject field\",\n        trigger: 'input[name=\"subject\"]',\n        run: 'text subject',\n    },\n    {\n        content:  \"Complete Your Question field\",\n        trigger:  \"textarea[name='description']\",\n        run:      \"text magan\"\n    },\n    {\n        content: \"Check if conditional field is visible, it shouldn't.\",\n        trigger: \"body\",\n        run: function () {\n            const style = window.getComputedStyle(this.$anchor[0].getElementsByClassName('s_website_form_field_hidden_if')[0]);\n            if (style.display !== 'none') {\n                console.error('error This field should be invisible when the name is not odoo');\n            }\n        }\n    },\n    {\n        content: \"Change name input\",\n        trigger: \"input[name='name']\",\n        run: \"text odoo\",\n    },\n    {\n        content: \"Check if conditional field is visible, it should.\",\n        trigger: \"input[name='email_cc']\",\n    },\n    {\n        content: \"Select state option\",\n        trigger: \"select[name='State']\",\n        run: 'text 44 - UK',\n    },\n    {\n        content:  \"Send the form\",\n        trigger:  \".s_website_form_send\"\n    },\n    {\n        content:  \"Check form is submitted without errors\",\n        trigger:  \"#wrap:has(h1:contains('Thank You!'))\"\n    }\n]);\n\ntour.register(\"website_form_editor_tour_results\", {\n    test: true,\n}, [\n    {\n        content: \"Check mail.mail records have been created\",\n        trigger: \"body\",\n        run: function () {\n            var mailDef = rpc.query({\n                    model: 'mail.mail',\n                    method: 'search_count',\n                    args: [[\n                        ['email_to', '=', 'test@test.test'],\n                        ['body_html', 'like', 'A useless message'],\n                        ['body_html', 'like', 'Service : Development Service'],\n                        ['body_html', 'like', 'State : 44 - UK'],\n                        ['body_html', 'like', 'Products : Xperia,Wiko Stairway']\n                    ]],\n                });\n            var success = function(model, count) {\n                if (count > 0) {\n                    $('body').append('<div id=\"website_form_editor_success_test_tour_'+model+'\"></div>');\n                }\n            };\n            mailDef.then(_.bind(success, this, 'mail_mail'));\n        }\n    },\n    {\n        content:  \"Check mail.mail records have been created\",\n        trigger:  \"#website_form_editor_success_test_tour_mail_mail\"\n    }\n]);\ntour.register('website_form_contactus_submit', {\n    test: true,\n    url: '/contactus',\n}, [\n    // As the demo portal user, only two inputs needs to be filled to send\n    // the email\n    {\n        content: \"Fill in the subject\",\n        trigger: 'input[name=\"subject\"]',\n    },\n    {\n        content: 'Fill in the message',\n        trigger: 'textarea[name=\"description\"]',\n    },\n    {\n        content: 'Send the form',\n        trigger: '.s_website_form_send',\n    },\n    {\n        content: 'Check form is submitted without errors',\n        trigger: '#wrap:has(h1:contains(\"Thank You!\"))',\n    },\n]);\ntour.register('website_form_contactus_check_changed_email', {\n    test: true,\n    url: '/contactus',\n}, [\n    {\n        content: \"Check that the recipient email is updated\",\n        trigger: 'form:has(input[name=\"email_to\"][value=\"after.change@mail.com\"])',\n        run: () => null, // it's a check.\n    },\n]);\n", "odoo.define(\"website.tour.website_navbar_menu\", function (require) {\n\"use strict\";\n\nvar tour = require(\"web_tour.tour\");\n\ntour.register(\"website_navbar_menu\", {\n    test: true,\n    url: \"/\",\n}, [\n    {\n        content: \"Ensure menus are in DOM\",\n        trigger: '#top_menu .nav-item a:contains(\"Test Tour Menu\")',\n        run: function () {}, // it's a check\n    }, {\n        content: \"Ensure menus loading is done (so they are actually visible)\",\n        trigger: 'body:not(:has(.o_menu_loading))',\n        run: function () {}, // it's a check\n    }\n]);\n});\n", "/** @odoo-module **/\n\nimport wTourUtils from 'website.tour_utils';\n\nconst makeSteps = (steps = []) => [\n    wTourUtils.dragNDrop({\n        id: \"s_text_image\",\n        name: \"Text - Image\",\n    }), {\n        content: \"Click on Discard\",\n        trigger: '.o_we_website_top_actions [data-action=\"cancel\"]',\n    }, {\n        content: \"Check that discarding actually warns when there are dirty changes, and cancel\",\n        trigger: \".modal-footer .btn-secondary\",\n    },\n    ...wTourUtils.clickOnSave(),\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        // This makes sure the last step about leaving edit mode at the end of\n        // this tour makes sense.\n        content: \"Confirm we are in edit mode\",\n        trigger: 'body.editor_has_snippets',\n        run: () => null,\n    },\n    ...steps,\n    {\n        // Makes sure the dirty flag does not happen after a setTimeout or\n        // something like that.\n        content: \"Click elsewhere and wait for a few ms\",\n        trigger: 'iframe #wrap',\n        run: function (actions) {\n            actions.auto();\n            setTimeout(() => document.body.classList.add('o_test_delay'), 999);\n        },\n    }, {\n        content: \"Click on Discard\",\n        trigger: '.o_we_website_top_actions [data-action=\"cancel\"]',\n        extra_trigger: 'body.o_test_delay',\n    }, {\n        content: \"Confirm we are not in edit mode anymore\",\n        trigger: 'body:not(.editor_has_snippets)',\n        run: () => null,\n    },\n];\n\nwTourUtils.registerWebsitePreviewTour('website_no_action_no_dirty_page', {\n    test: true,\n    url: '/',\n    edition: true,\n}, makeSteps());\n\nwTourUtils.registerWebsitePreviewTour('website_no_dirty_page', {\n    test: true,\n    url: '/',\n    edition: true,\n}, makeSteps([\n    {\n        content: \"Click on default paragraph\",\n        trigger: 'iframe .s_text_image h2 + p.o_default_snippet_text',\n    }, {\n        // TODO this should be done in a dedicated test which would be testing\n        // all default snippet texts behaviors. Will be done in master where a\n        // task will review this feature.\n        // TODO also test that applying an editor command removes that class.\n        content: \"Make sure the paragraph still acts as a default paragraph\",\n        trigger: 'iframe .s_text_image h2 + p.o_default_snippet_text',\n        run: () => null,\n    }, {\n        content: \"Click on button\",\n        trigger: 'iframe .s_text_image .btn',\n        run: function (actions) {\n            actions.click();\n            const el = this.$anchor[0];\n            const sel = el.ownerDocument.getSelection();\n            sel.collapse(el, 0);\n            el.focus();\n        },\n    },\n]));\n", "/** @odoo-module **/\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('website_page_options', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    wTourUtils.clickOnSnippet({id: 'o_header_standard', name: 'Header'}),\n    wTourUtils.changeOption('TopMenuVisibility', 'we-select:has([data-visibility]) we-toggler'),\n    wTourUtils.changeOption('TopMenuVisibility', 'we-button[data-visibility=\"transparent\"]'),\n    // It's important to test saving right after changing that option only as\n    // this is why this test was made in the first place: the page was not\n    // marked as dirty when that option was the only one that was changed.\n    ...wTourUtils.clickOnSave(),\n    {\n        content: \"Check that the header is transparent\",\n        trigger: 'iframe #wrapwrap.o_header_overlay',\n        run: () => null, // it's a check\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    wTourUtils.clickOnSnippet({id: 'o_header_standard', name: 'Header'}),\n    wTourUtils.changeOption('topMenuColor', 'we-select.o_we_so_color_palette'),\n    wTourUtils.changeOption('topMenuColor', 'button[data-color=\"black-50\"]', 'background color', 'bottom', true),\n    ...wTourUtils.clickOnSave(),\n    {\n        content: \"Check that the header is in black-50\",\n        trigger: 'iframe header#top.bg-black-50',\n        run: () => null, // it's a check\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    wTourUtils.clickOnSnippet({id: 'o_header_standard', name: 'Header'}),\n    wTourUtils.changeOption('TopMenuVisibility', 'we-select:has([data-visibility]) we-toggler'),\n    wTourUtils.changeOption('TopMenuVisibility', 'we-button[data-visibility=\"hidden\"]'),\n    ...wTourUtils.clickOnSave(),\n    {\n        content: \"Check that the header is hidden\",\n        trigger: 'iframe #wrapwrap:has(header#top.d-none.o_snippet_invisible)',\n        run: () => null, // it's a check\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: \"Click on 'header' in the invisible elements list\",\n        trigger: '.o_we_invisible_el_panel .o_we_invisible_entry',\n    },\n    wTourUtils.clickOnSnippet({id: 'o_footer', name: 'Footer'}),\n    wTourUtils.changeOption('HideFooter', 'we-button[data-name=\"hide_footer_page_opt\"] we-checkbox'),\n    ...wTourUtils.clickOnSave(),\n    {\n        content: \"Check that the footer is hidden and the header is visible\",\n        trigger: 'iframe #wrapwrap:has(.o_footer.d-none.o_snippet_invisible)',\n        extra_trigger: 'iframe #wrapwrap header#top:not(.d-none)',\n        run: () => null, // it's a check\n    },\n]);\n", "/** @odoo-module **/\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour(\"website_snippets_menu_tabs\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.goToTheme(),\n    {\n        content: \"Click on the empty 'DRAG BUILDING BLOCKS HERE' area.\",\n        extra_trigger: 'we-customizeblock-option.snippet-option-ThemeColors',\n        trigger: 'iframe main > .oe_structure.oe_empty',\n        run: 'click',\n    },\n    wTourUtils.goToTheme(),\n    {\n        content: \"Verify that the customize panel is not empty.\",\n        trigger: '.o_we_customize_panel > we-customizeblock-options',\n        run: () => null, // it's a check\n    },\n    {\n        content: \"Click on the style tab.\",\n        trigger: '#snippets_menu .o_we_customize_snippet_btn',\n    },\n    wTourUtils.goToTheme(),\n    {\n        content: \"Verify that the customize panel is not empty.\",\n        trigger: '.o_we_customize_panel > we-customizeblock-options',\n        run: () => null, // it's a check\n    },\n]);\n", "odoo.define(\"website.tour.website_style_edition\", function (require) {\n\"use strict\";\n\nconst wTourUtils = require(\"website.tour_utils\");\n\nconst TARGET_FONT_SIZE = 30;\n\nconst checkFontSize = function (actions) {\n    const style = actions.tip_widget.el.ownerDocument.defaultView.getComputedStyle(this.$anchor[0]);\n    if (style.fontSize !== `${TARGET_FONT_SIZE}px`) {\n        console.error(`Expected the font-size to be equal to ${TARGET_FONT_SIZE}px but found ${style.fontSize} instead`);\n    }\n};\n\nwTourUtils.registerWebsitePreviewTour(\"website_style_edition\", {\n    test: true,\n    url: '/',\n    edition: true,\n}, [{\n    content: \"Go to theme options\",\n    trigger: '.o_we_customize_theme_btn',\n}, {\n    content: \"Change font size\",\n    trigger: '[data-variable=\"font-size-base\"] input',\n    run: `text_blur ${TARGET_FONT_SIZE}`,\n}, {\n    content: \"Check the font size was properly adapted\",\n    trigger: 'iframe #wrapwrap',\n    // Waiting the CSS to be reloaded: the code adds a new assets bundle with\n    // a #t=... at the end then removes the old one.\n    extra_trigger: 'iframe html:not(:has(link[href$=\"web.assets_frontend.min.css\"]))',\n    run: checkFontSize,\n},\n...wTourUtils.clickOnSave(),\n{\n    content: \"Check the font size is still ok outside of edit mode\",\n    trigger: 'iframe body:not(.editor_enable) #wrapwrap',\n    run: checkFontSize,\n},\n...wTourUtils.clickOnEditAndWaitEditMode(),\nwTourUtils.goToTheme(),\n{\n    content: \"Click on the Background Image selection\",\n    trigger: '[data-customize-body-bg-type=\"\\'image\\'\"]:not(.active)',\n    extra_trigger: '[data-customize-body-bg-type=\"NONE\"].active',\n}, {\n    content: \"The media dialog should open\",\n    trigger: '.o_select_media_dialog',\n    run: () => {}, // It's a check.\n}]);\n});\n", "/** @odoo-module **/\n\nimport wTourUtils from 'website.tour_utils';\n\nconst WEBSITE_MAIN_COLOR = '#ABCDEF';\n\nwTourUtils.registerWebsitePreviewTour('website_text_edition', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    {\n        content: \"Go to theme options\",\n        trigger: '.o_we_customize_theme_btn',\n    },\n    {\n        content: \"Open colorpicker to change website main color\",\n        trigger: 'we-select[data-color=\"o-color-1\"] .o_we_color_preview',\n    },\n    {\n        content: \"Input the value for the new website main color (also make sure it is independent from the backend)\",\n        trigger: '.o_hex_input',\n        run: `text_blur ${WEBSITE_MAIN_COLOR}`,\n    },\n    {\n        content: \"Go to the blocks tab\",\n        trigger: '.o_we_add_snippet_btn',\n    },\n    wTourUtils.dragNDrop({id: 's_text_block', name: 'Text'}),\n    {\n        content: \"Click on the text block first paragraph (to auto select)\",\n        trigger: 'iframe .s_text_block p',\n    },\n    {\n        content: \"Open the foreground colorpicker\",\n        trigger: '#oe-text-color',\n    },\n    {\n        content: \"Go to the 'solid' tab\",\n        trigger: '.o_we_colorpicker_switch_pane_btn[data-target=\"custom-colors\"]',\n    },\n    {\n        content: \"Input the website main color explicitly\",\n        trigger: '.o_hex_input',\n        run: `text_blur ${WEBSITE_MAIN_COLOR}`,\n    },\n    {\n        content: \"Check that paragraph now uses the main color *class*\",\n        trigger: 'iframe .s_text_block p',\n        run: function (actions) {\n            const fontEl = this.$anchor[0].querySelector('font');\n            if (!fontEl) {\n                console.error(\"A background color should have been applied\");\n                return;\n            }\n            if (fontEl.style.backgroundColor) {\n                console.error(\"The paragraph should not have an inline style background color\");\n                return;\n            }\n            if (!fontEl.classList.contains('text-o-color-1')) {\n                console.error(\"The paragraph should have the right background color class\");\n                return;\n            }\n        },\n    }\n]);\n", "/** @odoo-module **/\n\nimport wTourUtils from \"website.tour_utils\";\n\n// Note: cannot import @website/../tests/tour_utils/widget_lifecycle_dep_widget\n// here because that module requires web.public.widget which is not available\n// in the backend, where this tour definition is loaded. Easier to duplicate\n// that key for now rather than create a whole file to handle this localStorage\n// key only.\nconst localStorageKey = 'widgetAndWysiwygLifecycle';\n\nwTourUtils.registerWebsitePreviewTour(\"widget_lifecycle\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: \"s_countdown\",\n        name: \"Countdown\",\n    }),\n    {\n        content: \"Wait for the widget to be started and empty the widgetAndWysiwygLifecycle list\",\n        trigger: \"iframe .s_countdown.public_widget_started\",\n        run: () => {\n            // Start recording the calls to the \"start\" and \"destroy\" method of\n            // the widget and the wysiwyg.\n            window.localStorage.setItem(localStorageKey, '[]');\n        },\n    },\n    ...wTourUtils.clickOnSave(),\n    {\n        content: \"Wait for the widget to be started\",\n        trigger: \"iframe .s_countdown.public_widget_started\",\n        run: () => {}, // It's a check\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: \"Wait for the widget to be started and check the order of the lifecycle method call of the widget and the wysiwyg\",\n        trigger: \"iframe .s_countdown.public_widget_started\",\n        run: () => {\n            const result = JSON.parse(window.localStorage.widgetAndWysiwygLifecycle);\n            const expected = [\"widgetStop\", \"wysiwygStop\", \"wysiwygStop\", \"widgetStart\",\n                \"widgetStop\", \"wysiwygStart\", \"wysiwygStarted\", \"widgetStart\",\n            ];\n            const alternative = [\"widgetStop\", \"wysiwygStop\", \"widgetStart\", \"wysiwygStop\",\n                \"widgetStop\", \"wysiwygStart\", \"wysiwygStarted\", \"widgetStart\",\n            ];\n            const resultIsEqualTo = (arr) => {\n                return arr.length === result.length\n                    && arr.every((item, i) => item === result[i]);\n            };\n            if (!(resultIsEqualTo(expected) || resultIsEqualTo(alternative))) {\n                // The \"destroy\" method of the wysiwyg is called two times when\n                // leaving the edit mode: the first one comes explicitly from\n                // the \"leaveEditMode\" of the \"wysiwyg_adapter\". The second\n                // comes from the OWL mechanism as the wysiwyg is not present in\n                // the DOM when the page is reloaded. Because it is not\n                // guaranteed that this last call happens before the start of\n                // the widget at the page reload, two sequences are acceptable\n                // as a result.\n                console.error(`\n                    Expected: ${expected.toString()}\n                    Or:       ${alternative.toString()}\n                    Result:   ${result.toString()}\n                `);\n            }\n        },\n    },\n]);\n", "/** @odoo-module **/\nimport { patch } from 'web.utils';\nimport { WebsitePreview } from '@website/client_actions/website_preview/website_preview';\n\npatch(WebsitePreview.prototype, 'website_preview_test_mode', {\n    /**\n     * @override\n     */\n    get testMode() {\n        return true;\n    }\n});\n", "/** @odoo-module */\n\nimport tour from 'web_tour.tour';\n\ntour.register('personal_stage_tour', {\n    test: true,\n    url: '/web',\n},\n[tour.stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    content: \"Open Pig Project\",\n    trigger: '.o_kanban_record:contains(\"Pig\")',\n}, {\n    // Default is grouped by stage, user should not be able to create/edit a column\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_quick_create)\",\n    run: function () {},\n}, {\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_edit)\",\n    run: function () {},\n}, {\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_delete)\",\n    run: function () {},\n}, {\n    content: \"Go to my tasks\", // My tasks is grouped by personal stage by default\n    trigger: 'a[data-menu-xmlid=\"project.menu_project_management\"]',\n}, {\n    content: \"Check that we can create a new stage\",\n    trigger: '.o_column_quick_create .o_quick_create_folded'\n}, {\n    content: \"Create a new personal stage\",\n    trigger: 'input.form-control.o_input',\n    run: 'text Never',\n}, {\n    content: \"Confirm create\",\n    trigger: '.o_kanban_add',\n}, {\n    content: \"Check that column exists\",\n    trigger: '.o_kanban_header:contains(\"Never\")',\n    run: function () {},\n}, {\n    content: 'Open column edit dropdown',\n    trigger: '.o_kanban_header:eq(0)',\n    run: function () {\n        document.querySelector('.o_kanban_config.dropdown .dropdown-toggle').dispatchEvent(new Event('click'));\n    },\n}, {\n    content: \"Try editing inbox\",\n    trigger: \".dropdown-item.o_column_edit\",\n}, {\n    content: \"Change title\",\n    trigger: 'div.o_field_char[name=\"name\"] input',\n    run: 'text  (Todo)',\n}, {\n    content: \"Save changes\",\n    trigger: '.btn-primary:contains(\"Save\")',\n}, {\n    content: \"Check that column was updated\",\n    trigger: '.o_kanban_header:contains(\"Todo\")',\n}]);\n", "/** @odoo-module */\n\nimport tour from 'web_tour.tour';\n\ntour.register('burndown_chart_tour', {\n    test: true,\n    url: '/web',\n},\n[tour.stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    content: 'Open \"Burndown Chart Test\" project menu',\n    trigger: '.o_kanban_record:contains(\"Burndown Chart Test\") .o_kanban_manage_toggle_button',\n}, {\n    content: `Open \"Burndown Chart Test\" project's \"Burndown Chart\" view`,\n    trigger: '.o_kanban_record:contains(\"Burndown Chart Test\") .o_kanban_manage_reporting div[role=\"menuitem\"] a:contains(\"Burndown Chart\")',\n}, {\n    content: 'The sort buttons are not rendered',\n    trigger: '.o_cp_bottom_left:not(:has(.btn-group[role=toolbar][aria-label=\"Sort graph\"]))',\n    extra_trigger: '.o_graph_renderer',\n}, {\n    content: 'Remove the project search \"Burndown Chart Test\"',\n    trigger: '.o_searchview_facet:contains(\"Burndown Chart Test\") .o_facet_remove',\n}, {\n    content: 'Search Burndown Chart',\n    trigger: 'input.o_searchview_input',\n    run: `text Burndown`,\n}, {\n    content: 'Validate search',\n    trigger: '.o_searchview_autocomplete .o_menu_item:contains(\"Project\")',\n}, {\n    content: 'Remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_searchview_facet:contains(\"Date: Month\") .o_facet_remove',\n}, {\n    content: 'A \"The Burndown Chart must be grouped by Date and Stage\" notification is shown when trying to remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_notification_manager .o_notification:contains(\"The Burndown Chart must be grouped by Date and Stage\") button.o_notification_close',\n}, {\n    content: 'Open the group by menu',\n    trigger: '.o_group_by_menu button',\n}, {\n    content: 'The Stage group menu item is invisible',\n    trigger: '.o_group_by_menu:not(:has(.o_menu_item:contains(\"Stage\")))',\n}, {\n    content: 'Open the Date group by sub menu',\n    trigger: '.o_group_by_menu button.o_menu_item:contains(\"Date\")',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('mouseenter'));\n    },\n}, {\n    content: 'Click on the selected Date sub menu',\n    trigger: '.o_group_by_menu button.o_menu_item:contains(\"Date\") + * .dropdown-item.selected',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('click'));\n    },\n}, {\n    content: 'A \"The Burndown Chart must be grouped by Date\" notification is shown when trying to remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_notification_manager .o_notification:contains(\"The Burndown Chart must be grouped by Date\") button.o_notification_close',\n}, {\n    content: 'Open the filter menu',\n    trigger: '.o_filter_menu button',\n}, {\n    content: 'Open the Date filter sub menu',\n    trigger: '.o_filter_menu button.o_menu_item:contains(\"Date\")',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('mouseenter'));\n    },\n}, {\n    content: 'Click on the first Date filter sub menu',\n    trigger: '.o_filter_menu .o_menu_item:contains(\"Date\") + * .dropdown-item:first-child',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('click'));\n    },\n}, {\n    content: 'Close the Date filter menu',\n    trigger: '.o_graph_renderer',\n}, {\n    content: 'The comparison menu is not rendered',\n    trigger: '.o_search_options:not(:has(.o_comparison_menu))',\n}]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\nconst projectSharingSteps = [...tour.stepUtils.goToAppSteps(\"project.menu_main_pm\", 'Go to the Project App.'), {\n    trigger: '.oe_kanban_global_click :contains(\"Project Sharing\") button.o_dropdown_kanban',\n    content: 'Open the project dropdown.'\n}, {\n    trigger: '.o_kanban_record:contains(\"Project Sharing\") .dropdown-menu a:contains(\"Share\")',\n    content: 'Start editing the project.',\n}, {\n    trigger: 'div.o_field_radio[name=\"access_mode\"] div.o_radio_item > input[data-value=\"edit\"]',\n    content: 'Select \"Edit\" as Access mode in the \"Share Project\" wizard.',\n}, {\n    trigger: '.o_field_many2many_tags_email[name=partner_ids]',\n    content: 'Select the user portal as collaborator to the \"Project Sharing\" project.',\n    run: function (actions) {\n        actions.text('Georges', this.$anchor.find('input'));\n    },\n}, {\n    trigger: '.ui-autocomplete a.dropdown-item:contains(\"Georges\")',\n    in_modal: false,\n}, {\n    trigger: 'footer > button[name=\"action_send_mail\"]',\n    content: 'Confirm the project sharing with this portal user.',\n}, {\n    trigger: '.o_web_client',\n    content: 'Go to project portal view to select the \"Project Sharing\" project',\n    run: function () {\n        window.location.href = window.location.origin + '/my/projects';\n    },\n}, {\n    id: 'project_sharing_feature',\n    trigger: 'table > tbody > tr a:has(span:contains(Project Sharing))',\n    content: 'Select \"Project Sharing\" project to go to project sharing feature for this project.',\n}, {\n    trigger: '.o_project_sharing',\n    content: 'Wait the project sharing feature be loaded',\n    run: function () {},\n}, {\n    trigger: 'button.o-kanban-button-new',\n    content: 'Click \"Create\" button',\n    run: 'click',\n}, {\n    trigger: '.o_kanban_quick_create .o_field_widget[name=\"name\"] input',\n    content: 'Create Task',\n    run: 'text Test Create Task',\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_edit',\n    content: 'Go to the form view of this new task',\n}, {\n    trigger: 'div[name=\"stage_id\"] div.o_statusbar_status button[aria-checked=\"false\"]:contains(Done)',\n    content: 'Change the stage of the task.',\n}, {\n    trigger: '.o_portal_chatter_composer_input .o_portal_chatter_composer_body textarea',\n    content: 'Write a message in the chatter of the task',\n    run: 'text I create a new task for testing purpose.',\n}, {\n    trigger: '.o_portal_chatter_composer_input .o_portal_chatter_composer_body button[name=\"send_message\"]',\n    content: 'Send the message',\n}, {\n    trigger: 'ol.breadcrumb > li.o_back_button > a:contains(Project Sharing)',\n    content: 'Go back to the kanban view',\n}, {\n    trigger: '.o_filter_menu > button',\n    content: 'click on filter menu in the search view',\n}, {\n    trigger: '.o_filter_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the filter menu',\n}, {\n    trigger: '.o_group_by_menu > button',\n    content: 'click on group by menu in the search view',\n}, {\n    trigger: '.o_group_by_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the group by menu',\n}, {\n    trigger: '.o_favorite_menu > button',\n    content: 'click on the favorite menu in the search view',\n}, {\n    trigger: '.o_favorite_menu .o_add_favorite > button',\n    content: 'click to \"save current search\" button in favorite menu',\n}, {\n    trigger: '.o_filter_menu > button',\n    content: 'click on filter menu in the search view',\n}, {\n    trigger: '.o_filter_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the filter menu',\n}, {\n    trigger: '.o_group_by_menu > button',\n    content: 'click on group by menu in the search view',\n}, {\n    trigger: '.o_group_by_menu > .dropdown-menu > .dropdown-item:first-child',\n    content: 'click on the first item in the group by menu',\n}, {\n    trigger: '.o_favorite_menu > button',\n    content: 'click on the favorite menu in the search view',\n}, {\n    trigger: '.o_favorite_menu .o_add_favorite > button',\n    content: 'click to \"save current search\" button in favorite menu',\n}, {\n    trigger: 'button.o_switch_view.o_list',\n    content: 'Go to the list view',\n}];\n\ntour.register('project_sharing_tour', {\n    test: true,\n    url: '/web',\n}, projectSharingSteps);\n\n// The begining of the project sharing feature\nconst projectSharingStepIndex = projectSharingSteps.findIndex(s => s.id && s.id === 'project_sharing_feature');\ntour.register('portal_project_sharing_tour', {\n    test: true,\n    url: '/my/projects',\n}, projectSharingSteps.slice(projectSharingStepIndex, projectSharingSteps.length));\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\nfunction changeFilter(filterName) {\n    return [\n        {\n            trigger: '.o_favorite_menu button:has(i.fa-star)',\n            content: 'click on the favorite menu',\n        },\n        {\n            trigger: `.o_favorite_menu .dropdown-item span:contains(\"${filterName}\")`,\n        },\n        {\n            trigger: '.o_group_by_menu button:has(i.oi-group)',\n            content: 'click on the groupby menu',\n            run: function (actions) {\n                this.$anchor[0].dispatchEvent(new Event('mouseenter'));\n            },\n        },\n        {\n            trigger: '.o_group_by_menu span:contains(\"Stage\")',\n            content: 'click on the stage gb',\n        },\n    ];\n}\n\ntour.register('project_tags_filter_tour',\n    {\n        test: true,\n        url: '/web',\n    },\n    [\n    tour.stepUtils.showAppsMenuItem(),\n    {\n        trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n    }, ...changeFilter(\"Corkscrew tail tag filter\"),\n    {\n        trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"pig\"))) .o_kanban_record:has(span:contains(\"Pigs\"))',\n        extra_trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"goat\"))):not(:has(.o_kanban_record))',\n        content: 'check that the corkscrew tail filter has taken effect',\n        run: () => {},\n    }, ...changeFilter(\"horned tag filter\"),\n    {\n        trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"goat\"))) .o_kanban_record:has(span:contains(\"Goats\"))',\n        extra_trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"pig\"))):not(:has(.o_kanban_record))',\n        content: 'check that the horned filter has taken effect',\n        run: () => {},\n    }, ...changeFilter(\"4 Legged tag filter\"),\n    {\n        trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"goat\"))) .o_kanban_record:has(span:contains(\"Goats\"))',\n        extra_trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"pig\"))) .o_kanban_record:has(span:contains(\"Pigs\"))',\n        content: 'check that the 4 legged filter has taken effect',\n        run: () => {},\n    },\n]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\nfunction openProjectUpdateAndReturnToTasks(view, viewClass) {\n    const legacyViewClass = viewClass.replace(\"o_\", \"o_legacy_\");\n    return [{\n            trigger: '.o_project_updates_breadcrumb',\n            content: 'Open Project Update from view : ' + view,\n            extra_trigger: `.${viewClass}, .${legacyViewClass}`,\n        }, {\n            trigger: \".o-kanban-button-new\",\n            content: \"Create a new update from project task view : \" + view,\n            extra_trigger: '.o_pupdate_kanban',\n        }, {\n            trigger: \"button.o_form_button_cancel\",\n            content: \"Discard project update from project task view : \" + view,\n        }, {\n            trigger: \".o_switch_view.o_list\",\n            content: \"Go to list of project update from view \" + view,\n        }, {\n            trigger: '.o_back_button',\n            content: 'Go back to the task view : ' + view,\n            // extra_trigger: '.o_list_view, .o_legacy_list_view', // FIXME: [XBO] uncomment it when the sample data will be displayed after discarding the creation of a project update record.\n        },\n    ];\n}\n\ntour.register('project_update_tour', {\n    test: true,\n    url: '/web',\n},\n[tour.stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_project_kanban',\n    width: 200,\n}, {\n    trigger: '.o_project_name input',\n    run: 'text New Project'\n}, {\n    trigger: '.o_open_tasks',\n    run: function (actions) {\n        actions.auto('.modal:visible .btn.btn-primary');\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n    run: function (actions) {\n        actions.text(\"New\", this.$anchor.find(\"input\"));\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n    auto: true,\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n    extra_trigger: '.o_kanban_group',\n    run: function (actions) {\n        actions.text(\"Done\", this.$anchor.find(\"input\"));\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n    auto: true,\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_kanban_group:eq(0)'\n}, {\n    trigger: '.o_kanban_quick_create div.o_field_char[name=name] input',\n    extra_trigger: '.o_kanban_project_tasks',\n    run: 'text New task'\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_add',\n    extra_trigger: '.o_kanban_project_tasks'\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_kanban_group:eq(0)'\n}, {\n    trigger: '.o_kanban_quick_create div.o_field_char[name=name] input',\n    extra_trigger: '.o_kanban_project_tasks',\n    run: 'text Second task'\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_add',\n    extra_trigger: '.o_kanban_project_tasks'\n}, {\n    trigger: '.o_kanban_group:nth-child(2) .o_kanban_header',\n    run: function () {\n        document.querySelector('.o_kanban_group:nth-child(2) .o_kanban_config.dropdown .dropdown-toggle').dispatchEvent(new Event('click'));\n    }\n}, {\n    trigger: \".dropdown-item.o_column_edit\",\n}, {\n    trigger: \".o_field_widget[name=fold] input\",\n}, {\n    trigger: \".modal-footer button\",\n}, {\n    trigger: \".o_kanban_record .oe_kanban_content\",\n    extra_trigger: '.o_kanban_project_tasks',\n    run: \"drag_and_drop .o_kanban_group:eq(1) \",\n}, {\n    trigger: \".o_project_updates_breadcrumb\",\n    content: 'Open Updates'\n}, {\n    trigger: \".o_add_milestone a\",\n    content: \"Add a first milestone\"\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text New milestone'\n}, {\n    trigger: \"div[name=deadline] .datetimepicker-input\",\n    run: 'text 12/12/2099'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o_add_milestone a\",\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text Second milestone'\n}, {\n    trigger: \"div[name=deadline] .datetimepicker-input\",\n    run: 'text 12/12/2022'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o_rightpanel_milestone:eq(1) .o_milestone_detail\",\n}, {\n    trigger: \"div[name=deadline] .datetimepicker-input\",\n    run: 'text 12/12/2100'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o-kanban-button-new\",\n    content: \"Create a new update\"\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text New update'\n}, {\n    trigger: \".o_form_button_save\"\n}, {\n    trigger: \".o_field_widget[name='description'] h1:contains('Activities')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] h3:contains('Milestones')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li:contains('(12/12/2099 => 12/12/2100)')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li:contains('(due 12/12/2022)')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li:contains('(due 12/12/2100)')\",\n    run: function () {},\n}, {\n    trigger: '.o_back_button',\n    content: 'Go back to the kanban view the project',\n}, {\n    trigger: '.o_switch_view.o_list',\n    content: 'Open List View of Project Updates',\n}, {\n    trigger: '.o_back_button',\n    content: 'Go back to the kanban view the project',\n    extra_trigger: '.o_list_view, .o_legacy_list_view',\n}, {\n    trigger: '.o_switch_view.o_graph',\n    content: 'Open Graph View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Graph\", \"o_graph_view\"), {\n    trigger: '.o_switch_view.o_list',\n    content: 'Open List View of Tasks',\n    extra_trigger: '.o_graph_view',\n}, ...openProjectUpdateAndReturnToTasks(\"List\", \"o_list_view\"), {\n    trigger: '.o_switch_view.o_pivot',\n    content: 'Open Pivot View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Pivot\", \"o_pivot_view\"), {\n    trigger: '.o_switch_view.o_calendar',\n    content: 'Open Calendar View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Calendar\", \"o_calendar_view\"), {\n    trigger: '.o_switch_view.o_activity',\n    content: 'Open Activity View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Activity\", \"o_activity_view\"),\n]);\n", "odoo.define('debug_menu_set_defaults.tour', function (require) {\n    \"use strict\";\n\n    var tour = require('web_tour.tour');\n\n    tour.register('debug_menu_set_defaults', {\n        test: true,\n        url: '/web?debug=1',\n    },\n        [\n            ...tour.stepUtils.goToAppSteps('contacts.menu_contacts', \"Open the contacts menu\"),\n            {\n                content: \"Create a new contact\",\n                trigger: '.o-kanban-button-new',\n            },\n            {\n                content: \"Check that Company is checked by default, and not Individual\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"company\"]:checked',\n                run: function () {},\n            },\n            {\n                content: \"Select the individual radio button\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"person\"]',\n            },\n            {\n                content: \"Open the debug menu\",\n                trigger: '.o_debug_manager button',\n            },\n            {\n                content: \"Click the Set Defaults menu\",\n                trigger: '.o_debug_manager .dropdown-item:contains(Set Defaults)',\n            },\n            {\n                content: \"Choose Company Type = Individual\",\n                trigger: '#formview_default_fields',\n                run: function () {\n                    const element_field = document.querySelector('select#formview_default_fields');\n                    element_field.value = 'company_type';\n                    element_field.dispatchEvent(new Event(\"change\"));\n                },\n            },\n            {\n                content: \"Check that there are conditions\",\n                trigger: '#formview_default_conditions',\n            },\n            {\n                content: \"Save the new default\",\n                trigger: 'footer button:contains(Save default)',\n            },\n            {\n                content: \"Discard the contact creation\",\n                trigger: 'button.o_form_button_cancel',\n            },\n            {\n                trigger: '.o-kanban-button-new',\n            },\n            {\n                content: \"Check that Individual is checked instead of Company\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"person\"]:checked',\n                run: function () {},\n            },\n            {\n                content: \"Discard the contact creation\",\n                trigger: 'button.o_form_button_cancel',\n            },\n            {\n                content: \"Wait for discard\",\n                trigger: '.o_control_panel .o-kanban-button-new',\n                run() {},\n            },\n        ]\n    );\n\n});\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\ntour.register('hr_employee_tour', {\n    test: true,\n    url: '/web',\n}, [\n    tour.stepUtils.showAppsMenuItem(),\n    {\n        content: \"Open Employees app\",\n        trigger: \".o_app[data-menu-xmlid='hr.menu_hr_root']\",\n        run: 'click',\n    },\n    {\n        content: \"Open an Employee Profile\",\n        trigger: \".o_kanban_record_title:contains('Johnny H.')\",\n        run: 'click',\n    },\n    {\n        content: \"Open user account menu\",\n        trigger: \".o_user_menu .oe_topbar_name\",\n        run: 'click',\n    }, {\n        content: \"Open My Profile\",\n        trigger: \"[data-menu=settings]\",\n        run: 'click',\n    },\n]);\n", "/** @odoo-module **/\n\nimport tour from 'web_tour.tour';\n\n/**\n * As 'hr' changes the flow a bit and displays the user preferences form in a full view instead of\n * a modal, we adapt the steps of the original tour accordingly.\n */\ntour.tours['mail/static/tests/tours/user_modify_own_profile_tour.js'].steps = [{\n    content: 'Open user account menu',\n    trigger: '.o_user_menu button',\n}, {\n    content: \"Open preferences / profile screen\",\n    trigger: '[data-menu=settings]',\n}, {\n    content: \"Update the email address\",\n    trigger: 'div[name=\"email\"] input',\n    run: 'text updatedemail@example.com',\n}, ...tour.stepUtils.saveForm()];\n", "/** @odoo-module **/\nimport tour from 'web_tour.tour';\n\nconst todayDate = function() {\n    let now = new Date();\n    let year = now.getFullYear();\n    let month = String(now.getMonth() + 1).padStart(2, '0');\n    let day = String(now.getDate()).padStart(2, '0');\n\n    return `${month}/${day}/${year} 10:00:00`;\n};\n\ntour.register('calendar_appointments_hour_tour', {\n    url: '/web',\n    test: true,\n}, [\n    tour.stepUtils.showAppsMenuItem(),\n    {\n        trigger: '.o_app[data-menu-xmlid=\"calendar.mail_menu_calendar\"]',\n        content: 'Open Calendar',\n        run: 'click',\n    },\n    {\n        trigger: '.o-calendar-button-new',\n        content: 'Create a new event',\n        run: 'click',\n    },\n    {\n        trigger: '#name',\n        content: 'Give a name to the new event',\n        run: 'text TEST EVENT',\n    },\n    {\n        trigger: '#start',\n        content: 'Give a date to the new event',\n        run: `text ${todayDate()}`,\n    },\n    {\n        trigger: '.fa-cloud-upload',\n        content: 'Save the new event',\n        run: 'click',\n    },\n    {\n        trigger: '.dropdown-item:contains(\"Calendar\")',\n        content: 'Go back to Calendar view',\n        run: 'click',\n    },\n    {\n        trigger: '.dropdown-toggle:contains(\"Week\")',\n        content: 'Click to change calendar view',\n        run: 'click',\n    },\n    {\n        trigger: '.dropdown-item:contains(\"Month\")',\n        content: 'Change the calendar view to Month',\n        run: 'click',\n    },\n    {\n        trigger: '.fc-day-header:contains(\"Monday\")',\n        content: 'Change the calendar view to week',\n    },\n    {\n        trigger: '.fc-time:contains(\"10:00\")',\n        content: 'Check the time is properly displayed',\n    },\n    {\n        trigger: '.o_event_title:contains(\"TEST EVENT\")',\n        content: 'Check the event title',\n    },\n]);\n\ntour.register('test_calendar_delete_tour', {\n    test: true,\n},\n[\n    {\n        content: 'Select filter (everybody)',\n        trigger: 'div[data-value=\"all\"] input',\n    },\n    {\n        content: 'Click on the event (focus + waiting)',\n        trigger: 'a .fc-content:contains(\"Test Event\")',\n        async run() {\n            $('a .fc-content:contains(\"Test Event\")').click();\n            await new Promise((r) => setTimeout(r, 1000));\n            $('a .fc-content:contains(\"Test Event\")').click();\n        }\n    },\n    {\n        content: 'Delete the event',\n        trigger: '.o_cw_popover_delete',\n    },\n    {\n        content: 'Validate the deletion',\n        trigger:'button:contains(\"Ok\")',\n        async run() {\n            $('button:contains(\"Ok\")').click();\n            await new Promise((r) => setTimeout(r, 1000));\n        }\n    },\n]);\n\ntour.register('test_calendar_decline_tour', {\n    test: true,\n},\n[\n    {\n        content: 'Click on the event (focus + waiting)',\n        trigger: 'a .fc-content:contains(\"Test Event\")',\n        async run() {\n            $('a .fc-content:contains(\"Test Event\")').click();\n            await new Promise((r) => setTimeout(r, 1000));\n            $('a .fc-content:contains(\"Test Event\")').click();\n        }\n    },\n    {\n        content: 'Delete the event',\n        trigger: '.o_cw_popover_delete',\n    },\n    {\n        content: 'Wait declined status',\n        trigger: '.o_attendee_status_declined',\n    },\n]);\n\ntour.register('test_calendar_decline_with_everybody_filter_tour', {\n    test: true,\n},\n[\n    {\n        content: 'Select filter (everybody)',\n        trigger: 'div[data-value=\"all\"] input',\n    },\n    {\n        content: 'Click on the event (focus + waiting)',\n        trigger: 'a .fc-content:contains(\"Test Event\")',\n        async run() {\n            $('a .fc-content:contains(\"Test Event\")').click();\n            await new Promise((r) => setTimeout(r, 1000));\n            $('a .fc-content:contains(\"Test Event\")').click();\n        }\n    },\n    {\n        content: 'Delete the event',\n        trigger: '.o_cw_popover_delete',\n    },\n    {\n        content: 'Select filter (everybody)',\n        trigger: 'div[data-value=\"all\"] input',\n    },\n    {\n        content: 'Wait declined status',\n        trigger: '.o_attendee_status_declined',\n    },\n]);\n", "odoo.define('hr_holidays.tour_time_off_request_calendar_view', function (require) {\n'use strict';\n\nvar tour = require('web_tour.tour');\n\ntour.register('time_off_request_calendar_view', {\n    test: true,\n    url: '/web',\n},\n[\n    tour.stepUtils.showAppsMenuItem(),\n    {\n        content: \"Open Time Off app\",\n        trigger: '.o_app[data-menu-xmlid=\"hr_holidays.menu_hr_holidays_root\"]',\n    },\n    {\n        content: \"Click on the first Thursday of the year\",\n        trigger: '.fc-day-top.fc-thu',\n        run: () => {\n            const el = document.querySelector('.fc-day-top.fc-thu').firstChild;\n            el.scrollIntoView();\n\n            const fromPosition = el.getBoundingClientRect();\n            fromPosition.x += el.offsetWidth / 2;\n            fromPosition.y += el.offsetHeight / 2;\n\n            el.dispatchEvent(new MouseEvent(\"mousedown\", {\n                bubbles: true,\n                which: 1,\n                button: 0,\n                clientX: fromPosition.x,\n                clientY: fromPosition.y}));\n            el.dispatchEvent(new MouseEvent(\"mouseup\", {\n                bubbles: true,\n                which: 1,\n                button: 0,\n                clientX: fromPosition.x,\n                clientY: fromPosition.y }));\n        }\n    },\n    {\n        content: \"Save the leave\",\n        trigger: '.btn:contains(\"Save\")',\n        run: 'click',\n    }\n]);\n});\n", "odoo.define('survey.tour_test_certification_failure', function (require) {\n'use strict';\n\nvar SurveyFormWidget = require('survey.form');\n/**\n * Speed up fade-in fade-out to avoid useless delay in tests.\n */\nSurveyFormWidget.include({\n    _submitForm: function () {\n        this.fadeInOutDelay = 0;\n        return this._super.apply(this, arguments);\n    }\n});\n\n/**\n * This tour will test that, for the demo certification allowing 2 attempts, a user can\n * try and fail twice and will no longer be able to take the certification.\n */\n\nvar tour = require('web_tour.tour');\n\nvar failSteps = [{ // Page-1\n    content: \"Clicking on Start Certification\",\n    trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Certification\")',\n}, { // Question: Do we sell Acoustic Bloc Screens?\n    content: \"Selecting answer 'No'\",\n    trigger: 'div.js_question-wrapper:contains(\"Do we sell Acoustic Bloc Screens\") label:contains(\"No\")',\n}, { // Question: Select all the existing products\n    content: \"Ticking answer 'Fanta'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Fanta\")'\n}, {\n    content: \"Ticking answer 'Drawer'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Drawer\")'\n}, {\n    content: \"Ticking answer 'Conference chair'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Conference chair\")'\n}, { // Question: Select all the available customizations for our Customizable Desk\n    content: \"Ticking answer 'Color'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Color\")'\n}, {\n    content: \"Ticking answer 'Height'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Height\")'\n}, { // Question: How many versions of the Corner Desk do we have?\n    content: \"Selecting answer '2'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many versions of the Corner Desk do we have\") label:contains(\"2\")',\n}, { // Question: Do you think we have missing products in our catalog? (not rated)\n    content: \"Missing products\",\n    trigger: 'div.js_question-wrapper:contains(\"Do you think we have missing products in our catalog\") textarea',\n    run: \"text I don't know products enough to be able to answer that\",\n}, { // Page-2 Question: How much do we sell our Cable Management Box?\n    content: \"Selecting answer '$80'\",\n    trigger: 'div.js_question-wrapper:contains(\"How much do we sell our Cable Management Box\") label:contains(\"$80\")',\n}, { // Question: Select all the products that sell for $100 or more\n    content: \"Ticking answer 'Corner Desk Right Sit'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Corner Desk Right Sit\")'\n}, {\n    content: \"Ticking answer 'Desk Combination'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Desk Combination\")'\n}, {\n    content: \"Ticking answer 'Office Chair Black'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Office Chair Black\")'\n}, { // Question: What do you think about our prices (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What do you think about our prices\") label:contains(\"Correctly priced\")',\n}, { // Page-3 Question: How many days is our money-back guarantee?\n    content: \"Inputting answer '60'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many days is our money-back guarantee\") input',\n    run: 'text 60'\n}, { // Question: If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it?\n    content: \"Inputting answer '01/06/2020'\",\n    trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it\") input',\n    run: 'text 01/06/2020'\n}, { // Question: If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire?\n    content: \"Inputting answer '01/06/2021 00:00:01'\",\n    trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire\") input',\n    run: 'text 01/06/2021 00:00:01'\n}, { // Question: What day to you think is best for us to start having an annual sale (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What day to you think is best for us to start having an annual sale (not rated)\") input',\n}, { // Question: What day and time do you think most customers are most likely to call customer service (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What day and time do you think most customers are most likely to call customer service (not rated)\") input',\n}, { // Question: How many chairs do you think we should aim to sell in a year (not rated)?\n    content: \"Inputting answer '0'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many chairs do you think we should aim to sell in a year (not rated)\") input',\n    run: 'text 0'\n}, {\n    content: \"Finish Survey\",\n    trigger: 'button[type=\"submit\"]',\n}];\n\nvar retrySteps = [{\n    trigger: 'a:contains(\"Retry\")'\n}];\n\nvar lastSteps = [{\n    trigger: 'h1:contains(\"Thank you!\")',\n    run: function () {\n        if ($('a:contains(\"Retry\")').length === 0) {\n            $('h1:contains(\"Thank you!\")').addClass('tour_success');\n        }\n    }\n}, {\n    trigger: 'h1.tour_success',\n}];\n\ntour.register('test_certification_failure', {\n    test: true,\n    url: '/survey/start/4ead4bc8-b8f2-4760-a682-1fde8daaaaac'\n}, [].concat(failSteps, retrySteps, failSteps, lastSteps));\n\n});\n", "odoo.define('survey.tour_test_certification_success', function (require) {\n'use strict';\n\nvar SurveyFormWidget = require('survey.form');\n/**\n * Speed up fade-in fade-out to avoid useless delay in tests.\n */\nSurveyFormWidget.include({\n    _submitForm: function () {\n        this.fadeInOutDelay = 0;\n        return this._super.apply(this, arguments);\n    }\n});\n\nvar tour = require('web_tour.tour');\n\ntour.register('test_certification_success', {\n    test: true,\n    url: '/survey/start/4ead4bc8-b8f2-4760-a682-1fde8daaaaac'\n},\n[{ // Page-1\n        content: \"Clicking on Start Certification\",\n        trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Certification\")',\n    }, { // Question: Do we sell Acoustic Bloc Screens?\n        content: \"Selecting answer 'Yes'\",\n        trigger: 'div.js_question-wrapper:contains(\"Do we sell Acoustic Bloc Screens\") label:contains(\"Yes\")',\n    }, { // Question: Select all the existing products\n        content: \"Ticking answer 'Chair floor protection'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Chair floor protection\")'\n    }, {\n        content: \"Ticking answer 'Drawer'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Drawer\")'\n    }, {\n        content: \"Ticking answer 'Conference chair'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Conference chair\")'\n    }, { // Question: Select all the available customizations for our Customizable Desk\n        content: \"Ticking answer 'Color'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Color\")'\n    }, {\n        content: \"Ticking answer 'Legs'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Legs\")'\n    }, { // Question: How many versions of the Corner Desk do we have?\n        content: \"Selecting answer '2'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many versions of the Corner Desk do we have\") label:contains(\"2\")',\n    }, { // Question: Do you think we have missing products in our catalog? (not rated)\n        content: \"Missing products\",\n        trigger: 'div.js_question-wrapper:contains(\"Do you think we have missing products in our catalog\") textarea',\n        run: \"text I think we should make more versions of the customizable desk, it's such an amazing product!\",\n    }, { // Page-2 Question: How much do we sell our Cable Management Box?\n        content: \"Selecting answer '$80' (wrong one)\",\n        trigger: 'div.js_question-wrapper:contains(\"How much do we sell our Cable Management Box\") label:contains(\"$80\")',\n    }, { // Question: Select all the products that sell for $100 or more\n        content: \"Ticking answer 'Corner Desk Right Sit'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Corner Desk Right Sit\")'\n    }, {\n        content: \"Ticking answer 'Desk Combination'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Desk Combination\")'\n    }, {\n        content: \"Ticking answer 'Large Desk'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Large Desk\")'\n    }, { // Question: What do you think about our prices (not rated)?\n        content: \"Selecting answer 'Underpriced'\",\n        trigger: 'div.js_question-wrapper:contains(\"What do you think about our prices\") label:contains(\"Underpriced\")',\n    }, { // Page-3 Question: How many days is our money-back guarantee?\n        content: \"Inputting answer '30'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many days is our money-back guarantee\") input',\n        run: 'text 30'\n    }, { // Question: If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it?\n        content: \"Inputting answer '01/08/2020'\",\n        trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it\") input',\n        run: 'text 01/08/2020'\n    }, { // Question: If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire?\n        content: \"Inputting answer '01/07/2021 00:00:01'\",\n        trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire\") input',\n        run: 'text 01/07/2021 00:00:01'\n    }, { // Question: What day to you think is best for us to start having an annual sale (not rated)?\n        content: \"Inputting answer '01/01/2021'\",\n        trigger: 'div.js_question-wrapper:contains(\"What day to you think is best for us to start having an annual sale (not rated)\") input',\n        run: 'text 01/01/2021'\n    }, { // Question: What day and time do you think most customers are most likely to call customer service (not rated)?\n        content: \"Inputting answer '01/01/2021 13:00:01'\",\n        trigger: 'div.js_question-wrapper:contains(\"What day and time do you think most customers are most likely to call customer service (not rated)\") input',\n        run: 'text 01/01/2021 13:00:01'\n    }, { // Question: How many chairs do you think we should aim to sell in a year (not rated)?\n        content: \"Inputting answer '1000'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many chairs do you think we should aim to sell in a year (not rated)\") input',\n        run: 'text 1000'\n    }, {\n        content: \"Finish Survey\",\n        trigger: 'button[type=\"submit\"]',\n    }, {\n        content: \"Thank you\",\n        trigger: 'h1:contains(\"Thank you!\")',\n    }, {\n        content: \"test passed\",\n        trigger: 'div:contains(\"Congratulations, you have passed the test!\")',\n    }\n]);\n\n});\n", "odoo.define('survey.tour_test_survey', function (require) {\n'use strict';\n\nvar tour = require('web_tour.tour');\n\ntour.register('test_survey', {\n    test: true,\n    url: '/survey/start/b137640d-14d4-4748-9ef6-344caaaaaae',\n}, [\n    // Page-1\n    {\n        content: 'Click on Start',\n        trigger: 'button.btn:contains(\"Start\")',\n    }, {\n        content: 'Answer Where do you live',\n        trigger: 'div.js_question-wrapper:contains(\"Where do you live\") input',\n        run: 'text Mordor-les-bains',\n    }, {\n        content: 'Answer Where do you live',\n        trigger: 'div.js_question-wrapper:contains(\"When is your date of birth\") input',\n        run: 'text 05/05/1980',\n    }, {\n        content: 'Answer How frequently do you buy products online',\n        trigger: 'div.js_question-wrapper:contains(\"How frequently do you buy products online\") label:contains(\"Once a month\")',\n    }, {\n        content: 'Answer How many times did you order products on our website',\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website\") input',\n        run: 'text 12',\n    }, {\n        content: 'Submit and go to Next Page',\n        trigger: 'button[value=\"next\"]',\n    },\n    // Page-2\n    {\n        content: 'Answer Which of the following words would you use to describe our products (High Quality)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\")',\n    }, {\n        content: 'Answer Which of the following words would you use to describe our products (Good value for money)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\")',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The new layout and design is fresh and up-to-date)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") td:first',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (It is easy to find the product that I want)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The tool to compare the products is useful to make a choice)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") td:eq(3)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The checkout process is clear and secure)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (I have added products to my wishlist)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") td:last',\n    }, {\n        content: 'Answer Do you have any other comments, questions, or concerns',\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: 'text This is great. Really.',\n    }, {\n        content: 'Click Submit and finish the survey',\n        trigger: 'button[value=\"finish\"]',\n    },\n    // Final page\n    {\n        content: 'Thank you',\n        trigger: 'h1:contains(\"Thank you!\")',\n    }\n]);\n\n});\n", "odoo.define('survey.tour_test_survey_chained_conditional_questions', function (require) {\n'use strict';\n\nconst tour = require('web_tour.tour');\n\ntour.register('test_survey_chained_conditional_questions', {\n    test: true,\n    url: '/survey/start/3cfadce3-3f7e-41da-920d-10fa0eb19527',\n}, [\n    {\n        content: 'Click on Start',\n        trigger: 'button.btn:contains(\"Start\")',\n    }, {\n        content: 'Answer Q1 with Answer 2',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 2\")',\n    }, {\n        content: 'Check that Q4 and Q5 are visible',\n        trigger: 'div.js_question-wrapper:contains(Q4)',\n        extra_trigger: 'div.js_question-wrapper:contains(Q5)',\n        run: () => {\n            const selector = 'div.js_question-wrapper.d-none';\n            if (document.querySelectorAll(selector).length !== 2) {\n                throw new Error('Q2 and Q3 should be hidden.');\n            }\n        },\n    }, {\n        content: 'Answer Q1 with Answer 1',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 1\")',\n    }, {\n        content: 'Answer Q2 with Answer 1',\n        trigger: 'div.js_question-wrapper:contains(\"Q2\") label:contains(\"Answer 1\")',\n        run: function (actions) {\n            const selector = 'div.js_question-wrapper.d-none';\n            if (document.querySelectorAll(selector).length !== 3) {\n                throw new Error('Q3, Q4 and Q5 should be hidden.');\n            }\n            // Select Answer 1, in order to trigger the display of Q3.\n            actions.click(this.$anchor);\n        }\n    }, {\n        content: 'Answer Q3 with Answer 1',\n        trigger: 'div.js_question-wrapper:contains(\"Q3\") label:contains(\"Answer 1\")',\n    }, {\n        content: 'Answer Q1 with Answer 3',  // This should hide all remaining questions.\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 3\")',\n    }, {\n        content: 'Check that only question 1 is now visible',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\")',\n        run: () => {\n            const selector = 'div.js_question-wrapper.d-none';\n            if (document.querySelectorAll(selector).length !== 4) {\n                throw new Error('Q2, Q3, Q4 and Q5 should have been hidden.');\n            }\n        }\n    }, {\n        content: 'Click Submit and finish the survey',\n        trigger: 'button[value=\"finish\"]',\n    },\n    // Final page\n    {\n        content: 'Thank you',\n        trigger: 'h1:contains(\"Thank you!\")',\n    }\n\n]);\n\n});\n", "odoo.define('survey.tour_test_survey_prefill', function (require) {\n'use strict';\n\nvar tour = require('web_tour.tour');\n\ntour.register('test_survey_prefill', {\n    test: true,\n    url: '/survey/start/b137640d-14d4-4748-9ef6-344caaaaaae'\n},\n[{      // Page-1\n        trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Survey\")',\n    }, { // Question: Where do you live ?\n        trigger: 'div.js_question-wrapper:contains(\"Where do you live ?\") input',\n        run: 'text Grand-Rosiere',\n    }, { // Question: When is your date of birth ?\n        trigger: 'div.js_question-wrapper:contains(\"When is your date of birth ?\") input',\n        run: 'text 05/05/1980',\n    }, { // Question: How frequently do you buy products online ?\n        trigger: 'div.js_question-wrapper:contains(\"How frequently do you buy products online ?\") label:contains(\"Once a week\")',\n    }, { // Question: How many times did you order products on our website ?\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website ?\") input',\n        run: 'text 42',\n    }, {\n        content: 'Click on Next Page',\n        trigger: 'button[value=\"next\"]',\n    },\n    // Page-2\n    { // Question: Which of the following words would you use to describe our products ?\n        content: 'Answer Which of the following words would you use to describe our products (High Quality)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\")',\n    }, {\n        content: 'Answer Which of the following words would you use to describe our products (Good value for money)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\")',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The new layout and design is fresh and up-to-date)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") td:first',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (It is easy to find the product that I want)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The tool to compare the products is useful to make a choice)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") td:eq(3)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The checkout process is clear and secure)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (I have added products to my wishlist)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") td:last',\n    }, {\n        content: 'Answer Do you have any other comments, questions, or concerns',\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: 'text Is the prefill working?',\n    }, {\n        // Go back to previous page\n        content: 'Click on the previous page name in the breadcrumb',\n        trigger: 'ol.breadcrumb a:first',\n    }, {\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website ?\") input',\n        run: function () {\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"How many times did you order products on our website ?\") input');\n            if ($inputQ3.val() === '42.0') {\n                $('.o_survey_title').addClass('prefilled');\n            }\n        }\n    }, {\n        trigger: '.o_survey_title.prefilled',\n        run: function () {\n            // check that all the answers are prefilled in Page 1\n            var $inputQ1 = $('div.js_question-wrapper:contains(\"Where do you live ?\") input');\n            if ($inputQ1.val() !== 'Grand-Rosiere') {\n                return;\n            }\n\n            var $inputQ2 = $('div.js_question-wrapper:contains(\"When is your date of birth ?\") input');\n            if ($inputQ2.val() !== '05/05/1980') {\n                return;\n            }\n\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"How frequently do you buy products online ?\") label:contains(\"Once a week\") input');\n            if (!$inputQ3.is(':checked')) {\n                return;\n            }\n\n            var $inputQ4 = $('div.js_question-wrapper:contains(\"How many times did you order products on our website ?\") input');\n            if ($inputQ4.val() !== '42.0') {\n                return;\n            }\n\n            $('.o_survey_title').addClass('tour_success');\n        }\n    }, {\n        trigger: '.o_survey_title.tour_success'\n    }, {\n        content: 'Click on Next Page',\n        trigger: 'button[value=\"next\"]',\n    }, {\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: function () {\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea');\n            if ($inputQ3.val() === \"Is the prefill working?\") {\n                $('.o_survey_title').addClass('prefilled2');\n            }\n        }\n    }, {\n        trigger: '.o_survey_title.prefilled2',\n        run: function () {\n            // check that all the answers are prefilled in Page 2\n            var $input1Q1 = $('div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\") input');\n            if (!$input1Q1.is(':checked')) {\n                return;\n            }\n\n            var $input2Q1 = $('div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\") input');\n            if (!$input2Q1.is(':checked')) {\n                return;\n            }\n\n            var $input1Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") input:first');\n            if (!$input1Q2.is(':checked')) {\n                return;\n            }\n\n            var $input2Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") input:eq(2)');\n            if (!$input2Q2.is(':checked')) {\n                return;\n            }\n\n            var $input3Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") input:eq(3)');\n            if (!$input3Q2.is(':checked')) {\n                return;\n            }\n\n            var $input4Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") input:eq(2)');\n            if (!$input4Q2.is(':checked')) {\n                return;\n            }\n\n            var $input5Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") input:last');\n            if (!$input5Q2.is(':checked')) {\n                return;\n            }\n\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea');\n            if ($inputQ3.val() !== \"Is the prefill working?\") {\n                return;\n            }\n\n            $('.o_survey_title').addClass('tour_success_2');\n        }\n    }, {\n        trigger: '.o_survey_title.tour_success_2'\n    }\n]);\n\n});\n", "odoo.define('survey.session_manage_test', function (require) {\n\"use strict\";\n\nvar SessionManager = require('survey.session_manage');\n/**\n * Small override for test/tour purposes.\n */\nSessionManager.include({\n    /**\n     * - Trigger the fetch of answer results immediately at the start.\n     * (Instead of wasting 2 seconds waiting after the start).\n     * - Set the fade in/out time to 1 ms to avoid unnecessary delays.\n     * - Avoid refreshing the results every 2 seconds\n     */\n    start: function () {\n        var self = this;\n        return this._super.apply(this, arguments)\n            .then(this._refreshResults.bind(this))\n            .then(function () {\n                self.fadeInOutTime = 1;\n                clearInterval(self.resultsRefreshInterval);\n            });\n    },\n\n    /**\n     * Force the timer to \"now\" to avoid introducing potential test breaking\n     * timely variables (rpc/small server delay/...) if the start_question_time flickers.\n     */\n    _startTimer: function () {\n        this.$el.data('timer', moment.utc());\n        return this._super.apply(this, arguments);\n    }\n});\n\nreturn SessionManager;\n\n});\n", "odoo.define('survey.test_survey_session_create_tour', function (require) {\n\"use strict\";\n\nvar tour = require('web_tour.tour');\nvar surveySessionTools = require('survey.session_tour_tools');\n\n/**\n * Small tour that will simply start the session and wait for attendees.\n */\ntour.register('test_survey_session_create_tour', {\n    url: \"/web\",\n    test: true,\n}, [].concat(surveySessionTools.accessSurveySteps, [{\n    trigger: 'button[name=\"action_start_session\"]',\n}, {\n    trigger: '.o_survey_session_attendees_count:contains(\"0\")',\n    run: function () {} // check session is correctly started\n}]));\n\n});\n", "odoo.define('survey.test_survey_session_manage_tour', function (require) {\n\"use strict\";\n\nvar tour = require('web_tour.tour');\nvar surveySessionTools = require('survey.session_tour_tools');\n\n/**\n * Since the chart is rendered using SVG, we can't use jQuery triggers to check if everything\n * is correctly rendered.\n * This helper method returns the chart data (Chartjs framework specific) in the following structure:\n * [{ value, backgroundColor, labelColor }]\n */\nvar getChartData = function () {\n    var chartData = [];\n    var rootWidget = odoo.__DEBUG__.services['root.widget'];\n    var surveyManagePublicWidget = rootWidget.publicWidgets.find(function (widget) {\n        return widget.$el.hasClass('o_survey_session_manage');\n    });\n\n    if (!surveyManagePublicWidget) {\n        return chartData;\n    }\n\n    surveyManagePublicWidget.resultsChart.chart.data.datasets[0].data.forEach(function (value, index) {\n        chartData.push({\n            value: value,\n            backgroundColor: surveyManagePublicWidget.resultsChart._getBackgroundColor({dataIndex: index}),\n            labelColor: surveyManagePublicWidget.resultsChart._getLabelColor({dataIndex: index}),\n        });\n    });\n\n    return chartData;\n};\n\nvar nextScreen = function () {\n    var e = $.Event('keydown');\n    e.keyCode = 39; // arrow-right\n    $(document).trigger(e);\n};\n\nvar previousScreen = function () {\n    var e = $.Event('keydown');\n    e.keyCode = 37; // arrow-left\n    $(document).trigger(e);\n};\n\nvar REGULAR_ANSWER_COLOR = '#212529';\nvar CORRECT_ANSWER_COLOR = '#2CBB70';\nvar WRONG_ANSWER_COLOR = '#D9534F';\n\n/**\n * A 'regular' answer is an answer that is nor correct, nor incorrect.\n * The check is based on the specific opacity (0.8) and color of those answers.\n */\nvar isRegularAnswer = function (answer) {\n    return answer.backgroundColor.includes('0.8') &&\n        answer.labelColor === REGULAR_ANSWER_COLOR;\n};\n\n/**\n * The check is based on the specific opacity (0.8) and color of correct answers.\n */\nvar isCorrectAnswer = function (answer) {\n    return answer.backgroundColor.includes('0.8') &&\n        answer.labelColor === CORRECT_ANSWER_COLOR;\n};\n\n/**\n * The check is based on the specific opacity (0.2) and color of incorrect answers.\n */\nvar isIncorrectAnswer = function (answer) {\n    return answer.backgroundColor.includes('0.2') &&\n        answer.labelColor === WRONG_ANSWER_COLOR;\n};\n\n/**\n * Tour that will test the whole survey session from the host point of view.\n *\n * Break down of the main points:\n * - Open the 'session manager' (the session was already created by a previous tour)\n * - Display the nickname question, and move to the next one (as answers are not displayed)\n * - Check answers are correctly displayed for the 3 'simple' question types (text, date, datetime)\n * - Move to the choice question and check that answers are displayed\n *   (The check is rather complex, see 'getChartData' for details)\n * - If everything is correctly displayed, move to the next question\n * - On the scored choice question, check that the screens are correctly chained:\n *   no results displayed -> results displayed -> correct/incorrect answers -> leaderboard\n * - On the scored + timed multiple choice question, check the same than previous question,\n *   except that the results are supposed to be displayed automatically when the question timer runs out\n * - Test the 'back' behavior and check that screens are reversed correctly\n * - Check that our final leaderboard is correct based on attendees answers\n * - Close the survey session\n */\ntour.register('test_survey_session_manage_tour', {\n    url: \"/web\",\n    test: true,\n}, [].concat(surveySessionTools.accessSurveySteps, [{\n    trigger: 'button[name=\"action_open_session_manager\"]',\n}, {\n    trigger: 'h1:contains(\"Nickname\")',\n    run: function () {} // check nickname question is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: 'h1:contains(\"Text Question\")',\n    run: function () {} // check text question is displayed\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"3 / 3\")',\n    run: function () {} // check we have 3 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 1 is the best\")',\n    run: function () {} // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 2 rulez\")',\n    run: function () {} // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 3 will crush you\")',\n    run: function () {} // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    run: function () {} // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010\")',\n    run: function () {} // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011\")',\n    run: function () {} // check attendee 2 answer is displayed\n}, {\n    trigger: 'h1',\n    run: previousScreen\n}, {\n    trigger: 'h1:contains(\"Text Question\")',\n    run: function () {} // check text question is displayed\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"3 / 3\")',\n    run: function () {} // check we have 3 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 1 is the best\")',\n    run: function () {} // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 2 rulez\")',\n    run: function () {} // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 3 will crush you\")',\n    run: function () {} // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    run: function () {} // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010\")',\n    run: function () {} // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011\")',\n    run: function () {} // check attendee 2 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    run: function () {} // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010 10:00:00\")',\n    run: function () {} // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011 15:55:55\")',\n    run: function () {} // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: 'h1:contains(\"Regular Simple Choice\")',\n    run: function () {\n        var chartData = getChartData();\n        if (chartData.length !== 3) {\n            console.error('Chart data should contain 3 records!');\n            return;\n        }\n\n        var firstAnswerData = chartData[0];\n        if (firstAnswerData.value !== 2 || !isRegularAnswer(firstAnswerData)) {\n            console.error('First answer should be picked by 2 users!');\n            return;\n        }\n\n        var secondAnswerData = chartData[1];\n        if (secondAnswerData.value !== 1 || !isRegularAnswer(secondAnswerData)) {\n            console.error('Second answer should be picked by 1 user!');\n            return;\n        }\n\n        var thirdAnswerData = chartData[2];\n        if (thirdAnswerData.value !== 0 || !isRegularAnswer(thirdAnswerData)) {\n            console.error('Third answer should be picked by no users!');\n            return;\n        }\n\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Scored Simple Choice\")',\n    run: function () {\n        var chartData = getChartData();\n        if (chartData.length !== 4) {\n            console.error('Chart data should contain 4 records!');\n            return;\n        }\n\n        for (var i = 0; i < chartData.length; i++) {\n            if (chartData[i].value !== 0) {\n                console.error(\n                    'Chart data should all be 0 because \"next screen\" that shows ' +\n                    'answers values is not triggered yet!');\n                return;\n            }\n        }\n\n        nextScreen();\n        chartData = getChartData();\n\n        var firstAnswerData = chartData[0];\n        if (firstAnswerData.value !== 1 || !isRegularAnswer(firstAnswerData)) {\n            console.error(\n                'First answer should be picked by 1 user and its correctness should not be shown yet!'\n            );\n            return;\n        }\n\n        var secondAnswerData = chartData[1];\n        if (secondAnswerData.value !== 1 || !isRegularAnswer(secondAnswerData)) {\n            console.error(\n                'Second answer should be picked by 1 user and its correctness should not be shown yet!'\n            );\n            return;\n        }\n\n        var thirdAnswerData = chartData[2];\n        if (thirdAnswerData.value !== 1 || !isRegularAnswer(thirdAnswerData)) {\n            console.error(\n                'Third answer should be picked by 1 user and its correctness should not be shown yet!'\n            );\n            return;\n        }\n\n        var fourthAnswerData = chartData[3];\n        if (fourthAnswerData.value !== 0 || !isRegularAnswer(fourthAnswerData)) {\n            console.error(\n                'Fourth answer should be picked by no users and its correctness should not be shown yet!'\n            );\n            return;\n        }\n\n        nextScreen();\n        chartData = getChartData();\n\n        firstAnswerData = chartData[0];\n        if (firstAnswerData.value !== 1 || !isCorrectAnswer(firstAnswerData)) {\n            console.error(\n                'First answer should be picked by 1 user and it should be correct!'\n            );\n            return;\n        }\n\n        secondAnswerData = chartData[1];\n        if (secondAnswerData.value !== 1 || !isIncorrectAnswer(secondAnswerData)) {\n            console.error(\n                'Second answer should be picked by 1 user and it should be incorrect!'\n            );\n            return;\n        }\n\n        thirdAnswerData = chartData[2];\n        if (thirdAnswerData.value !== 1 || !isIncorrectAnswer(thirdAnswerData)) {\n            console.error(\n                'Third answer should be picked by 1 user and it should be incorrect!'\n            );\n            return;\n        }\n\n        fourthAnswerData = chartData[3];\n        if (fourthAnswerData.value !== 0 || !isIncorrectAnswer(fourthAnswerData)) {\n            console.error(\n                'Fourth answer should be picked by no users and it should be incorrect!'\n            );\n            return;\n        }\n\n        nextScreen();\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Timed Scored Multiple Choice\")',\n    run: function () {\n        var chartData = getChartData();\n        if (chartData.length !== 3) {\n            console.error('Chart data should contain 4 records!');\n            return;\n        }\n\n        for (var i = 0; i < chartData.length; i++) {\n            if (chartData[i].value !== 0) {\n                console.error(\n                    'Chart data should all be 0 because \"next screen\" that shows ' +\n                    'answers values is not triggered yet!');\n                return;\n            }\n        }\n\n        // after 1 second, results are displayed automatically because question timer runs out\n        // we add 1 extra second because of the way the timer works:\n        // it only triggers the time_up event 1 second AFTER the delay is passed\n        setTimeout(function () {\n            chartData = getChartData();\n            var firstAnswerData = chartData[0];\n            if (firstAnswerData.value !== 2 || !isRegularAnswer(firstAnswerData)) {\n                console.error(\n                    'First answer should be picked by 2 users and its correctness should not be shown yet!'\n                );\n                return;\n            }\n\n            var secondAnswerData = chartData[1];\n            if (secondAnswerData.value !== 2 || !isRegularAnswer(secondAnswerData)) {\n                console.error(\n                    'Second answer should be picked by 2 users and its correctness should not be shown yet!'\n                );\n                return;\n            }\n\n            var thirdAnswerData = chartData[2];\n            if (thirdAnswerData.value !== 1 || !isRegularAnswer(thirdAnswerData)) {\n                console.error(\n                    'Third answer should be picked by 1 user and its correctness should not be shown yet!'\n                );\n                return;\n            }\n\n            nextScreen();\n            chartData = getChartData();\n\n            firstAnswerData = chartData[0];\n            if (firstAnswerData.value !== 2 || !isCorrectAnswer(firstAnswerData)) {\n                console.error(\n                    'First answer should be picked by 2 users and it should be correct!'\n                );\n                return;\n            }\n\n            secondAnswerData = chartData[1];\n            if (secondAnswerData.value !== 2 || !isCorrectAnswer(secondAnswerData)) {\n                console.error(\n                    'Second answer should be picked by 2 users and it should be correct!'\n                );\n                return;\n            }\n\n            thirdAnswerData = chartData[2];\n            if (thirdAnswerData.value !== 1 || !isIncorrectAnswer(thirdAnswerData)) {\n                console.error(\n                    'Third answer should be picked by 1 user and it should be incorrect!'\n                );\n                return;\n            }\n\n            nextScreen();\n        }, 2100);\n    }\n}, {\n    trigger: 'h1:contains(\"Final Leaderboard\")',\n    run: function () {} // Final Leaderboard is displayed\n}, {\n    trigger: 'h1',\n    run: function () {\n        // previous screen testing\n        previousScreen();\n        var chartData = getChartData();\n\n        var firstAnswerData = chartData[0];\n        if (firstAnswerData.value !== 2 || !isCorrectAnswer(firstAnswerData)) {\n            console.error(\n                'First answer should be picked by 2 users and it should be correct!'\n            );\n            return;\n        }\n\n        var secondAnswerData = chartData[1];\n        if (secondAnswerData.value !== 2 || !isCorrectAnswer(secondAnswerData)) {\n            console.error(\n                'Second answer should be picked by 2 users and it should be correct!'\n            );\n            return;\n        }\n\n        var thirdAnswerData = chartData[2];\n        if (thirdAnswerData.value !== 1 || !isIncorrectAnswer(thirdAnswerData)) {\n            console.error(\n                'Third answer should be picked by 1 user and it should be incorrect!'\n            );\n            return;\n        }\n\n        previousScreen();\n        chartData = getChartData();\n\n        firstAnswerData = chartData[0];\n        if (firstAnswerData.value !== 2 || !isRegularAnswer(firstAnswerData)) {\n            console.error(\n                'First answer should be picked by 2 users and its correctness should not be shown!'\n            );\n            return;\n        }\n\n        secondAnswerData = chartData[1];\n        if (secondAnswerData.value !== 2 || !isRegularAnswer(secondAnswerData)) {\n            console.error(\n                'Second answer should be picked by 2 users and its correctness should not be shown!'\n            );\n            return;\n        }\n\n        thirdAnswerData = chartData[2];\n        if (thirdAnswerData.value !== 1 || !isRegularAnswer(thirdAnswerData)) {\n            console.error(\n                'Third answer should be picked by 1 user and its correctness should not be shown!'\n            );\n            return;\n        }\n\n        previousScreen();\n        chartData = getChartData();\n\n        for (var i = 0; i < chartData.length; i++) {\n            if (chartData[i].value !== 0) {\n                console.error(\n                    'Chart data should all be 0 because \"next screen\" that shows ' +\n                    'answers values is not triggered yet!');\n                return;\n            }\n        }\n\n        // Now we go forward to the \"Final Leaderboard\" again (3 times)\n        for (i = 0; i < 3; i++) {\n            nextScreen();\n        }\n    }\n}, {\n    trigger: 'h1:contains(\"Final Leaderboard\")',\n    run: function () {} // Final Leaderboard is displayed\n}, {\n    trigger: '.o_survey_session_close:has(\"i.fa-close\")'\n}, {\n    trigger: 'button[name=\"action_start_session\"]',\n    run: function () {} // check that we can start another session\n}]));\n\n});\n", "odoo.define('survey.test_survey_session_start_tour', function (require) {\n\"use strict\";\n\nvar tour = require('web_tour.tour');\nvar surveySessionTools = require('survey.session_tour_tools');\n\n/**\n * Small tour that will open the session manager and check\n * that the attendees are accounted for, then start the session\n * by going to the first question.\n */\ntour.register('test_survey_session_start_tour', {\n    url: \"/web\",\n    test: true,\n}, [].concat(surveySessionTools.accessSurveySteps, [{\n    trigger: 'button[name=\"action_open_session_manager\"]',\n}, {\n    trigger: '.o_survey_session_attendees_count:contains(\"3\")',\n    run: function () {} // check attendees count\n}, {\n    trigger: 'h1',\n    run: function () {\n        var e = $.Event('keydown');\n        e.keyCode = 39; // arrow-right\n        $(document).trigger(e); // start session\n    }\n}, {\n    trigger: 'h1:contains(\"Nickname\")',\n    run: function () {} // check first question is displayed\n}]));\n\n});\n", "odoo.define('survey.session_tour_tools', function (require) {\n'use strict';\n\nvar tour = require('web_tour.tour');\n\n/**\n * Tool that gathers common steps to every 'survey session' tours.\n */\nreturn {\n    accessSurveySteps: [tour.stepUtils.showAppsMenuItem(), {\n        trigger: '.o_app[data-menu-xmlid=\"survey.menu_surveys\"]',\n        edition: 'community'\n    }, {\n        trigger: '.o_app[data-menu-xmlid=\"survey.menu_surveys\"]',\n        edition: 'enterprise'\n    }, {\n        trigger: '.oe_kanban_card:contains(\"User Session Survey\")',\n    }]\n};\n\n});\n", "odoo.define('website_hr_recruitment.tour', function(require) {\n    'use strict';\n\n    var tour = require(\"web_tour.tour\");\n    const wTourUtils = require(\"website.tour_utils\");\n\n    function applyForAJob(jobName, application) {\n        return [{\n            content: \"Select Job\",\n            trigger: `.oe_website_jobs h3 span:contains(${jobName})`,\n        }, {\n            content: \"Apply\",\n            trigger: \".js_hr_recruitment a:contains('Apply')\",\n        }, {\n            content: \"Complete name\",\n            trigger: \"input[name=partner_name]\",\n            run: `text ${application.name}`,\n        }, {\n            content: \"Complete Email\",\n            trigger: \"input[name=email_from]\",\n            run: `text ${application.email}`,\n        }, {\n            content: \"Complete phone number\",\n            trigger: \"input[name=partner_mobile]\",\n            run: `text ${application.phone}`,\n        }, {\n            content: \"Complete Subject\",\n            trigger: \"textarea[name=description]\",\n            run: `text ${application.subject}`,\n        }, { // TODO: Upload a file ?\n            content: \"Send the form\",\n            trigger: \".s_website_form_send\",\n        }, {\n            content: \"Check the form is submitted without errors\",\n            trigger: \".oe_structure:has(h1:contains('Congratulations'))\",\n        }];\n    }\n\n    tour.register('website_hr_recruitment_tour', {\n        test: true,\n        url: '/jobs',\n    }, [\n        ...applyForAJob('Guru', {\n            name: 'John Smith',\n            email: 'john@smith.com',\n            phone: '118.218',\n            subject: '### [GURU] HR RECRUITMENT TEST DATA ###',\n        }),\n        {\n            content: \"Go back to the jobs page\",\n            trigger: \"body\",\n            run: () => {\n                window.location.href = '/jobs';\n            },\n        },\n        ...applyForAJob('Internship', {\n            name: 'Jack Doe',\n            email: 'jack@doe.com',\n            phone: '118.712',\n            subject: '### HR [INTERN] RECRUITMENT TEST DATA ###',\n        }),\n    ]);\n\n    wTourUtils.registerWebsitePreviewTour('website_hr_recruitment_tour_edit_form', {\n        test: true,\n        url: '/jobs',\n    }, [{\n        content: 'Go to the Guru job page',\n        trigger: 'iframe a[href*=\"guru\"]',\n    }, {\n        content: 'Go to the Guru job form',\n        trigger: 'iframe a[href*=\"apply\"]',\n    }, {\n        content: 'Check if the Guru form is present',\n        trigger: 'iframe form'\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: 'Add a fake default value for the job_id field',\n        trigger: \"body\",\n        run: () => {\n            // It must be done in this way because the editor does not allow to\n            // put a default value on a field with type=\"hidden\".\n            document.querySelector('.o_iframe:not(.o_ignore_in_tour)').contentDocument.querySelector('input[name=\"job_id\"]').value = 'FAKE_JOB_ID_DEFAULT_VAL';\n        },\n    }, {\n        content: 'Edit the form',\n        trigger: 'iframe input[type=\"file\"]',\n    }, {\n        content: 'Add a new field',\n        trigger: 'we-button[data-add-field]',\n    }, {\n        content: 'Save',\n        trigger: 'button[data-action=\"save\"]',\n    }, {\n        content: 'Go back to /jobs page after save',\n        trigger: 'iframe body:not(.editor_enable)',\n        run: () => {\n            window.location.href = wTourUtils.getClientActionUrl('/jobs');\n        }\n    }, {\n        content: 'Go to the Internship job page',\n        trigger: 'iframe a[href*=\"internship\"]',\n    }, {\n        content: 'Go to the Internship job form',\n        trigger: 'iframe a[href*=\"apply\"]',\n    }, {\n        content: 'Check that a job_id has been loaded',\n        trigger: 'iframe form',\n        run: () => {\n            const selector =\n                'input[name=\"job_id\"]:not([value=\"\"]):not([value = \"FAKE_JOB_ID_DEFAULT_VAL\"])';\n            if (!document.querySelector('.o_iframe:not(.o_ignore_in_tour)').contentDocument.querySelector(selector)) {\n                console.error('The job_id field has a wrong value');\n            }\n        }\n    },\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: 'Verify that the job_id field has kept its default value',\n        trigger: \"body\",\n        run: () => {\n            if (!document.querySelector('.o_iframe:not(.o_ignore_in_tour)').contentDocument.querySelector('input[name=\"job_id\"][value=\"FAKE_JOB_ID_DEFAULT_VAL\"]')) {\n                console.error('The job_id field has lost its default value');\n            }\n        }\n    },\n]);\n\n    return {};\n});\n", "odoo.define('auth_totp.tours', function(require) {\n\"use strict\";\n\nconst tour = require('web_tour.tour');\nconst ajax = require('web.ajax');\n\nfunction openRoot() {\n    return [{\n        content: \"return to client root to avoid race condition\",\n        trigger: 'body',\n        run() {\n            $('body').addClass('wait');\n            window.location = '/web';\n        }\n    }, {\n        content: \"wait for client reload\",\n        trigger: 'body:not(.wait)',\n        run() {}\n    }];\n}\nfunction openUserProfileAtSecurityTab() {\n    return [{\n        content: 'Open user account menu',\n        trigger: '.o_user_menu .oe_topbar_name',\n        run: 'click',\n    }, {\n        content: \"Open preferences / profile screen\",\n        trigger: '[data-menu=settings]',\n        run: 'click',\n    }, {\n        content: \"Switch to security tab\",\n        trigger: 'a[role=tab]:contains(\"Account Security\")',\n        run: 'click',\n    }];\n}\n\n/**\n * Checks that the TOTP button is in the specified state (true = enabled =\n * can disable, false = disabled = can enable), then closes the profile dialog\n * if it's one (= hr not installed).\n *\n * If no totp state is provided, just checks that the toggle exists.\n */\nfunction closeProfileDialog({content, totp_state}) {\n    let trigger;\n    switch (totp_state) {\n    case true: trigger = 'button[name=action_totp_disable]'; break;\n    case false: trigger = 'button[name=action_totp_enable_wizard]'; break;\n    case undefined: trigger = 'button.o_auth_2fa_btn'; break;\n    default: throw new Error(`Invalid totp state ${totp_state}`)\n    }\n\n    return [{\n        content,\n        trigger,\n        run() {\n            const $modal = this.$anchor.parents('.o_dialog_container');\n            if ($modal.length) {\n                $modal.find('button[name=preference_cancel]').click()\n            }\n        }\n    }, {\n        trigger: 'body',\n        async run() {\n            while (document.querySelector('.o_dialog_container .o_dialog')) {\n                await Promise.resolve();\n            }\n            this.$anchor.addClass('dialog-closed');\n        },\n    }, {\n        trigger: 'body.dialog-closed',\n        run() {},\n    }];\n}\n\ntour.register('totp_tour_setup', {\n    test: true,\n    url: '/web'\n}, [...openUserProfileAtSecurityTab(), {\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_enable_wizard]',\n}, {\n    content: \"Check that we have to enter enhanced security mode and input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text demo',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"When requested to do so\")',\n    run() {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    async run(helpers) {\n        const $secret = this.$anchor.closest('div').find('[name=secret] span:first-child');\n        const $copyBtn = $secret.find('button');\n        $copyBtn.remove();\n        const token = await ajax.jsonRpc('/totphook', 'call', {\n            secret: $secret.text()\n        });\n        helpers.text(token, '[name=code] input');\n        helpers.click('button.btn-primary:contains(Activate)');\n        $('body').addClass('got-token')\n    }\n}, {\n    content: 'wait for rpc',\n    trigger: 'body.got-token',\n    run() {}\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n...closeProfileDialog({\n    content: \"Check that the button has changed\",\n    totp_state: true,\n}),\n]);\n\ntour.register('totp_login_enabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    async run(helpers) {\n        // TODO: if tours are ever async-aware the click should get moved out,\n        //       but currently there's no great way to make the tour wait until\n        //       we've retrieved and set the token: `:empty()` is aboutthe text\n        //       content of the HTML element, not the JS value property. We\n        //       could set a class but that's really no better than\n        //       procedurally clicking the button after we've set the input.\n        const token = await ajax.jsonRpc('/totphook', 'call', {});\n        helpers.text(token);\n        helpers.click('button:contains(\"Log in\")');\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .oe_topbar_name\",\n    run() {}\n}]);\n\ntour.register('totp_login_device', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"check remember device box\",\n    trigger: 'label[for=switch-remember]',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    async run(helpers) {\n        const token = await ajax.jsonRpc('/totphook', 'call', {})\n        helpers.text(token);\n        helpers.click('button:contains(\"Log in\")');\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .oe_topbar_name\",\n    run: 'click',\n}, {\n    content: \"click the Log out button\",\n    trigger: '.dropdown-item[data-menu=logout]',\n}, {\n    content: \"check that we're back on the login page or go to it\",\n    trigger: 'input#login, a:contains(Log in)'\n}, {\n    content: \"input login again\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password again',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button again\",\n    trigger: 'button:contains(\"Log in\")',\n},  {\n    content: \"check we're logged in without 2FA\",\n    trigger: \".o_user_menu .oe_topbar_name\",\n    run() {}\n},\n// now go and disable two-factor authentication would be annoying to do in a separate tour\n// because we'd need to login & totp again as HttpCase.authenticate can't\n// succeed w/ totp enabled\n...openUserProfileAtSecurityTab(),\n{\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_disable]',\n}, {\n    content: \"Check that we have to enter enhanced security mode and input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text demo',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n...closeProfileDialog({\n    content: \"Check that the button has changed\",\n    totp_state: false\n}),\n]);\n\ntour.register('totp_login_disabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n},\n// normally we'd end the tour here as it's all we care about but there are a\n// bunch of ongoing queries from the loading of the web client which cause\n// issues, so go and open the preferences / profile screen to make sure\n// everything settles down\n...openUserProfileAtSecurityTab(),\n// close the dialog if that makes sense\n...closeProfileDialog({})\n]);\n\nconst columns = {};\ntour.register('totp_admin_disables', {\n    test: true,\n    url: '/web'\n}, [tour.stepUtils.showAppsMenuItem(), {\n    content: 'Go to settings',\n    trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n}, {\n    content: 'Wait for page',\n    trigger: '.o_menu_brand:contains(\"Settings\")',\n    run() {}\n}, {\n    content: \"Open Users menu\",\n    trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n}, {\n    content: \"Open Users view\",\n    trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n    run(helpers) {\n        // funny story: the users view we're trying to reach, sometimes we're\n        // already there, but if we re-click the next step executes before the\n        // action has the time to re-load, the one after that doesn't, and our\n        // selection get discarded by the action reloading, so here try to\n        // see if we're already on the users action through the breadcrumb and\n        // just close the menu if so\n        const $crumb = $('.breadcrumb');\n        if ($crumb.text().indexOf('Users') === -1) {\n            // on general settings page, click menu\n            helpers.click();\n        } else {\n            // else close menu\n            helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n        }\n    }\n}, {\n    content: \"Find Demo User\",\n    trigger: 'td.o_data_cell:contains(\"demo\")',\n    run(helpers) {\n        const $titles = this.$anchor.closest('table').find('tr:first th');\n        for (let i=0; i<$titles.length; ++i) {\n            columns[$titles[i].getAttribute('data-name')] = i;\n        }\n        const $row = this.$anchor.closest('tr');\n        const sel = $row.find('.o_list_record_selector input[type=checkbox]');\n        helpers.click(sel);\n    }\n}, {\n    content: \"Open Actions menu\",\n    trigger: 'button.dropdown-toggle:contains(\"Action\")'\n}, {\n    content: \"Select totp remover\",\n    trigger: 'span.dropdown-item:contains(Disable two-factor authentication)'\n}, { // enhanced security yo\n    content: \"Check that we have to enter enhanced security mode & input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text admin',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, ...closeProfileDialog({\n    content: \"check that demo user has been de-totp'd\",\n    totp_state: false,\n}),\n])\n});\n", "odoo.define('auth_totp_mail.tours', function(require) {\n\"use strict\";\n\nconst tour = require('web_tour.tour');\n\nfunction openAccountSettingsTab() {\n    return [{\n        content: 'Go to settings',\n        trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n    }, {\n        content: 'Wait for page',\n        trigger: '.o_menu_brand:contains(\"Settings\")',\n        run: () => {}\n    }, {\n        content: \"Open Users menu\",\n        trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n    }, {\n        content: \"Open Users view\",\n        trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n        run: function (helpers) {\n            // funny story: the users view we're trying to reach, sometimes we're\n            // already there, but if we re-click the next step executes before the\n            // action has the time to re-load, the one after that doesn't, and our\n            // selection get discarded by the action reloading, so here try to\n            // see if we're already on the users action through the breadcrumb and\n            // just close the menu if so\n            const $crumb = $('.breadcrumb');\n            if ($crumb.text().indexOf('Users') === -1) {\n                // on general settings page, click menu\n                helpers.click();\n            } else {\n                // else close menu\n                helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n            }\n        }\n    }];\n}\n\ntour.register('totp_admin_self_invite', {\n    test: true,\n    url: '/web'\n}, [tour.stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(admin)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that user cannot invite themselves to use 2FA.\",\n    trigger: \"body\",\n    run: function () {\n        const inviteBtn = $('button:contains(Invite to use 2FA)')[0];\n        if (!inviteBtn) {\n            $('body').addClass('CannotInviteYourself');\n        }\n    }\n}, {\n    content: \"check that user cannot invite themself.\",\n    trigger: \"body.CannotInviteYourself\"\n}]);\n\ntour.register('totp_admin_invite', {\n    test: true,\n    url: '/web'\n}, [tour.stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that demo user can be invited to use 2FA.\",\n    trigger: \"button:contains(Invite to use 2FA)\",\n}]);\n\n});", "odoo.define('auth_totp_portal.tours', function(require) {\n\"use strict\";\n\nconst tour = require('web_tour.tour');\nconst ajax = require('web.ajax');\n\ntour.register('totportal_tour_setup', {\n    test: true,\n    url: '/my/security'\n}, [{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_enable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"scan the barcode below\")',\n    run: () => {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    run: async function(helpers) {\n        const secret = this.$anchor.closest('div').find('span[name=\"secret\"]').text();\n        const token = await ajax.jsonRpc('/totphook', 'call', {\n            secret\n        });\n        helpers._text(helpers._get_action_values('input[name=code]'), token);\n        helpers._click(helpers._get_action_values('button.btn-primary:contains(Activate)'));\n    }\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Disable two-factor authentication)',\n    run: () => {}\n}]);\n\ntour.register('totportal_login_enabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    run: async function (helpers) {\n        const token = await ajax.jsonRpc('/totphook', 'call', {});\n        helpers._text(helpers._get_action_values(), token);\n        // FIXME: is there a way to put the button as its own step trigger without\n        //        the tour straight blowing through and not waiting for this?\n        helpers._click(helpers._get_action_values('button:contains(\"Log in\")'));\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(Documents)\",\n    run: () => {}\n}, {\n    content: \"go back to security\",\n    trigger: \"a:contains(Security)\",\n},{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_disable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Enable two-factor authentication)',\n    run: () => {}\n}]);\n\ntour.register('totportal_login_disabled', {\n    test: true,\n    url: '/'\n}, [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(Documents)\",\n    run: () => {}\n}]);\n});\n", "odoo.define('website_links.website_links_tour', function (require) {\n'use strict';\n\nvar tour = require(\"web_tour.tour\");\n\ntour.register('website_links_tour', {\n    test: true,\n    url: '/r',\n},\n    [\n        // 1. Create a tracked URL\n        {\n            content: \"check that existing links are shown\",\n            trigger: '#o_website_links_recent_links .btn_shorten_url_clipboard',\n            run: function () {}, // it's a check\n        },\n        {\n            content: \"fill the form and submit it\",\n            trigger: '#o_website_links_link_tracker_form input#url',\n            run: function () {\n                var url = window.location.host + '/contactus';\n                $('#o_website_links_link_tracker_form input#url').val(url);\n                const campaignId = Object.entries($('#s2id_campaign-select')[0]).find(([key, value]) => value.select2)[1].select2.opts.data.find(d => d.text === \"Sale\").id\n                $('.o_website_links_utm_forms input#campaign-select').val(campaignId).change();\n                const channelId = Object.entries($('#s2id_channel-select')[0]).find(([key, value]) => value.select2)[1].select2.opts.data.find(d => d.text === \"Website\").id\n                $('.o_website_links_utm_forms input#channel-select').val(channelId).change();\n                const sourceId = Object.entries($('#s2id_source-select')[0]).find(([key, value]) => value.select2)[1].select2.opts.data.find(d => d.text === \"Search engine\").id\n                $('.o_website_links_utm_forms input#source-select').val(sourceId).change();\n                $('#btn_shorten_url').click();\n            },\n        },\n        // 2. Visit it\n        {\n            content: \"check that link was created and visit it\",\n            extra_trigger: '#o_website_links_recent_links .truncate_text:first():contains(\"Contact Us\")',\n            trigger: '#o_website_links_link_tracker_form #generated_tracked_link:contains(\"/r/\")',\n            run: function () {\n                window.location.href = $('#generated_tracked_link').text();\n            },\n        },\n        {\n            content: \"check that we landed on correct page with correct query strings\",\n            trigger: '.s_title h1:containsExact(\"Contact us\")',\n            run: function () {\n                var expectedUrl = \"/contactus?utm_campaign=Sale&utm_source=Search+engine&utm_medium=Website\";\n                if (window.location.pathname + window.location.search !== expectedUrl) {\n                    console.error(\"The link was not correctly created. \" + window.location.search);\n                }\n                window.location.href = '/r';\n            },\n        },\n        // 3. Check that counter got incremented and charts are correctly displayed\n        {\n            content: \"filter recently used links\",\n            trigger: '#filter-recently-used-links',\n        },\n        {\n            content: \"visit link stats page\",\n            trigger: '#o_website_links_recent_links a:containsExact(\"Stats\"):first',\n        },\n        {\n            content: \"check click number and ensure graphs are initialized\",\n            extra_trigger: '.website_links_click_chart .title:contains(\"1 clicks\")',\n            trigger: 'canvas',\n            run: function () {}, // it's a check\n        },\n        {\n            content: \"click on Last Month tab\",\n            trigger: '.o_website_links_chart .graph-tabs a:contains(\"Last Month\")',\n        },\n        {\n            content: \"ensure tab is correctly resized\",\n            trigger: '#last_month_charts #last_month_clicks_chart',\n            run: function () {\n                var width = $('#last_month_charts #last_month_clicks_chart').width();\n                if (width < 50) {\n                    console.error(\"The graphs are probably not resized on tab change.\");\n                }\n            },\n        },\n    ]\n);\n\n});\n", "/** @odoo-module */\n\nimport wTourUtils from 'website.tour_utils';\n\nwTourUtils.registerWebsitePreviewTour('newsletter_block_edition', {\n    test: true,\n    url: '/',\n    edition: true,\n}, [\n    // Put a Newsletter block.\n    wTourUtils.dragNDrop({\n        id: 's_newsletter_block',\n        name: 'Newsletter Block',\n    }),\n    {\n        content: 'Wait for the list id to be set.',\n        trigger: 'iframe .s_newsletter_block[data-list-id]:not([data-list-id=\"0\"]) .s_newsletter_subscribe_form',\n        run: () => null, // it's a check\n    },\n    ...wTourUtils.clickOnSave(),\n    // Subscribe to the newsletter.\n    {\n        content: 'Wait for the email to be loaded in the newsletter input',\n        trigger: 'iframe .s_newsletter_block .js_subscribe_btn',\n        extra_trigger: 'iframe .s_newsletter_block input:propValue(admin@yourcompany.example.com)',\n    },\n    // Change the link style.\n    ...wTourUtils.clickOnEditAndWaitEditMode(),\n    {\n        content: 'Click on the Subscribe button',\n        trigger: 'iframe .s_newsletter_block .js_subscribe_btn',\n    },\n    {\n        content: 'Toggle the option to display the Thanks button',\n        trigger: 'we-button[data-toggle-thanks-button] we-checkbox',\n    },\n    {\n        content: 'Click on the Thanks button',\n        trigger: 'iframe .s_newsletter_block .js_subscribed_btn',\n    },\n    {\n        content: 'Click on the link style button',\n        trigger: '[data-bs-original-title=\"Link Style\"]',\n    },\n    {\n        content: 'Click on the primary style button',\n        trigger: '[data-value=\"primary\"]',\n    },\n    {\n        content: 'Change the shape of the button',\n        trigger: '[data-bs-original-title=\"Link Shape\"]',\n    },\n    {\n        content: 'Click on the flat shape button',\n        trigger: '[data-value=\"flat\"]',\n    },\n    ...wTourUtils.clickOnSave(),\n    // Check if the button style is correct (make sure that the 'btn-success'\n    // class which is not suggested as a valid style in the editor panel did not\n    // prevent to edit the button).\n    {\n        content: 'Check that the link style is correct',\n        trigger: 'iframe .s_newsletter_block .js_subscribed_btn.btn.btn-primary.flat:not(.btn-success)',\n    },\n]);\n", "odoo.define(\"website_mass_mailing.tour.newsletter_popup_edition\", function (require) {\n\"use strict\";\n\nconst wTourUtils = require('website.tour_utils');\nconst newsletterPopupUseTour = require('website_mass_mailing.tour.newsletter_popup_use');\n\nwTourUtils.registerWebsitePreviewTour(\"newsletter_popup_edition\", {\n    test: true,\n    url: \"/\",\n    edition: true,\n}, [\n    wTourUtils.dragNDrop({\n        id: 's_newsletter_subscribe_popup',\n        name: 'Newsletter Popup',\n    }),\n    {\n        content: \"Check the modal is opened for edition\",\n        trigger: 'iframe .o_newsletter_popup .modal:visible',\n        in_modal: false,\n        run: () => null,\n    },\n    ...wTourUtils.clickOnSave(),\n    {\n        content: \"Check the modal has been saved, closed\",\n        trigger: 'iframe body:has(.o_newsletter_popup)',\n        extra_trigger: 'iframe body:not(.editor_enable)',\n        run: newsletterPopupUseTour.ensurePopupNotVisible,\n    }\n]);\n});\n\nodoo.define(\"website_mass_mailing.tour.newsletter_popup_use\", function (require) {\n\"use strict\";\n\nconst tour = require('web_tour.tour');\n\nfunction ensurePopupNotVisible() {\n    const $modal = this.$anchor.find('.o_newsletter_popup .modal');\n    if ($modal.length !== 1) {\n        // Avoid the tour to succeed if the modal can't be found while\n        // it should. Indeed, if the selector ever becomes wrong and the\n        // expected element is actually not found anymore, the test\n        // won't be testing anything anymore as the visible check will\n        // always be truthy on empty jQuery element.\n        console.error(\"Modal couldn't be found in the DOM. The tour is not working as expected.\");\n    }\n    if ($modal.is(':visible')) {\n        console.error('Modal should not be opened.');\n    }\n}\n\ntour.register('newsletter_popup_use', {\n    test: true,\n    url: '/',\n}, [\n    {\n        content: \"Check the modal is not yet opened and force it opened\",\n        trigger: 'body:has(.o_newsletter_popup)',\n        run: ensurePopupNotVisible,\n    },\n    {\n        content: \"Check the modal is now opened and enter text in the subscribe input\",\n        trigger: '.o_newsletter_popup .modal input',\n        in_modal: false,\n        run: 'text hello@world.com',\n    },\n    {\n        content: \"Subscribe\",\n        trigger: '.modal-dialog .btn-primary',\n    },\n    {\n        content: \"Check the modal is now closed\",\n        trigger: 'body:has(.o_newsletter_popup)',\n        run: ensurePopupNotVisible,\n    }\n]);\n\nreturn {\n    ensurePopupNotVisible: ensurePopupNotVisible,\n};\n});\n"], "file": "/web/assets/399-465c8f4/web.assets_tests.js", "sourceRoot": "../../../"}